//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

#include "QTextToSpeechEngineSlots.hpp"

QTextToSpeechEngineSlots::QTextToSpeechEngineSlots(QObject *parent) : QObject(parent)
{
}

QTextToSpeechEngineSlots::~QTextToSpeechEngineSlots()
{
}

#if (QT_VERSION >= QT_VERSION_CHECK(5, 10, 0))
void QTextToSpeechEngineSlots::stateChanged(QTextToSpeech::State state)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "stateChanged(QTextToSpeech::State)");

  if (cb != NULL) {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QTEXTTOSPEECHENGINE");
    PHB_ITEM pstate = hb_itemPutNI(NULL, static_cast<int>(state));

    hb_vmEvalBlockV(cb, 2, psender, pstate);

    hb_itemRelease(psender);
    hb_itemRelease(pstate);
  }
}
#endif

void QTextToSpeechEngineSlots_connect_signal(const QString &signal, const QString &slot)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 10, 0))
  QTextToSpeechEngine *obj = (QTextToSpeechEngine *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
    QTextToSpeechEngineSlots *s = QCoreApplication::instance()->findChild<QTextToSpeechEngineSlots *>();

    if (s == NULL) {
      s = new QTextToSpeechEngineSlots();
      s->moveToThread(QCoreApplication::instance()->thread());
      s->setParent(QCoreApplication::instance());
    }

    hb_retl(Qt5xHb::Signals_connection_disconnection(s, signal, slot));
  } else {
    hb_retl(false);
  }
#else
  hb_retl(false);
#endif
}
