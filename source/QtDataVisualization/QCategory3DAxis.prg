//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT5XHB_NO_REQUESTS
#endif

CLASS QCategory3DAxis INHERIT QAbstract3DAxis

   METHOD new
   METHOD delete
   METHOD labels
   METHOD setLabels

   METHOD onLabelsChanged

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QCategory3DAxis
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#include <QtDataVisualization/QCategory3DAxis>
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"
#include "qt5xhb_events.hpp"
#include "qt5xhb_signals.hpp"

#ifdef __XHARBOUR__
#include <QtDataVisualization/QCategory3DAxis>
#endif

    using namespace QtDataVisualization;

/*
QCategory3DAxis( QObject * parent = nullptr )
*/
HB_FUNC_STATIC(QCATEGORY3DAXIS_NEW)
{
  if (ISBETWEEN(0, 1) && ISQOBJECTORNIL(1))
  {
    QCategory3DAxis *obj = new QCategory3DAxis(OPQOBJECT(1, nullptr));
    Qt5xHb::returnNewObject(obj, false);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
virtual ~QCategory3DAxis()
*/
HB_FUNC_STATIC(QCATEGORY3DAXIS_DELETE)
{
  QCategory3DAxis *obj = (QCategory3DAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
    Qt5xHb::Events_disconnect_all_events(obj, true);
    Qt5xHb::Signals_disconnect_all_signals(obj, true);
    delete obj;
    obj = NULL;
    PHB_ITEM ptr = hb_itemPutPtr(NULL, NULL);
    hb_objSendMsg(hb_stackSelfItem(), "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
QStringList labels() const
*/
HB_FUNC_STATIC(QCATEGORY3DAXIS_LABELS)
{
  QCategory3DAxis *obj = (QCategory3DAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RQSTRINGLIST(obj->labels());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void setLabels( const QStringList &labels )
*/
HB_FUNC_STATIC(QCATEGORY3DAXIS_SETLABELS)
{
  QCategory3DAxis *obj = (QCategory3DAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISARRAY(1))
    {
#endif
      obj->setLabels(PQSTRINGLIST(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

void QCategory3DAxisSlots_connect_signal(const QString &signal, const QString &slot);

HB_FUNC_STATIC(QCATEGORY3DAXIS_ONLABELSCHANGED)
{
  QCategory3DAxisSlots_connect_signal("labelsChanged()", "labelsChanged()");
}

#pragma ENDDUMP
