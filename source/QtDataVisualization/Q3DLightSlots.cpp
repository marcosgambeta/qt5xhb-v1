//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

#include "Q3DLightSlots.hpp"

Q3DLightSlots::Q3DLightSlots(QObject *parent) : QObject(parent)
{
}

Q3DLightSlots::~Q3DLightSlots()
{
}

#if (QT_VERSION >= QT_VERSION_CHECK(5, 9, 0))
void Q3DLightSlots::autoPositionChanged(bool autoPosition)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "autoPositionChanged(bool)");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "Q3DLIGHT");
    PHB_ITEM pautoPosition = hb_itemPutL(NULL, autoPosition);

    hb_vmEvalBlockV(cb, 2, psender, pautoPosition);

    hb_itemRelease(psender);
    hb_itemRelease(pautoPosition);
  }
}
#endif

void Q3DLightSlots_connect_signal(const QString &signal, const QString &slot)
{
  Q3DLight *obj = (Q3DLight *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
    Q3DLightSlots *s = QCoreApplication::instance()->findChild<Q3DLightSlots *>();

    if (s == NULL)
    {
      s = new Q3DLightSlots();
      s->moveToThread(QCoreApplication::instance()->thread());
      s->setParent(QCoreApplication::instance());
    }

    hb_retl(Qt5xHb::Signals_connection_disconnection(s, signal, slot));
  }
  else
  {
    hb_retl(false);
  }
}
