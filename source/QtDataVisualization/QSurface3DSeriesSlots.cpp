//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

#include "QSurface3DSeriesSlots.hpp"

QSurface3DSeriesSlots::QSurface3DSeriesSlots(QObject *parent) : QObject(parent)
{
}

QSurface3DSeriesSlots::~QSurface3DSeriesSlots()
{
}

void QSurface3DSeriesSlots::dataProxyChanged(QSurfaceDataProxy *proxy)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "dataProxyChanged(QSurfaceDataProxy*)");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QSURFACE3DSERIES");
    PHB_ITEM pproxy = Qt5xHb::Signals_return_qobject(proxy, "QSURFACEDATAPROXY");

    hb_vmEvalBlockV(cb, 2, psender, pproxy);

    hb_itemRelease(psender);
    hb_itemRelease(pproxy);
  }
}

void QSurface3DSeriesSlots::drawModeChanged(QSurface3DSeries::DrawFlags mode)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "drawModeChanged(QSurface3DSeries::DrawFlags)");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QSURFACE3DSERIES");
    PHB_ITEM pmode = hb_itemPutNI(NULL, static_cast<int>(mode));

    hb_vmEvalBlockV(cb, 2, psender, pmode);

    hb_itemRelease(psender);
    hb_itemRelease(pmode);
  }
}

void QSurface3DSeriesSlots::flatShadingEnabledChanged(bool enable)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "flatShadingEnabledChanged(bool)");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QSURFACE3DSERIES");
    PHB_ITEM penable = hb_itemPutL(NULL, enable);

    hb_vmEvalBlockV(cb, 2, psender, penable);

    hb_itemRelease(psender);
    hb_itemRelease(penable);
  }
}

void QSurface3DSeriesSlots::flatShadingSupportedChanged(bool enable)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "flatShadingSupportedChanged(bool)");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QSURFACE3DSERIES");
    PHB_ITEM penable = hb_itemPutL(NULL, enable);

    hb_vmEvalBlockV(cb, 2, psender, penable);

    hb_itemRelease(psender);
    hb_itemRelease(penable);
  }
}

void QSurface3DSeriesSlots::selectedPointChanged(const QPoint &position)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "selectedPointChanged(QPoint)");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QSURFACE3DSERIES");
    PHB_ITEM pposition = Qt5xHb::Signals_return_object((void *)&position, "QPOINT");

    hb_vmEvalBlockV(cb, 2, psender, pposition);

    hb_itemRelease(psender);
    hb_itemRelease(pposition);
  }
}

void QSurface3DSeriesSlots::textureChanged(const QImage &image)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "textureChanged(QImage)");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QSURFACE3DSERIES");
    PHB_ITEM pimage = Qt5xHb::Signals_return_object((void *)&image, "QIMAGE");

    hb_vmEvalBlockV(cb, 2, psender, pimage);

    hb_itemRelease(psender);
    hb_itemRelease(pimage);
  }
}

void QSurface3DSeriesSlots::textureFileChanged(const QString &filename)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "textureFileChanged(QString)");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QSURFACE3DSERIES");
    PHB_ITEM pfilename = hb_itemPutC(NULL, QSTRINGTOSTRING(filename));

    hb_vmEvalBlockV(cb, 2, psender, pfilename);

    hb_itemRelease(psender);
    hb_itemRelease(pfilename);
  }
}

void QSurface3DSeriesSlots_connect_signal(const QString &signal, const QString &slot)
{
  QSurface3DSeries *obj = (QSurface3DSeries *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
    QSurface3DSeriesSlots *s = QCoreApplication::instance()->findChild<QSurface3DSeriesSlots *>();

    if (s == NULL)
    {
      s = new QSurface3DSeriesSlots();
      s->moveToThread(QCoreApplication::instance()->thread());
      s->setParent(QCoreApplication::instance());
    }

    hb_retl(Qt5xHb::Signals_connection_disconnection(s, signal, slot));
  }
  else
  {
    hb_retl(false);
  }
}
