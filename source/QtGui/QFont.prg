//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT5XHB_NO_REQUESTS
#endif

CLASS QFont

   DATA pointer
   DATA self_destruction INIT .F.

   METHOD new
   METHOD delete
   METHOD bold
   METHOD capitalization
   METHOD defaultFamily
   METHOD exactMatch
   METHOD family
   METHOD fixedPitch
   METHOD fromString
   METHOD isCopyOf
   METHOD italic
   METHOD kerning
   METHOD key
   METHOD lastResortFamily
   METHOD lastResortFont
   METHOD letterSpacing
   METHOD letterSpacingType
   METHOD overline
   METHOD pixelSize
   METHOD pointSize
   METHOD pointSizeF
   METHOD rawMode
   METHOD rawName
   METHOD resolve
   METHOD setBold
   METHOD setCapitalization
   METHOD setFamily
   METHOD setFixedPitch
   METHOD setItalic
   METHOD setKerning
   METHOD setLetterSpacing
   METHOD setOverline
   METHOD setPixelSize
   METHOD setPointSize
   METHOD setPointSizeF
   METHOD setRawMode
   METHOD setRawName
   METHOD setStretch
   METHOD setStrikeOut
   METHOD setStyle
   METHOD setStyleHint
   METHOD setStyleStrategy
   METHOD setUnderline
   METHOD setWeight
   METHOD setWordSpacing
   METHOD stretch
   METHOD strikeOut
   METHOD style
   METHOD styleHint
   METHOD styleStrategy
   METHOD toString
   METHOD underline
   METHOD weight
   METHOD wordSpacing
   METHOD insertSubstitution
   METHOD insertSubstitutions
   METHOD substitute
   METHOD substitutes
   METHOD substitutions
   METHOD toVariant
   METHOD fromVariant

   METHOD newFrom
   METHOD newFromObject
   METHOD newFromPointer
   METHOD selfDestruction
   METHOD setSelfDestruction

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QFont
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#include <QtGui/QFont>
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"

#ifdef __XHARBOUR__
#include <QtGui/QFont>
#endif

#include <QtCore/QStringList>
#include <QtCore/QVariant>

HB_FUNC_STATIC(QFONT_NEW)
{
  if (ISNUMPAR(0)) {
    /*
    QFont()
    */
    QFont *obj = new QFont();
    Qt5xHb::returnNewObject(obj, true);
  } else if (ISBETWEEN(1, 4) && HB_ISCHAR(1) && ISNUMORNIL(2) && ISNUMORNIL(3) &&
           ISLOGORNIL(4)) {
    /*
    QFont( const QString &family, int pointSize = -1, int weight = -1, bool italic = false )
    */
    QFont *obj = new QFont(PQSTRING(1), OPINT(2, -1), OPINT(3, -1), OPBOOL(4, false));
    Qt5xHb::returnNewObject(obj, true);
  } else if (ISNUMPAR(2) && ISQFONT(1) && HB_ISOBJECT(2)) {
    /*
    QFont( const QFont &font, QPaintDevice * pd )
    */
    QFont *obj = new QFont(*PQFONT(1), PQPAINTDEVICE(2));
    Qt5xHb::returnNewObject(obj, true);
  } else if (ISNUMPAR(1) && ISQFONT(1)) {
    /*
    QFont( const QFont &font )
    */
    QFont *obj = new QFont(*PQFONT(1));
    Qt5xHb::returnNewObject(obj, true);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QFONT_DELETE)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
    delete obj;
    obj = NULL;
    PHB_ITEM ptr = hb_itemPutPtr(NULL, NULL);
    hb_objSendMsg(hb_stackSelfItem(), "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
bool bold() const
*/
HB_FUNC_STATIC(QFONT_BOLD)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->bold());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QFont::Capitalization capitalization() const
*/
HB_FUNC_STATIC(QFONT_CAPITALIZATION)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->capitalization());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString defaultFamily() const
*/
HB_FUNC_STATIC(QFONT_DEFAULTFAMILY)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQSTRING(obj->defaultFamily());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool exactMatch() const
*/
HB_FUNC_STATIC(QFONT_EXACTMATCH)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->exactMatch());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString family() const
*/
HB_FUNC_STATIC(QFONT_FAMILY)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQSTRING(obj->family());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool fixedPitch() const
*/
HB_FUNC_STATIC(QFONT_FIXEDPITCH)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->fixedPitch());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool fromString( const QString &descrip )
*/
HB_FUNC_STATIC(QFONT_FROMSTRING)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISCHAR(1)) {
#endif
      RBOOL(obj->fromString(PQSTRING(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool isCopyOf( const QFont &f ) const
*/
HB_FUNC_STATIC(QFONT_ISCOPYOF)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQFONT(1)) {
#endif
      RBOOL(obj->isCopyOf(*PQFONT(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool italic() const
*/
HB_FUNC_STATIC(QFONT_ITALIC)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->italic());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool kerning() const
*/
HB_FUNC_STATIC(QFONT_KERNING)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->kerning());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString key() const
*/
HB_FUNC_STATIC(QFONT_KEY)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQSTRING(obj->key());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString lastResortFamily() const
*/
HB_FUNC_STATIC(QFONT_LASTRESORTFAMILY)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQSTRING(obj->lastResortFamily());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString lastResortFont() const
*/
HB_FUNC_STATIC(QFONT_LASTRESORTFONT)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQSTRING(obj->lastResortFont());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
qreal letterSpacing() const
*/
HB_FUNC_STATIC(QFONT_LETTERSPACING)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQREAL(obj->letterSpacing());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QFont::SpacingType letterSpacingType() const
*/
HB_FUNC_STATIC(QFONT_LETTERSPACINGTYPE)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->letterSpacingType());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool overline() const
*/
HB_FUNC_STATIC(QFONT_OVERLINE)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->overline());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int pixelSize() const
*/
HB_FUNC_STATIC(QFONT_PIXELSIZE)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RINT(obj->pixelSize());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int pointSize() const
*/
HB_FUNC_STATIC(QFONT_POINTSIZE)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RINT(obj->pointSize());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
qreal pointSizeF() const
*/
HB_FUNC_STATIC(QFONT_POINTSIZEF)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQREAL(obj->pointSizeF());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool rawMode() const
*/
HB_FUNC_STATIC(QFONT_RAWMODE)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->rawMode());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString rawName() const
*/
HB_FUNC_STATIC(QFONT_RAWNAME)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQSTRING(obj->rawName());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QFont resolve( const QFont &other ) const
*/
HB_FUNC_STATIC(QFONT_RESOLVE)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQFONT(1)) {
#endif
      QFont *ptr = new QFont(obj->resolve(*PQFONT(1)));
      Qt5xHb::createReturnClass(ptr, "QFONT", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void setBold( bool enable )
*/
HB_FUNC_STATIC(QFONT_SETBOLD)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISLOG(1)) {
#endif
      obj->setBold(PBOOL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setCapitalization( QFont::Capitalization caps )
*/
HB_FUNC_STATIC(QFONT_SETCAPITALIZATION)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->setCapitalization((QFont::Capitalization)hb_parni(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setFamily( const QString &family )
*/
HB_FUNC_STATIC(QFONT_SETFAMILY)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISCHAR(1)) {
#endif
      obj->setFamily(PQSTRING(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setFixedPitch( bool enable )
*/
HB_FUNC_STATIC(QFONT_SETFIXEDPITCH)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISLOG(1)) {
#endif
      obj->setFixedPitch(PBOOL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setItalic( bool enable )
*/
HB_FUNC_STATIC(QFONT_SETITALIC)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISLOG(1)) {
#endif
      obj->setItalic(PBOOL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setKerning( bool enable )
*/
HB_FUNC_STATIC(QFONT_SETKERNING)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISLOG(1)) {
#endif
      obj->setKerning(PBOOL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setLetterSpacing( QFont::SpacingType type, qreal spacing )
*/
HB_FUNC_STATIC(QFONT_SETLETTERSPACING)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2)) {
#endif
      obj->setLetterSpacing((QFont::SpacingType)hb_parni(1), PQREAL(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setOverline( bool enable )
*/
HB_FUNC_STATIC(QFONT_SETOVERLINE)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISLOG(1)) {
#endif
      obj->setOverline(PBOOL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setPixelSize( int pixelSize )
*/
HB_FUNC_STATIC(QFONT_SETPIXELSIZE)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->setPixelSize(PINT(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setPointSize( int pointSize )
*/
HB_FUNC_STATIC(QFONT_SETPOINTSIZE)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->setPointSize(PINT(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setPointSizeF( qreal pointSize )
*/
HB_FUNC_STATIC(QFONT_SETPOINTSIZEF)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->setPointSizeF(PQREAL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setRawMode( bool enable )
*/
HB_FUNC_STATIC(QFONT_SETRAWMODE)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISLOG(1)) {
#endif
      obj->setRawMode(PBOOL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setRawName( const QString &name )
*/
HB_FUNC_STATIC(QFONT_SETRAWNAME)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISCHAR(1)) {
#endif
      obj->setRawName(PQSTRING(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setStretch( int factor )
*/
HB_FUNC_STATIC(QFONT_SETSTRETCH)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->setStretch(PINT(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setStrikeOut( bool enable )
*/
HB_FUNC_STATIC(QFONT_SETSTRIKEOUT)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISLOG(1)) {
#endif
      obj->setStrikeOut(PBOOL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setStyle( QFont::Style style )
*/
HB_FUNC_STATIC(QFONT_SETSTYLE)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->setStyle((QFont::Style)hb_parni(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setStyleHint( QFont::StyleHint hint, QFont::StyleStrategy strategy = QFont::PreferDefault )
*/
HB_FUNC_STATIC(QFONT_SETSTYLEHINT)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
      obj->setStyleHint((QFont::StyleHint)hb_parni(1),
                        HB_ISNIL(2) ? (QFont::StyleStrategy)QFont::PreferDefault : (QFont::StyleStrategy)hb_parni(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setStyleStrategy( QFont::StyleStrategy s )
*/
HB_FUNC_STATIC(QFONT_SETSTYLESTRATEGY)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->setStyleStrategy((QFont::StyleStrategy)hb_parni(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setUnderline( bool enable )
*/
HB_FUNC_STATIC(QFONT_SETUNDERLINE)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISLOG(1)) {
#endif
      obj->setUnderline(PBOOL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setWeight( int weight )
*/
HB_FUNC_STATIC(QFONT_SETWEIGHT)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->setWeight(PINT(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setWordSpacing( qreal spacing )
*/
HB_FUNC_STATIC(QFONT_SETWORDSPACING)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->setWordSpacing(PQREAL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
int stretch() const
*/
HB_FUNC_STATIC(QFONT_STRETCH)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RINT(obj->stretch());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool strikeOut() const
*/
HB_FUNC_STATIC(QFONT_STRIKEOUT)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->strikeOut());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QFont::Style style() const
*/
HB_FUNC_STATIC(QFONT_STYLE)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->style());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QFont::StyleHint styleHint() const
*/
HB_FUNC_STATIC(QFONT_STYLEHINT)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->styleHint());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QFont::StyleStrategy styleStrategy() const
*/
HB_FUNC_STATIC(QFONT_STYLESTRATEGY)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->styleStrategy());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toString() const
*/
HB_FUNC_STATIC(QFONT_TOSTRING)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQSTRING(obj->toString());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool underline() const
*/
HB_FUNC_STATIC(QFONT_UNDERLINE)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->underline());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int weight() const
*/
HB_FUNC_STATIC(QFONT_WEIGHT)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RINT(obj->weight());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
qreal wordSpacing() const
*/
HB_FUNC_STATIC(QFONT_WORDSPACING)
{
  QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQREAL(obj->wordSpacing());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
static void insertSubstitution( const QString &familyName, const QString &substituteName )
*/
HB_FUNC_STATIC(QFONT_INSERTSUBSTITUTION)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISNUMPAR(2) && HB_ISCHAR(1) && HB_ISCHAR(2)) {
#endif
    QFont::insertSubstitution(PQSTRING(1), PQSTRING(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif

  hb_itemReturn(hb_stackSelfItem());
}

/*
static void insertSubstitutions( const QString &familyName, const QStringList &substituteNames )
*/
HB_FUNC_STATIC(QFONT_INSERTSUBSTITUTIONS)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISNUMPAR(2) && HB_ISCHAR(1) && HB_ISARRAY(2)) {
#endif
    QFont::insertSubstitutions(PQSTRING(1), PQSTRINGLIST(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif

  hb_itemReturn(hb_stackSelfItem());
}

/*
static QString substitute( const QString &familyName )
*/
HB_FUNC_STATIC(QFONT_SUBSTITUTE)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISNUMPAR(1) && HB_ISCHAR(1)) {
#endif
    RQSTRING(QFont::substitute(PQSTRING(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

/*
static QStringList substitutes( const QString &familyName )
*/
HB_FUNC_STATIC(QFONT_SUBSTITUTES)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISNUMPAR(1) && HB_ISCHAR(1)) {
#endif
    RQSTRINGLIST(QFont::substitutes(PQSTRING(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

/*
static QStringList substitutions()
*/
HB_FUNC_STATIC(QFONT_SUBSTITUTIONS)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISNUMPAR(0)) {
#endif
    RQSTRINGLIST(QFont::substitutions());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

HB_FUNC_STATIC(QFONT_TOVARIANT)
{
  if (ISNUMPAR(0)) {
    /*
    QVariant toVariant()
    */
    QFont *obj = (QFont *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QVariant *variant = new QVariant();
      variant->setValue<QFont>(*obj);
      Qt5xHb::createReturnClass(variant, "QVARIANT", true);
    }
  } else if (ISNUMPAR(1) && ISQFONT(1)) {
    /*
    static QVariant toVariant( const QFont &)
    */
    QFont *font = (QFont *)hb_itemGetPtr(hb_objSendMsg(hb_param(1, HB_IT_OBJECT), "POINTER", 0));
    QVariant *variant = new QVariant();
    variant->setValue<QFont>(*font);
    Qt5xHb::createReturnClass(variant, "QVARIANT", true);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
static QFont fromVariant( const QVariant &)
*/
HB_FUNC_STATIC(QFONT_FROMVARIANT)
{
  if (ISNUMPAR(1) && ISQVARIANT(1)) {
    QVariant *variant = (QVariant *)hb_itemGetPtr(hb_objSendMsg(hb_param(1, HB_IT_OBJECT), "POINTER", 0));
    QFont *font = new QFont(variant->value<QFont>());
    Qt5xHb::createReturnClass(font, "QFONT", true);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QFONT_NEWFROM)
{
  PHB_ITEM self = hb_stackSelfItem();

  if (hb_pcount() == 1 && HB_ISOBJECT(1)) {
    PHB_ITEM ptr = hb_itemPutPtr(NULL, hb_itemGetPtr(hb_objSendMsg(hb_param(1, HB_IT_OBJECT), "POINTER", 0)));
    hb_objSendMsg(self, "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
    PHB_ITEM des = hb_itemPutL(NULL, false);
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else if (hb_pcount() == 1 && HB_ISPOINTER(1)) {
    PHB_ITEM ptr = hb_itemPutPtr(NULL, hb_itemGetPtr(hb_param(1, HB_IT_POINTER)));
    hb_objSendMsg(self, "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
    PHB_ITEM des = hb_itemPutL(NULL, false);
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }

  hb_itemReturn(self);
}

HB_FUNC_STATIC(QFONT_NEWFROMOBJECT)
{
  HB_FUNC_EXEC(QFONT_NEWFROM);
}

HB_FUNC_STATIC(QFONT_NEWFROMPOINTER)
{
  HB_FUNC_EXEC(QFONT_NEWFROM);
}

HB_FUNC_STATIC(QFONT_SELFDESTRUCTION)
{
  hb_retl(hb_itemGetL(hb_objSendMsg(hb_stackSelfItem(), "SELF_DESTRUCTION", 0)));
}

HB_FUNC_STATIC(QFONT_SETSELFDESTRUCTION)
{
  PHB_ITEM self = hb_stackSelfItem();

  if (hb_pcount() == 1 && HB_ISLOG(1)) {
    PHB_ITEM des = hb_itemPutL(NULL, hb_parl(1));
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }

  hb_itemReturn(self);
}

#pragma ENDDUMP
