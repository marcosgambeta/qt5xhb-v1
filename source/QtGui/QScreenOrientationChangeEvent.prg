//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT5XHB_NO_REQUESTS
REQUEST QSCREEN
#endif

CLASS QScreenOrientationChangeEvent INHERIT QEvent

   METHOD new
   METHOD delete
   METHOD screen
   METHOD orientation

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QScreenOrientationChangeEvent
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#include <QtGui/QScreenOrientationChangeEvent>
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"

#ifdef __XHARBOUR__
#include <QtGui/QScreenOrientationChangeEvent>
#endif

#include <QtGui/QScreen>

    /*
    QScreenOrientationChangeEvent( QScreen * screen, Qt::ScreenOrientation orientation )
    */
HB_FUNC_STATIC(QSCREENORIENTATIONCHANGEEVENT_NEW)
{
  if (ISNUMPAR(2) && ISQSCREEN(1) && HB_ISNUM(2))
  {
    QScreenOrientationChangeEvent *obj =
        new QScreenOrientationChangeEvent(PQSCREEN(1), (Qt::ScreenOrientation)hb_parni(2));
    Qt5xHb::returnNewObject(obj, false);
  }
  else
  {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QSCREENORIENTATIONCHANGEEVENT_DELETE)
{
  QScreenOrientationChangeEvent *obj = (QScreenOrientationChangeEvent *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
    delete obj;
    obj = NULL;
    PHB_ITEM ptr = hb_itemPutPtr(NULL, NULL);
    hb_objSendMsg(hb_stackSelfItem(), "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
QScreen * screen() const
*/
HB_FUNC_STATIC(QSCREENORIENTATIONCHANGEEVENT_SCREEN)
{
  QScreenOrientationChangeEvent *obj = (QScreenOrientationChangeEvent *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      QScreen *ptr = obj->screen();
      Qt5xHb::createReturnQObjectClass(ptr, "QSCREEN");
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
Qt::ScreenOrientation orientation() const
*/
HB_FUNC_STATIC(QSCREENORIENTATIONCHANGEEVENT_ORIENTATION)
{
  QScreenOrientationChangeEvent *obj = (QScreenOrientationChangeEvent *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RENUM(obj->orientation());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

#pragma ENDDUMP
