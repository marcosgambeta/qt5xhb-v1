//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT5XHB_NO_REQUESTS
REQUEST QBRUSH
REQUEST QFONT
REQUEST QFONTINFO
REQUEST QFONTMETRICS
REQUEST QPAINTDEVICE
REQUEST QPAINTENGINE
REQUEST QPAINTERPATH
REQUEST QPEN
REQUEST QPOINT
REQUEST QRECT
REQUEST QRECTF
REQUEST QREGION
REQUEST QTRANSFORM
#endif

CLASS QPainter

   DATA pointer
   DATA self_destruction INIT .F.

   METHOD new
   METHOD delete
   METHOD background
   METHOD backgroundMode
   METHOD begin
   METHOD beginNativePainting
   METHOD boundingRect
   METHOD brush
   METHOD brushOrigin
   METHOD clipPath
   METHOD clipRegion
   METHOD combinedTransform
   METHOD compositionMode
   METHOD device
   METHOD deviceTransform
   METHOD drawArc
   METHOD drawChord
   METHOD drawConvexPolygon
   METHOD drawEllipse
   METHOD drawImage
   METHOD drawLine
   METHOD drawLines5
   METHOD drawLines6
   METHOD drawLines7
   METHOD drawLines8
   METHOD drawLines
   METHOD drawPath
   METHOD drawPicture
   METHOD drawPie
   METHOD drawPixmap
   METHOD drawPoint
   METHOD drawPoints
   METHOD drawPolygon
   METHOD drawPolyline
   METHOD drawRect
   METHOD drawRects3
   METHOD drawRects4
   METHOD drawRects
   METHOD drawRoundedRect
   METHOD drawStaticText
   METHOD drawText
   METHOD drawTiledPixmap
   METHOD end
   METHOD endNativePainting
   METHOD eraseRect
   METHOD fillPath
   METHOD fillRect
   METHOD font
   METHOD fontInfo
   METHOD fontMetrics
   METHOD hasClipping
   METHOD isActive
   METHOD layoutDirection
   METHOD opacity
   METHOD paintEngine
   METHOD pen
   METHOD renderHints
   METHOD resetTransform
   METHOD restore
   METHOD rotate
   METHOD save
   METHOD scale
   METHOD setBackground
   METHOD setBackgroundMode
   METHOD setBrush
   METHOD setBrushOrigin
   METHOD setClipPath
   METHOD setClipRect
   METHOD setClipRegion
   METHOD setClipping
   METHOD setCompositionMode
   METHOD setFont
   METHOD setLayoutDirection
   METHOD setOpacity
   METHOD setPen
   METHOD setRenderHint
   METHOD setRenderHints
   METHOD setTransform
   METHOD setViewTransformEnabled
   METHOD setViewport
   METHOD setWindow
   METHOD setWorldMatrixEnabled
   METHOD setWorldTransform
   METHOD shear
   METHOD strokePath
   METHOD testRenderHint
   METHOD transform
   METHOD translate
   METHOD viewTransformEnabled
   METHOD viewport
   METHOD window
   METHOD worldMatrixEnabled
   METHOD worldTransform

   METHOD newFrom
   METHOD newFromObject
   METHOD newFromPointer
   METHOD selfDestruction
   METHOD setSelfDestruction

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QPainter
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#include <QtGui/QPainter>
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"

#ifdef __XHARBOUR__
#include <QtGui/QPainter>
#endif

#include <QtGui/QPainterPath>

HB_FUNC_STATIC(QPAINTER_NEW)
{
  if (ISNUMPAR(0)) {
    /*
    QPainter()
    */
    QPainter *obj = new QPainter();
    Qt5xHb::returnNewObject(obj, true);
  } else if (ISNUMPAR(1) && HB_ISOBJECT(1)) {
    /*
    QPainter( QPaintDevice * device )
    */
    QPainter *obj = new QPainter(PQPAINTDEVICE(1));
    Qt5xHb::returnNewObject(obj, true);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPAINTER_DELETE)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
    delete obj;
    obj = NULL;
    PHB_ITEM ptr = hb_itemPutPtr(NULL, NULL);
    hb_objSendMsg(hb_stackSelfItem(), "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
const QBrush &background() const
*/
HB_FUNC_STATIC(QPAINTER_BACKGROUND)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      const QBrush *ptr = &obj->background();
      Qt5xHb::createReturnClass(ptr, "QBRUSH", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
Qt::BGMode backgroundMode() const
*/
HB_FUNC_STATIC(QPAINTER_BACKGROUNDMODE)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->backgroundMode());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool begin( QPaintDevice * device )
*/
HB_FUNC_STATIC(QPAINTER_BEGIN)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQPAINTDEVICE(1)) {
#endif
      RBOOL(obj->begin(PQPAINTDEVICE(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void beginNativePainting()
*/
HB_FUNC_STATIC(QPAINTER_BEGINNATIVEPAINTING)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      obj->beginNativePainting();
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

HB_FUNC_STATIC(QPAINTER_BOUNDINGRECT)
{
  if (ISNUMPAR(3) && ISQRECTF(1) && HB_ISNUM(2) && HB_ISCHAR(3)) {
    /*
    QRectF boundingRect( const QRectF &rectangle, int flags, const QString &text )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QRectF *ptr = new QRectF(obj->boundingRect(*PQRECTF(1), PINT(2), PQSTRING(3)));
      Qt5xHb::createReturnClass(ptr, "QRECTF", true);
    }
  } else if (ISNUMPAR(3) && ISQRECT(1) && HB_ISNUM(2) && HB_ISCHAR(3)) {
    /*
    QRect boundingRect( const QRect &rectangle, int flags, const QString &text )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QRect *ptr = new QRect(obj->boundingRect(*PQRECT(1), PINT(2), PQSTRING(3)));
      Qt5xHb::createReturnClass(ptr, "QRECT", true);
    }
  } else if (ISNUMPAR(6) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4) && HB_ISNUM(5) && HB_ISCHAR(6)) {
    /*
    QRect boundingRect( int x, int y, int w, int h, int flags, const QString &text )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QRect *ptr = new QRect(obj->boundingRect(PINT(1), PINT(2), PINT(3), PINT(4), PINT(5), PQSTRING(6)));
      Qt5xHb::createReturnClass(ptr, "QRECT", true);
    }
  } else if (ISBETWEEN(2, 3) && ISQRECTF(1) && HB_ISCHAR(2) && ISQTEXTOPTIONORNIL(3)) {
    /*
    QRectF boundingRect( const QRectF &rectangle, const QString &text, const QTextOption &option = QTextOption() )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QRectF *ptr = new QRectF(obj->boundingRect(*PQRECTF(1), PQSTRING(2),
                                                 HB_ISNIL(3) ? QTextOption() : *(QTextOption *)Qt5xHb::itemGetPtr(3)));
      Qt5xHb::createReturnClass(ptr, "QRECTF", true);
    }
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
const QBrush &brush() const
*/
HB_FUNC_STATIC(QPAINTER_BRUSH)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      const QBrush *ptr = &obj->brush();
      Qt5xHb::createReturnClass(ptr, "QBRUSH", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QPoint brushOrigin() const
*/
HB_FUNC_STATIC(QPAINTER_BRUSHORIGIN)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QPoint *ptr = new QPoint(obj->brushOrigin());
      Qt5xHb::createReturnClass(ptr, "QPOINT", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QPainterPath clipPath() const
*/
HB_FUNC_STATIC(QPAINTER_CLIPPATH)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QPainterPath *ptr = new QPainterPath(obj->clipPath());
      Qt5xHb::createReturnClass(ptr, "QPAINTERPATH", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QRegion clipRegion() const
*/
HB_FUNC_STATIC(QPAINTER_CLIPREGION)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QRegion *ptr = new QRegion(obj->clipRegion());
      Qt5xHb::createReturnClass(ptr, "QREGION", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QTransform combinedTransform() const
*/
HB_FUNC_STATIC(QPAINTER_COMBINEDTRANSFORM)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QTransform *ptr = new QTransform(obj->combinedTransform());
      Qt5xHb::createReturnClass(ptr, "QTRANSFORM", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QPainter::CompositionMode compositionMode() const
*/
HB_FUNC_STATIC(QPAINTER_COMPOSITIONMODE)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->compositionMode());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QPaintDevice * device() const
*/
HB_FUNC_STATIC(QPAINTER_DEVICE)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QPaintDevice *ptr = obj->device();
      Qt5xHb::createReturnClass(ptr, "QPAINTDEVICE", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
const QTransform &deviceTransform() const
*/
HB_FUNC_STATIC(QPAINTER_DEVICETRANSFORM)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      const QTransform *ptr = &obj->deviceTransform();
      Qt5xHb::createReturnClass(ptr, "QTRANSFORM", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QPAINTER_DRAWARC)
{
  if (ISNUMPAR(3) && ISQRECTF(1) && HB_ISNUM(2) && HB_ISNUM(3)) {
    /*
    void drawArc( const QRectF &rectangle, int startAngle, int spanAngle )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawArc(*PQRECTF(1), PINT(2), PINT(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(3) && ISQRECT(1) && HB_ISNUM(2) && HB_ISNUM(3)) {
    /*
    void drawArc( const QRect &rectangle, int startAngle, int spanAngle )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawArc(*PQRECT(1), PINT(2), PINT(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(6) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4) && HB_ISNUM(5) && HB_ISNUM(6)) {
    /*
    void drawArc( int x, int y, int width, int height, int startAngle, int spanAngle )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawArc(PINT(1), PINT(2), PINT(3), PINT(4), PINT(5), PINT(6));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPAINTER_DRAWCHORD)
{
  if (ISNUMPAR(3) && ISQRECTF(1) && HB_ISNUM(2) && HB_ISNUM(3)) {
    /*
    void drawChord( const QRectF &rectangle, int startAngle, int spanAngle )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawChord(*PQRECTF(1), PINT(2), PINT(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(3) && ISQRECT(1) && HB_ISNUM(2) && HB_ISNUM(3)) {
    /*
    void drawChord( const QRect &rectangle, int startAngle, int spanAngle )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawChord(*PQRECT(1), PINT(2), PINT(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(6) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4) && HB_ISNUM(5) && HB_ISNUM(6)) {
    /*
    void drawChord( int x, int y, int width, int height, int startAngle, int spanAngle )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawChord(PINT(1), PINT(2), PINT(3), PINT(4), PINT(5), PINT(6));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPAINTER_DRAWCONVEXPOLYGON)
{
  if (ISNUMPAR(1) && ISQPOLYGONF(1)) {
    /*
    void drawConvexPolygon( const QPolygonF &polygon )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawConvexPolygon(*PQPOLYGONF(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(1) && ISQPOLYGON(1)) {
    /*
    void drawConvexPolygon( const QPolygon &polygon )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawConvexPolygon(*PQPOLYGON(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPAINTER_DRAWELLIPSE)
{
  if (ISNUMPAR(1) && ISQRECTF(1)) {
    /*
    void drawEllipse( const QRectF &rectangle )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawEllipse(*PQRECTF(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(1) && ISQRECT(1)) {
    /*
    void drawEllipse( const QRect &rectangle )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawEllipse(*PQRECT(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(4) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4)) {
    /*
    void drawEllipse( int x, int y, int width, int height )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawEllipse(PINT(1), PINT(2), PINT(3), PINT(4));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(3) && ISQPOINTF(1) && HB_ISNUM(2) && HB_ISNUM(3)) {
    /*
    void drawEllipse( const QPointF &center, qreal rx, qreal ry )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawEllipse(*PQPOINTF(1), PQREAL(2), PQREAL(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(3) && ISQPOINT(1) && HB_ISNUM(2) && HB_ISNUM(3)) {
    /*
    void drawEllipse( const QPoint &center, int rx, int ry )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawEllipse(*PQPOINT(1), PINT(2), PINT(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPAINTER_DRAWIMAGE)
{
  if (ISBETWEEN(3, 4) && ISQRECTF(1) && ISQIMAGE(2) && ISQRECTF(3) && ISNUMORNIL(4)) {
    /*
    void drawImage( const QRectF &target, const QImage &image, const QRectF &source, Qt::ImageConversionFlags flags =
    Qt::AutoColor )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawImage(*PQRECTF(1), *PQIMAGE(2), *PQRECTF(3),
                     HB_ISNIL(4) ? (Qt::ImageConversionFlags)Qt::AutoColor : (Qt::ImageConversionFlags)hb_parni(4));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISBETWEEN(3, 4) && ISQRECT(1) && ISQIMAGE(2) && ISQRECT(3) && ISNUMORNIL(4)) {
    /*
    void drawImage( const QRect &target, const QImage &image, const QRect &source, Qt::ImageConversionFlags flags =
    Qt::AutoColor )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawImage(*PQRECT(1), *PQIMAGE(2), *PQRECT(3),
                     HB_ISNIL(4) ? (Qt::ImageConversionFlags)Qt::AutoColor : (Qt::ImageConversionFlags)hb_parni(4));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQPOINTF(1) && ISQIMAGE(2)) {
    /*
    void drawImage( const QPointF &point, const QImage &image )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawImage(*PQPOINTF(1), *PQIMAGE(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQPOINT(1) && ISQIMAGE(2)) {
    /*
    void drawImage( const QPoint &point, const QImage &image )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawImage(*PQPOINT(1), *PQIMAGE(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISBETWEEN(3, 4) && ISQPOINTF(1) && ISQIMAGE(2) && ISQRECTF(3) && ISNUMORNIL(4)) {
    /*
    void drawImage( const QPointF &point, const QImage &image, const QRectF &source, Qt::ImageConversionFlags flags =
    Qt::AutoColor )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawImage(*PQPOINTF(1), *PQIMAGE(2), *PQRECTF(3),
                     HB_ISNIL(4) ? (Qt::ImageConversionFlags)Qt::AutoColor : (Qt::ImageConversionFlags)hb_parni(4));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISBETWEEN(3, 4) && ISQPOINT(1) && ISQIMAGE(2) && ISQRECT(3) && ISNUMORNIL(4)) {
    /*
    void drawImage( const QPoint &point, const QImage &image, const QRect &source, Qt::ImageConversionFlags flags =
    Qt::AutoColor )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawImage(*PQPOINT(1), *PQIMAGE(2), *PQRECT(3),
                     HB_ISNIL(4) ? (Qt::ImageConversionFlags)Qt::AutoColor : (Qt::ImageConversionFlags)hb_parni(4));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQRECTF(1) && ISQIMAGE(2)) {
    /*
    void drawImage( const QRectF &rectangle, const QImage &image )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawImage(*PQRECTF(1), *PQIMAGE(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQRECT(1) && ISQIMAGE(2)) {
    /*
    void drawImage( const QRect &rectangle, const QImage &image )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawImage(*PQRECT(1), *PQIMAGE(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISBETWEEN(3, 8) && HB_ISNUM(1) && HB_ISNUM(2) && ISQIMAGE(3) && ISNUMORNIL(4) &&
           ISNUMORNIL(5) && ISNUMORNIL(6) && ISNUMORNIL(7) &&
           ISNUMORNIL(8)) {
    /*
    void drawImage( int x, int y, const QImage &image, int sx = 0, int sy = 0, int sw = -1, int sh = -1,
    Qt::ImageConversionFlags flags = Qt::AutoColor )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawImage(PINT(1), PINT(2), *PQIMAGE(3), OPINT(4, 0), OPINT(5, 0), OPINT(6, -1), OPINT(7, -1),
                     HB_ISNIL(8) ? (Qt::ImageConversionFlags)Qt::AutoColor : (Qt::ImageConversionFlags)hb_parni(8));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPAINTER_DRAWLINE)
{
  if (ISNUMPAR(1) && ISQLINEF(1)) {
    /*
    void drawLine( const QLineF &line )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawLine(*PQLINEF(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(1) && ISQLINE(1)) {
    /*
    void drawLine( const QLine &line )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawLine(*PQLINE(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQPOINT(1) && ISQPOINT(2)) {
    /*
    void drawLine( const QPoint &p1, const QPoint &p2 )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawLine(*PQPOINT(1), *PQPOINT(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQPOINTF(1) && ISQPOINTF(2)) {
    /*
    void drawLine( const QPointF &p1, const QPointF &p2 )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawLine(*PQPOINTF(1), *PQPOINTF(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(4) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4)) {
    /*
    void drawLine( int x1, int y1, int x2, int y2 )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawLine(PINT(1), PINT(2), PINT(3), PINT(4));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
void drawLines( const QVector<QPointF> &pointPairs )
*/
HB_FUNC_STATIC(QPAINTER_DRAWLINES5)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISARRAY(1)) {
#endif
      QVector<QPointF> par1;
      PHB_ITEM aList1 = hb_param(1, HB_IT_ARRAY);
      int nLen1 = hb_arrayLen(aList1);
      for (int i1 = 0; i1 < nLen1; i1++) {
        par1 << *(QPointF *)hb_itemGetPtr(hb_objSendMsg(hb_arrayGetItemPtr(aList1, i1 + 1), "POINTER", 0));
      }
      obj->drawLines(par1);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void drawLines( const QVector<QPoint> &pointPairs )
*/
HB_FUNC_STATIC(QPAINTER_DRAWLINES6)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISARRAY(1)) {
#endif
      QVector<QPoint> par1;
      PHB_ITEM aList1 = hb_param(1, HB_IT_ARRAY);
      int nLen1 = hb_arrayLen(aList1);
      for (int i1 = 0; i1 < nLen1; i1++) {
        par1 << *(QPoint *)hb_itemGetPtr(hb_objSendMsg(hb_arrayGetItemPtr(aList1, i1 + 1), "POINTER", 0));
      }
      obj->drawLines(par1);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void drawLines( const QVector<QLineF> &lines )
*/
HB_FUNC_STATIC(QPAINTER_DRAWLINES7)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISARRAY(1)) {
#endif
      QVector<QLineF> par1;
      PHB_ITEM aList1 = hb_param(1, HB_IT_ARRAY);
      int nLen1 = hb_arrayLen(aList1);
      for (int i1 = 0; i1 < nLen1; i1++) {
        par1 << *(QLineF *)hb_itemGetPtr(hb_objSendMsg(hb_arrayGetItemPtr(aList1, i1 + 1), "POINTER", 0));
      }
      obj->drawLines(par1);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void drawLines( const QVector<QLine> &lines )
*/
HB_FUNC_STATIC(QPAINTER_DRAWLINES8)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISARRAY(1)) {
#endif
      QVector<QLine> par1;
      PHB_ITEM aList1 = hb_param(1, HB_IT_ARRAY);
      int nLen1 = hb_arrayLen(aList1);
      for (int i1 = 0; i1 < nLen1; i1++) {
        par1 << *(QLine *)hb_itemGetPtr(hb_objSendMsg(hb_arrayGetItemPtr(aList1, i1 + 1), "POINTER", 0));
      }
      obj->drawLines(par1);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

HB_FUNC_STATIC(QPAINTER_DRAWLINES)
{
}

/*
void drawPath( const QPainterPath &path )
*/
HB_FUNC_STATIC(QPAINTER_DRAWPATH)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQPAINTERPATH(1)) {
#endif
      obj->drawPath(*PQPAINTERPATH(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

HB_FUNC_STATIC(QPAINTER_DRAWPICTURE)
{
  if (ISNUMPAR(2) && ISQPOINTF(1) && ISQPICTURE(2)) {
    /*
    void drawPicture( const QPointF &point, const QPicture &picture )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPicture(*PQPOINTF(1), *PQPICTURE(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQPOINT(1) && ISQPICTURE(2)) {
    /*
    void drawPicture( const QPoint &point, const QPicture &picture )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPicture(*PQPOINT(1), *PQPICTURE(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(3) && HB_ISNUM(1) && HB_ISNUM(2) && ISQPICTURE(3)) {
    /*
    void drawPicture( int x, int y, const QPicture &picture )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPicture(PINT(1), PINT(2), *PQPICTURE(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPAINTER_DRAWPIE)
{
  if (ISNUMPAR(3) && ISQRECTF(1) && HB_ISNUM(2) && HB_ISNUM(3)) {
    /*
    void drawPie( const QRectF &rectangle, int startAngle, int spanAngle )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPie(*PQRECTF(1), PINT(2), PINT(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(3) && ISQRECT(1) && HB_ISNUM(2) && HB_ISNUM(3)) {
    /*
    void drawPie( const QRect &rectangle, int startAngle, int spanAngle )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPie(*PQRECT(1), PINT(2), PINT(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(6) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4) && HB_ISNUM(5) && HB_ISNUM(6)) {
    /*
    void drawPie( int x, int y, int width, int height, int startAngle, int spanAngle )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPie(PINT(1), PINT(2), PINT(3), PINT(4), PINT(5), PINT(6));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPAINTER_DRAWPIXMAP)
{
  if (ISNUMPAR(3) && ISQRECTF(1) && ISQPIXMAP(2) && ISQRECTF(3)) {
    /*
    void drawPixmap( const QRectF &target, const QPixmap &pixmap, const QRectF &source )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPixmap(*PQRECTF(1), *PQPIXMAP(2), *PQRECTF(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(3) && ISQRECT(1) && ISQPIXMAP(2) && ISQRECT(3)) {
    /*
    void drawPixmap( const QRect &target, const QPixmap &pixmap, const QRect &source )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPixmap(*PQRECT(1), *PQPIXMAP(2), *PQRECT(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(3) && ISQPOINTF(1) && ISQPIXMAP(2) && ISQRECTF(3)) {
    /*
    void drawPixmap( const QPointF &point, const QPixmap &pixmap, const QRectF &source )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPixmap(*PQPOINTF(1), *PQPIXMAP(2), *PQRECTF(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(3) && ISQPOINT(1) && ISQPIXMAP(2) && ISQRECT(3)) {
    /*
    void drawPixmap( const QPoint &point, const QPixmap &pixmap, const QRect &source )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPixmap(*PQPOINT(1), *PQPIXMAP(2), *PQRECT(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQPOINTF(1) && ISQPIXMAP(2)) {
    /*
    void drawPixmap( const QPointF &point, const QPixmap &pixmap )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPixmap(*PQPOINTF(1), *PQPIXMAP(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQPOINT(1) && ISQPIXMAP(2)) {
    /*
    void drawPixmap( const QPoint &point, const QPixmap &pixmap )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPixmap(*PQPOINT(1), *PQPIXMAP(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(3) && HB_ISNUM(1) && HB_ISNUM(2) && ISQPIXMAP(3)) {
    /*
    void drawPixmap( int x, int y, const QPixmap &pixmap )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPixmap(PINT(1), PINT(2), *PQPIXMAP(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQRECT(1) && ISQPIXMAP(2)) {
    /*
    void drawPixmap( const QRect &rectangle, const QPixmap &pixmap )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPixmap(*PQRECT(1), *PQPIXMAP(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(5) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4) && ISQPIXMAP(5)) {
    /*
    void drawPixmap( int x, int y, int width, int height, const QPixmap &pixmap )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPixmap(PINT(1), PINT(2), PINT(3), PINT(4), *PQPIXMAP(5));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(9) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4) && ISQPIXMAP(5) && HB_ISNUM(6) &&
           HB_ISNUM(7) && HB_ISNUM(8) && HB_ISNUM(9)) {
    /*
    void drawPixmap( int x, int y, int w, int h, const QPixmap &pixmap, int sx, int sy, int sw, int sh )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPixmap(PINT(1), PINT(2), PINT(3), PINT(4), *PQPIXMAP(5), PINT(6), PINT(7), PINT(8), PINT(9));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(7) && HB_ISNUM(1) && HB_ISNUM(2) && ISQPIXMAP(3) && HB_ISNUM(4) && HB_ISNUM(5) && HB_ISNUM(6) &&
           HB_ISNUM(7)) {
    /*
    void drawPixmap( int x, int y, const QPixmap &pixmap, int sx, int sy, int sw, int sh )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPixmap(PINT(1), PINT(2), *PQPIXMAP(3), PINT(4), PINT(5), PINT(6), PINT(7));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPAINTER_DRAWPOINT)
{
  if (ISNUMPAR(1) && ISQPOINTF(1)) {
    /*
    void drawPoint( const QPointF &position )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPoint(*PQPOINTF(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(1) && ISQPOINT(1)) {
    /*
    void drawPoint( const QPoint &position )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPoint(*PQPOINT(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2)) {
    /*
    void drawPoint( int x, int y )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPoint(PINT(1), PINT(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPAINTER_DRAWPOINTS)
{
  if (ISNUMPAR(1) && ISQPOLYGONF(1)) {
    /*
    void drawPoints( const QPolygonF &points )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPoints(*PQPOLYGONF(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(1) && ISQPOLYGON(1)) {
    /*
    void drawPoints( const QPolygon &points )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPoints(*PQPOLYGON(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPAINTER_DRAWPOLYGON)
{
  if (ISBETWEEN(1, 2) && ISQPOLYGONF(1) && ISNUMORNIL(2)) {
    /*
    void drawPolygon( const QPolygonF &points, Qt::FillRule fillRule = Qt::OddEvenFill )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPolygon(*PQPOLYGONF(1), HB_ISNIL(2) ? (Qt::FillRule)Qt::OddEvenFill : (Qt::FillRule)hb_parni(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISBETWEEN(1, 2) && ISQPOLYGON(1) && ISNUMORNIL(2)) {
    /*
    void drawPolygon( const QPolygon &points, Qt::FillRule fillRule = Qt::OddEvenFill )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPolygon(*PQPOLYGON(1), HB_ISNIL(2) ? (Qt::FillRule)Qt::OddEvenFill : (Qt::FillRule)hb_parni(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPAINTER_DRAWPOLYLINE)
{
  if (ISNUMPAR(1) && ISQPOLYGONF(1)) {
    /*
    void drawPolyline( const QPolygonF &points )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPolyline(*PQPOLYGONF(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(1) && ISQPOLYGON(1)) {
    /*
    void drawPolyline( const QPolygon &points )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawPolyline(*PQPOLYGON(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPAINTER_DRAWRECT)
{
  if (ISNUMPAR(1) && ISQRECTF(1)) {
    /*
    void drawRect( const QRectF &rectangle )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawRect(*PQRECTF(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(1) && ISQRECT(1)) {
    /*
    void drawRect( const QRect &rectangle )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawRect(*PQRECT(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(4) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4)) {
    /*
    void drawRect( int x, int y, int width, int height )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawRect(PINT(1), PINT(2), PINT(3), PINT(4));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
void drawRects( const QVector<QRectF> &rectangles )
*/
HB_FUNC_STATIC(QPAINTER_DRAWRECTS3)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISARRAY(1)) {
#endif
      QVector<QRectF> par1;
      PHB_ITEM aList1 = hb_param(1, HB_IT_ARRAY);
      int nLen1 = hb_arrayLen(aList1);
      for (int i1 = 0; i1 < nLen1; i1++) {
        par1 << *(QRectF *)hb_itemGetPtr(hb_objSendMsg(hb_arrayGetItemPtr(aList1, i1 + 1), "POINTER", 0));
      }
      obj->drawRects(par1);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void drawRects( const QVector<QRect> &rectangles )
*/
HB_FUNC_STATIC(QPAINTER_DRAWRECTS4)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISARRAY(1)) {
#endif
      QVector<QRect> par1;
      PHB_ITEM aList1 = hb_param(1, HB_IT_ARRAY);
      int nLen1 = hb_arrayLen(aList1);
      for (int i1 = 0; i1 < nLen1; i1++) {
        par1 << *(QRect *)hb_itemGetPtr(hb_objSendMsg(hb_arrayGetItemPtr(aList1, i1 + 1), "POINTER", 0));
      }
      obj->drawRects(par1);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

HB_FUNC_STATIC(QPAINTER_DRAWRECTS)
{
}

HB_FUNC_STATIC(QPAINTER_DRAWROUNDEDRECT)
{
  if (ISBETWEEN(3, 4) && ISQRECTF(1) && HB_ISNUM(2) && HB_ISNUM(3) && ISNUMORNIL(4)) {
    /*
    void drawRoundedRect( const QRectF &rect, qreal xRadius, qreal yRadius, Qt::SizeMode mode = Qt::AbsoluteSize )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawRoundedRect(*PQRECTF(1), PQREAL(2), PQREAL(3),
                           HB_ISNIL(4) ? (Qt::SizeMode)Qt::AbsoluteSize : (Qt::SizeMode)hb_parni(4));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISBETWEEN(3, 4) && ISQRECT(1) && HB_ISNUM(2) && HB_ISNUM(3) && ISNUMORNIL(4)) {
    /*
    void drawRoundedRect( const QRect &rect, qreal xRadius, qreal yRadius, Qt::SizeMode mode = Qt::AbsoluteSize )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawRoundedRect(*PQRECT(1), PQREAL(2), PQREAL(3),
                           HB_ISNIL(4) ? (Qt::SizeMode)Qt::AbsoluteSize : (Qt::SizeMode)hb_parni(4));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISBETWEEN(6, 7) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4) && HB_ISNUM(5) && HB_ISNUM(6) &&
           ISNUMORNIL(7)) {
    /*
    void drawRoundedRect( int x, int y, int w, int h, qreal xRadius, qreal yRadius, Qt::SizeMode mode = Qt::AbsoluteSize
    )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawRoundedRect(PINT(1), PINT(2), PINT(3), PINT(4), PQREAL(5), PQREAL(6),
                           HB_ISNIL(7) ? (Qt::SizeMode)Qt::AbsoluteSize : (Qt::SizeMode)hb_parni(7));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPAINTER_DRAWSTATICTEXT)
{
  if (ISNUMPAR(2) && ISQPOINTF(1) && ISQSTATICTEXT(2)) {
    /*
    void drawStaticText( const QPointF &topLeftPosition, const QStaticText &staticText )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawStaticText(*PQPOINTF(1), *PQSTATICTEXT(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQPOINT(1) && ISQSTATICTEXT(2)) {
    /*
    void drawStaticText( const QPoint &topLeftPosition, const QStaticText &staticText )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawStaticText(*PQPOINT(1), *PQSTATICTEXT(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(3) && HB_ISNUM(1) && HB_ISNUM(2) && ISQSTATICTEXT(3)) {
    /*
    void drawStaticText( int left, int top, const QStaticText &staticText )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawStaticText(PINT(1), PINT(2), *PQSTATICTEXT(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPAINTER_DRAWTEXT)
{
  if (ISNUMPAR(2) && ISQPOINTF(1) && HB_ISCHAR(2)) {
    /*
    void drawText( const QPointF &position, const QString &text )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawText(*PQPOINTF(1), PQSTRING(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQPOINT(1) && HB_ISCHAR(2)) {
    /*
    void drawText( const QPoint &position, const QString &text )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawText(*PQPOINT(1), PQSTRING(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISBETWEEN(3, 4) && ISQRECTF(1) && HB_ISNUM(2) && HB_ISCHAR(3) && ISQRECTFORNIL(4)) {
    /*
    void drawText( const QRectF &rectangle, int flags, const QString &text, QRectF * boundingRect = 0 )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawText(*PQRECTF(1), PINT(2), PQSTRING(3), HB_ISNIL(4) ? 0 : (QRectF *)Qt5xHb::itemGetPtr(4));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISBETWEEN(3, 4) && ISQRECT(1) && HB_ISNUM(2) && HB_ISCHAR(3) && ISQRECTORNIL(4)) {
    /*
    void drawText( const QRect &rectangle, int flags, const QString &text, QRect * boundingRect = 0 )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawText(*PQRECT(1), PINT(2), PQSTRING(3), HB_ISNIL(4) ? 0 : (QRect *)Qt5xHb::itemGetPtr(4));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(3) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISCHAR(3)) {
    /*
    void drawText( int x, int y, const QString &text )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawText(PINT(1), PINT(2), PQSTRING(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISBETWEEN(6, 7) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4) && HB_ISNUM(5) && HB_ISCHAR(6) &&
           ISQRECTORNIL(7)) {
    /*
    void drawText( int x, int y, int width, int height, int flags, const QString &text, QRect * boundingRect = 0 )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawText(PINT(1), PINT(2), PINT(3), PINT(4), PINT(5), PQSTRING(6),
                    HB_ISNIL(7) ? 0 : (QRect *)Qt5xHb::itemGetPtr(7));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISBETWEEN(2, 3) && ISQRECTF(1) && HB_ISCHAR(2) && ISQTEXTOPTIONORNIL(3)) {
    /*
    void drawText( const QRectF &rectangle, const QString &text, const QTextOption &option = QTextOption() )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawText(*PQRECTF(1), PQSTRING(2), HB_ISNIL(3) ? QTextOption() : *(QTextOption *)Qt5xHb::itemGetPtr(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPAINTER_DRAWTILEDPIXMAP)
{
  if (ISBETWEEN(2, 3) && ISQRECTF(1) && ISQPIXMAP(2) && ISQPOINTFORNIL(3)) {
    /*
    void drawTiledPixmap( const QRectF &rectangle, const QPixmap &pixmap, const QPointF &position = QPointF() )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawTiledPixmap(*PQRECTF(1), *PQPIXMAP(2), HB_ISNIL(3) ? QPointF() : *(QPointF *)Qt5xHb::itemGetPtr(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISBETWEEN(2, 3) && ISQRECT(1) && ISQPIXMAP(2) && ISQPOINTORNIL(3)) {
    /*
    void drawTiledPixmap( const QRect &rectangle, const QPixmap &pixmap, const QPoint &position = QPoint() )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawTiledPixmap(*PQRECT(1), *PQPIXMAP(2), HB_ISNIL(3) ? QPoint() : *(QPoint *)Qt5xHb::itemGetPtr(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISBETWEEN(5, 7) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4) && ISQPIXMAP(5) &&
           ISNUMORNIL(6) && ISNUMORNIL(7)) {
    /*
    void drawTiledPixmap( int x, int y, int width, int height, const QPixmap &pixmap, int sx = 0, int sy = 0 )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->drawTiledPixmap(PINT(1), PINT(2), PINT(3), PINT(4), *PQPIXMAP(5), OPINT(6, 0), OPINT(7, 0));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
bool end()
*/
HB_FUNC_STATIC(QPAINTER_END)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->end());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void endNativePainting()
*/
HB_FUNC_STATIC(QPAINTER_ENDNATIVEPAINTING)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      obj->endNativePainting();
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

HB_FUNC_STATIC(QPAINTER_ERASERECT)
{
  if (ISNUMPAR(1) && ISQRECTF(1)) {
    /*
    void eraseRect( const QRectF &rectangle )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->eraseRect(*PQRECTF(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(1) && ISQRECT(1)) {
    /*
    void eraseRect( const QRect &rectangle )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->eraseRect(*PQRECT(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(4) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4)) {
    /*
    void eraseRect( int x, int y, int width, int height )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->eraseRect(PINT(1), PINT(2), PINT(3), PINT(4));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
void fillPath( const QPainterPath &path, const QBrush &brush )
*/
HB_FUNC_STATIC(QPAINTER_FILLPATH)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && ISQPAINTERPATH(1) && ISQBRUSH(2)) {
#endif
      obj->fillPath(*PQPAINTERPATH(1), *PQBRUSH(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

HB_FUNC_STATIC(QPAINTER_FILLRECT)
{
  if (ISNUMPAR(2) && ISQRECTF(1) && ISQBRUSH(2)) {
    /*
    void fillRect( const QRectF &rectangle, const QBrush &brush )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->fillRect(*PQRECTF(1), *PQBRUSH(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(5) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4) && HB_ISNUM(5)) {
    /*
    void fillRect( int x, int y, int width, int height, Qt::BrushStyle style )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->fillRect(PINT(1), PINT(2), PINT(3), PINT(4), (Qt::BrushStyle)hb_parni(5));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQRECT(1) && HB_ISNUM(2)) {
    /*
    void fillRect( const QRect &rectangle, Qt::BrushStyle style )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->fillRect(*PQRECT(1), (Qt::BrushStyle)hb_parni(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQRECTF(1) && HB_ISNUM(2)) {
    /*
    void fillRect( const QRectF &rectangle, Qt::BrushStyle style )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->fillRect(*PQRECTF(1), (Qt::BrushStyle)hb_parni(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQRECT(1) && ISQBRUSH(2)) {
    /*
    void fillRect( const QRect &rectangle, const QBrush &brush )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->fillRect(*PQRECT(1), *PQBRUSH(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQRECT(1) && (ISQCOLOR(2) || HB_ISCHAR(2))) {
    /*
    void fillRect( const QRect &rectangle, const QColor &color )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->fillRect(*PQRECT(1), HB_ISOBJECT(2) ? *(QColor *)Qt5xHb::itemGetPtr(2) : QColor(hb_parc(2)));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQRECTF(1) && (ISQCOLOR(2) || HB_ISCHAR(2))) {
    /*
    void fillRect( const QRectF &rectangle, const QColor &color )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->fillRect(*PQRECTF(1), HB_ISOBJECT(2) ? *(QColor *)Qt5xHb::itemGetPtr(2) : QColor(hb_parc(2)));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(5) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4) && ISQBRUSH(5)) {
    /*
    void fillRect( int x, int y, int width, int height, const QBrush &brush )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->fillRect(PINT(1), PINT(2), PINT(3), PINT(4), *PQBRUSH(5));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(5) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4) && (ISQCOLOR(5) || HB_ISCHAR(5))) {
    /*
    void fillRect( int x, int y, int width, int height, const QColor &color )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->fillRect(PINT(1), PINT(2), PINT(3), PINT(4),
                    HB_ISOBJECT(5) ? *(QColor *)Qt5xHb::itemGetPtr(5) : QColor(hb_parc(5)));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(5) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4) && HB_ISNUM(5)) {
    /*
    void fillRect( int x, int y, int width, int height, Qt::GlobalColor color )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->fillRect(PINT(1), PINT(2), PINT(3), PINT(4), (Qt::GlobalColor)hb_parni(5));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQRECT(1) && HB_ISNUM(2)) {
    /*
    void fillRect( const QRect &rectangle, Qt::GlobalColor color )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->fillRect(*PQRECT(1), (Qt::GlobalColor)hb_parni(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && ISQRECTF(1) && HB_ISNUM(2)) {
    /*
    void fillRect( const QRectF &rectangle, Qt::GlobalColor color )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->fillRect(*PQRECTF(1), (Qt::GlobalColor)hb_parni(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(5) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4) && HB_ISNUM(5)) {
    /*
    void fillRect( int x, int y, int width, int height, QGradient::Preset preset )
    */
#if (QT_VERSION >= QT_VERSION_CHECK(5, 12, 0))
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->fillRect(PINT(1), PINT(2), PINT(3), PINT(4), (QGradient::Preset)hb_parni(5));
    }

    hb_itemReturn(hb_stackSelfItem());
#endif
  } else if (ISNUMPAR(2) && ISQRECT(1) && HB_ISNUM(2)) {
    /*
    void fillRect( const QRect &rectangle, QGradient::Preset preset )
    */
#if (QT_VERSION >= QT_VERSION_CHECK(5, 12, 0))
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->fillRect(*PQRECT(1), (QGradient::Preset)hb_parni(2));
    }

    hb_itemReturn(hb_stackSelfItem());
#endif
  } else if (ISNUMPAR(2) && ISQRECTF(1) && HB_ISNUM(2)) {
    /*
    void fillRect( const QRectF &rectangle, QGradient::Preset preset )
    */
#if (QT_VERSION >= QT_VERSION_CHECK(5, 12, 0))
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->fillRect(*PQRECTF(1), (QGradient::Preset)hb_parni(2));
    }

    hb_itemReturn(hb_stackSelfItem());
#endif
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
const QFont &font() const
*/
HB_FUNC_STATIC(QPAINTER_FONT)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      const QFont *ptr = &obj->font();
      Qt5xHb::createReturnClass(ptr, "QFONT", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QFontInfo fontInfo() const
*/
HB_FUNC_STATIC(QPAINTER_FONTINFO)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QFontInfo *ptr = new QFontInfo(obj->fontInfo());
      Qt5xHb::createReturnClass(ptr, "QFONTINFO", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QFontMetrics fontMetrics() const
*/
HB_FUNC_STATIC(QPAINTER_FONTMETRICS)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QFontMetrics *ptr = new QFontMetrics(obj->fontMetrics());
      Qt5xHb::createReturnClass(ptr, "QFONTMETRICS", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool hasClipping() const
*/
HB_FUNC_STATIC(QPAINTER_HASCLIPPING)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->hasClipping());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool isActive() const
*/
HB_FUNC_STATIC(QPAINTER_ISACTIVE)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->isActive());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
Qt::LayoutDirection layoutDirection() const
*/
HB_FUNC_STATIC(QPAINTER_LAYOUTDIRECTION)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->layoutDirection());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
qreal opacity() const
*/
HB_FUNC_STATIC(QPAINTER_OPACITY)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQREAL(obj->opacity());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QPaintEngine * paintEngine() const
*/
HB_FUNC_STATIC(QPAINTER_PAINTENGINE)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QPaintEngine *ptr = obj->paintEngine();
      Qt5xHb::createReturnClass(ptr, "QPAINTENGINE", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
const QPen &pen() const
*/
HB_FUNC_STATIC(QPAINTER_PEN)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      const QPen *ptr = &obj->pen();
      Qt5xHb::createReturnClass(ptr, "QPEN", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QPainter::RenderHints renderHints() const
*/
HB_FUNC_STATIC(QPAINTER_RENDERHINTS)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->renderHints());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void resetTransform()
*/
HB_FUNC_STATIC(QPAINTER_RESETTRANSFORM)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      obj->resetTransform();
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void restore()
*/
HB_FUNC_STATIC(QPAINTER_RESTORE)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      obj->restore();
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void rotate( qreal angle )
*/
HB_FUNC_STATIC(QPAINTER_ROTATE)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->rotate(PQREAL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void save()
*/
HB_FUNC_STATIC(QPAINTER_SAVE)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      obj->save();
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void scale( qreal sx, qreal sy )
*/
HB_FUNC_STATIC(QPAINTER_SCALE)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2)) {
#endif
      obj->scale(PQREAL(1), PQREAL(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setBackground( const QBrush &brush )
*/
HB_FUNC_STATIC(QPAINTER_SETBACKGROUND)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQBRUSH(1)) {
#endif
      obj->setBackground(*PQBRUSH(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setBackgroundMode( Qt::BGMode mode )
*/
HB_FUNC_STATIC(QPAINTER_SETBACKGROUNDMODE)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->setBackgroundMode((Qt::BGMode)hb_parni(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

HB_FUNC_STATIC(QPAINTER_SETBRUSH)
{
  if (ISNUMPAR(1) && ISQBRUSH(1)) {
    /*
    void setBrush( const QBrush &brush )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setBrush(*PQBRUSH(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(1) && HB_ISNUM(1)) {
    /*
    void setBrush( Qt::BrushStyle style )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setBrush((Qt::BrushStyle)hb_parni(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPAINTER_SETBRUSHORIGIN)
{
  if (ISNUMPAR(1) && ISQPOINTF(1)) {
    /*
    void setBrushOrigin( const QPointF &position )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setBrushOrigin(*PQPOINTF(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(1) && ISQPOINT(1)) {
    /*
    void setBrushOrigin( const QPoint &position )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setBrushOrigin(*PQPOINT(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2)) {
    /*
    void setBrushOrigin( int x, int y )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setBrushOrigin(PINT(1), PINT(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
void setClipPath( const QPainterPath &path, Qt::ClipOperation operation = Qt::ReplaceClip )
*/
HB_FUNC_STATIC(QPAINTER_SETCLIPPATH)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && ISQPAINTERPATH(1) && ISNUMORNIL(2)) {
#endif
      obj->setClipPath(*PQPAINTERPATH(1),
                       HB_ISNIL(2) ? (Qt::ClipOperation)Qt::ReplaceClip : (Qt::ClipOperation)hb_parni(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

HB_FUNC_STATIC(QPAINTER_SETCLIPRECT)
{
  if (ISBETWEEN(1, 2) && ISQRECTF(1) && ISNUMORNIL(2)) {
    /*
    void setClipRect( const QRectF &rectangle, Qt::ClipOperation operation = Qt::ReplaceClip )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setClipRect(*PQRECTF(1), HB_ISNIL(2) ? (Qt::ClipOperation)Qt::ReplaceClip : (Qt::ClipOperation)hb_parni(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISBETWEEN(4, 5) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4) && ISNUMORNIL(5)) {
    /*
    void setClipRect( int x, int y, int width, int height, Qt::ClipOperation operation = Qt::ReplaceClip )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setClipRect(PINT(1), PINT(2), PINT(3), PINT(4),
                       HB_ISNIL(5) ? (Qt::ClipOperation)Qt::ReplaceClip : (Qt::ClipOperation)hb_parni(5));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISBETWEEN(1, 2) && ISQRECT(1) && ISNUMORNIL(2)) {
    /*
    void setClipRect( const QRect &rectangle, Qt::ClipOperation operation = Qt::ReplaceClip )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setClipRect(*PQRECT(1), HB_ISNIL(2) ? (Qt::ClipOperation)Qt::ReplaceClip : (Qt::ClipOperation)hb_parni(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
void setClipRegion( const QRegion &region, Qt::ClipOperation operation = Qt::ReplaceClip )
*/
HB_FUNC_STATIC(QPAINTER_SETCLIPREGION)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && ISQREGION(1) && ISNUMORNIL(2)) {
#endif
      obj->setClipRegion(*PQREGION(1),
                         HB_ISNIL(2) ? (Qt::ClipOperation)Qt::ReplaceClip : (Qt::ClipOperation)hb_parni(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setClipping( bool enable )
*/
HB_FUNC_STATIC(QPAINTER_SETCLIPPING)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISLOG(1)) {
#endif
      obj->setClipping(PBOOL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setCompositionMode( QPainter::CompositionMode mode )
*/
HB_FUNC_STATIC(QPAINTER_SETCOMPOSITIONMODE)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->setCompositionMode((QPainter::CompositionMode)hb_parni(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setFont( const QFont &font )
*/
HB_FUNC_STATIC(QPAINTER_SETFONT)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQFONT(1)) {
#endif
      obj->setFont(*PQFONT(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setLayoutDirection( Qt::LayoutDirection direction )
*/
HB_FUNC_STATIC(QPAINTER_SETLAYOUTDIRECTION)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->setLayoutDirection((Qt::LayoutDirection)hb_parni(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setOpacity( qreal opacity )
*/
HB_FUNC_STATIC(QPAINTER_SETOPACITY)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->setOpacity(PQREAL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

HB_FUNC_STATIC(QPAINTER_SETPEN)
{
  if (ISNUMPAR(1) && ISQPEN(1)) {
    /*
    void setPen( const QPen &pen )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setPen(*PQPEN(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(1) && (ISQCOLOR(1) || HB_ISCHAR(1))) {
    /*
    void setPen( const QColor &color )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setPen(HB_ISOBJECT(1) ? *(QColor *)Qt5xHb::itemGetPtr(1) : QColor(hb_parc(1)));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(1) && HB_ISNUM(1)) {
    /*
    void setPen( Qt::PenStyle style )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setPen((Qt::PenStyle)hb_parni(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
void setRenderHint( QPainter::RenderHint hint, bool on = true )
*/
HB_FUNC_STATIC(QPAINTER_SETRENDERHINT)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && (HB_ISLOG(2) || HB_ISNIL(2))) {
#endif
      obj->setRenderHint((QPainter::RenderHint)hb_parni(1), OPBOOL(2, true));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setRenderHints( QPainter::RenderHints hints, bool on = true )
*/
HB_FUNC_STATIC(QPAINTER_SETRENDERHINTS)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && (HB_ISLOG(2) || HB_ISNIL(2))) {
#endif
      obj->setRenderHints((QPainter::RenderHints)hb_parni(1), OPBOOL(2, true));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setTransform( const QTransform &transform, bool combine = false )
*/
HB_FUNC_STATIC(QPAINTER_SETTRANSFORM)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && ISQTRANSFORM(1) && (HB_ISLOG(2) || HB_ISNIL(2))) {
#endif
      obj->setTransform(*PQTRANSFORM(1), OPBOOL(2, false));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setViewTransformEnabled( bool enable )
*/
HB_FUNC_STATIC(QPAINTER_SETVIEWTRANSFORMENABLED)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISLOG(1)) {
#endif
      obj->setViewTransformEnabled(PBOOL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

HB_FUNC_STATIC(QPAINTER_SETVIEWPORT)
{
  if (ISNUMPAR(1) && ISQRECT(1)) {
    /*
    void setViewport( const QRect &rectangle )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setViewport(*PQRECT(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(4) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4)) {
    /*
    void setViewport( int x, int y, int width, int height )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setViewport(PINT(1), PINT(2), PINT(3), PINT(4));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPAINTER_SETWINDOW)
{
  if (ISNUMPAR(1) && ISQRECT(1)) {
    /*
    void setWindow( const QRect &rectangle )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setWindow(*PQRECT(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(4) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3) && HB_ISNUM(4)) {
    /*
    void setWindow( int x, int y, int width, int height )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setWindow(PINT(1), PINT(2), PINT(3), PINT(4));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
void setWorldMatrixEnabled( bool enable )
*/
HB_FUNC_STATIC(QPAINTER_SETWORLDMATRIXENABLED)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISLOG(1)) {
#endif
      obj->setWorldMatrixEnabled(PBOOL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setWorldTransform( const QTransform &matrix, bool combine = false )
*/
HB_FUNC_STATIC(QPAINTER_SETWORLDTRANSFORM)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && ISQTRANSFORM(1) && (HB_ISLOG(2) || HB_ISNIL(2))) {
#endif
      obj->setWorldTransform(*PQTRANSFORM(1), OPBOOL(2, false));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void shear( qreal sh, qreal sv )
*/
HB_FUNC_STATIC(QPAINTER_SHEAR)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2)) {
#endif
      obj->shear(PQREAL(1), PQREAL(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void strokePath( const QPainterPath &path, const QPen &pen )
*/
HB_FUNC_STATIC(QPAINTER_STROKEPATH)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && ISQPAINTERPATH(1) && ISQPEN(2)) {
#endif
      obj->strokePath(*PQPAINTERPATH(1), *PQPEN(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
bool testRenderHint( QPainter::RenderHint hint ) const
*/
HB_FUNC_STATIC(QPAINTER_TESTRENDERHINT)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      RBOOL(obj->testRenderHint((QPainter::RenderHint)hb_parni(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
const QTransform &transform() const
*/
HB_FUNC_STATIC(QPAINTER_TRANSFORM)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      const QTransform *ptr = &obj->transform();
      Qt5xHb::createReturnClass(ptr, "QTRANSFORM", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QPAINTER_TRANSLATE)
{
  if (ISNUMPAR(1) && ISQPOINTF(1)) {
    /*
    void translate( const QPointF &offset )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->translate(*PQPOINTF(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(1) && ISQPOINT(1)) {
    /*
    void translate( const QPoint &offset )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->translate(*PQPOINT(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2)) {
    /*
    void translate( qreal dx, qreal dy )
    */
    QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->translate(PQREAL(1), PQREAL(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
bool viewTransformEnabled() const
*/
HB_FUNC_STATIC(QPAINTER_VIEWTRANSFORMENABLED)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->viewTransformEnabled());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QRect viewport() const
*/
HB_FUNC_STATIC(QPAINTER_VIEWPORT)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QRect *ptr = new QRect(obj->viewport());
      Qt5xHb::createReturnClass(ptr, "QRECT", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QRect window() const
*/
HB_FUNC_STATIC(QPAINTER_WINDOW)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QRect *ptr = new QRect(obj->window());
      Qt5xHb::createReturnClass(ptr, "QRECT", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool worldMatrixEnabled() const
*/
HB_FUNC_STATIC(QPAINTER_WORLDMATRIXENABLED)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->worldMatrixEnabled());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
const QTransform &worldTransform() const
*/
HB_FUNC_STATIC(QPAINTER_WORLDTRANSFORM)
{
  QPainter *obj = (QPainter *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      const QTransform *ptr = &obj->worldTransform();
      Qt5xHb::createReturnClass(ptr, "QTRANSFORM", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QPAINTER_NEWFROM)
{
  PHB_ITEM self = hb_stackSelfItem();

  if (hb_pcount() == 1 && HB_ISOBJECT(1)) {
    PHB_ITEM ptr = hb_itemPutPtr(NULL, hb_itemGetPtr(hb_objSendMsg(hb_param(1, HB_IT_OBJECT), "POINTER", 0)));
    hb_objSendMsg(self, "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
    PHB_ITEM des = hb_itemPutL(NULL, false);
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else if (hb_pcount() == 1 && HB_ISPOINTER(1)) {
    PHB_ITEM ptr = hb_itemPutPtr(NULL, hb_itemGetPtr(hb_param(1, HB_IT_POINTER)));
    hb_objSendMsg(self, "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
    PHB_ITEM des = hb_itemPutL(NULL, false);
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }

  hb_itemReturn(self);
}

HB_FUNC_STATIC(QPAINTER_NEWFROMOBJECT)
{
  HB_FUNC_EXEC(QPAINTER_NEWFROM);
}

HB_FUNC_STATIC(QPAINTER_NEWFROMPOINTER)
{
  HB_FUNC_EXEC(QPAINTER_NEWFROM);
}

HB_FUNC_STATIC(QPAINTER_SELFDESTRUCTION)
{
  hb_retl(hb_itemGetL(hb_objSendMsg(hb_stackSelfItem(), "SELF_DESTRUCTION", 0)));
}

HB_FUNC_STATIC(QPAINTER_SETSELFDESTRUCTION)
{
  PHB_ITEM self = hb_stackSelfItem();

  if (hb_pcount() == 1 && HB_ISLOG(1)) {
    PHB_ITEM des = hb_itemPutL(NULL, hb_parl(1));
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }

  hb_itemReturn(self);
}

#pragma ENDDUMP
