//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

#ifndef QPLACEMANAGERENGINESLOTS_H
#define QPLACEMANAGERENGINESLOTS_H

#include <QtCore/QObject>
#include <QtCore/QCoreApplication>
#include <QtCore/QString>

#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
#include <QtLocation/QPlaceManagerEngine>
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"
#include "qt5xhb_signals.hpp"

class QPlaceManagerEngineSlots : public QObject
{
  Q_OBJECT
public:
  QPlaceManagerEngineSlots(QObject *parent = 0);
  ~QPlaceManagerEngineSlots();
public slots:
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  void finished(QPlaceReply *reply);
#endif
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  void error(QPlaceReply *reply, QPlaceReply::Error error, const QString &errorString = QString());
#endif
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  void placeAdded(const QString &placeId);
#endif
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  void placeUpdated(const QString &placeId);
#endif
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  void placeRemoved(const QString &placeId);
#endif
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  void categoryAdded(const QPlaceCategory &category, const QString &parentCategoryId);
#endif
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  void categoryUpdated(const QPlaceCategory &category, const QString &parentCategoryId);
#endif
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  void categoryRemoved(const QString &categoryId, const QString &parentCategoryId);
#endif
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  void dataChanged();
#endif
};

#endif // QPLACEMANAGERENGINESLOTS_H
