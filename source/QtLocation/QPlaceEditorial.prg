//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT5XHB_NO_REQUESTS
#endif

CLASS QPlaceEditorial INHERIT QPlaceContent

   METHOD new
   METHOD delete
   METHOD text
   METHOD setText
   METHOD title
   METHOD setTitle
   METHOD language
   METHOD setLanguage

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QPlaceEditorial
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
#include <QtLocation/QPlaceEditorial>
#endif
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"

#ifdef __XHARBOUR__
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
#include <QtLocation/QPlaceEditorial>
#endif
#endif

HB_FUNC_STATIC(QPLACEEDITORIAL_NEW)
{
  if (ISNUMPAR(0))
  {
    /*
    QPlaceEditorial()
    */
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
    QPlaceEditorial *obj = new QPlaceEditorial();
    Qt5xHb::returnNewObject(obj, true);
#endif
  }
  else if (ISNUMPAR(1) && ISQPLACECONTENT(1))
  {
    /*
    QPlaceEditorial( const QPlaceContent &other )
    */
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
    QPlaceEditorial *obj = new QPlaceEditorial(*PQPLACECONTENT(1));
    Qt5xHb::returnNewObject(obj, true);
#endif
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QPLACEEDITORIAL_DELETE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  QPlaceEditorial *obj = (QPlaceEditorial *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
    delete obj;
    obj = NULL;
    PHB_ITEM ptr = hb_itemPutPtr(NULL, NULL);
    hb_objSendMsg(hb_stackSelfItem(), "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QString text() const
*/
HB_FUNC_STATIC(QPLACEEDITORIAL_TEXT)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  QPlaceEditorial *obj = (QPlaceEditorial *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RQSTRING(obj->text());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setText( const QString &text )
*/
HB_FUNC_STATIC(QPLACEEDITORIAL_SETTEXT)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  QPlaceEditorial *obj = (QPlaceEditorial *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISCHAR(1))
    {
#endif
      obj->setText(PQSTRING(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QString title() const
*/
HB_FUNC_STATIC(QPLACEEDITORIAL_TITLE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  QPlaceEditorial *obj = (QPlaceEditorial *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RQSTRING(obj->title());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setTitle( const QString &data )
*/
HB_FUNC_STATIC(QPLACEEDITORIAL_SETTITLE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  QPlaceEditorial *obj = (QPlaceEditorial *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISCHAR(1))
    {
#endif
      obj->setTitle(PQSTRING(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QString language() const
*/
HB_FUNC_STATIC(QPLACEEDITORIAL_LANGUAGE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  QPlaceEditorial *obj = (QPlaceEditorial *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RQSTRING(obj->language());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setLanguage( const QString &data )
*/
HB_FUNC_STATIC(QPLACEEDITORIAL_SETLANGUAGE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  QPlaceEditorial *obj = (QPlaceEditorial *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISCHAR(1))
    {
#endif
      obj->setLanguage(PQSTRING(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

#pragma ENDDUMP
