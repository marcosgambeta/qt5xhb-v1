//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT5XHB_NO_REQUESTS
REQUEST QACCESSIBLEINTERFACE
REQUEST QCOLOR
REQUEST QRECT
REQUEST QWINDOW
#endif

CLASS QAccessibleWidget INHERIT QAccessibleObject,QAccessibleActionInterface

   METHOD new
   METHOD isValid
   METHOD window
   METHOD childCount
   METHOD indexOfChild
   METHOD focusChild
   METHOD rect
   METHOD parent
   METHOD child
   METHOD text
   METHOD role
   METHOD foregroundColor
   METHOD backgroundColor
   METHOD interface_cast
   METHOD actionNames
   METHOD doAction
   METHOD keyBindingsForAction

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QAccessibleWidget
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#include <QtWidgets/QAccessibleWidget>
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"

#ifdef __XHARBOUR__
#include <QtWidgets/QAccessibleWidget>
#endif

#include <QtGui/QWindow>

    /*
    QAccessibleWidget( QWidget * o, QAccessible::Role r = QAccessible::Client, const QString &name = QString() )
    */
HB_FUNC_STATIC(QACCESSIBLEWIDGET_NEW)
{
  if (ISBETWEEN(1, 3) && ISQWIDGET(1) && ISNUMORNIL(2) && ISCHARORNIL(3)) {
    QAccessibleWidget *obj = new QAccessibleWidget(
        PQWIDGET(1), HB_ISNIL(2) ? (QAccessible::Role)QAccessible::Client : (QAccessible::Role)hb_parni(2),
        OPQSTRING(3, QString()));
    Qt5xHb::returnNewObject(obj, true);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
bool isValid() const
*/
HB_FUNC_STATIC(QACCESSIBLEWIDGET_ISVALID)
{
  QAccessibleWidget *obj = (QAccessibleWidget *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->isValid());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QWindow * window() const
*/
HB_FUNC_STATIC(QACCESSIBLEWIDGET_WINDOW)
{
  QAccessibleWidget *obj = (QAccessibleWidget *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QWindow *ptr = obj->window();
      Qt5xHb::createReturnQObjectClass(ptr, "QWINDOW");
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int childCount() const
*/
HB_FUNC_STATIC(QACCESSIBLEWIDGET_CHILDCOUNT)
{
  QAccessibleWidget *obj = (QAccessibleWidget *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RINT(obj->childCount());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int indexOfChild( const QAccessibleInterface * child ) const
*/
HB_FUNC_STATIC(QACCESSIBLEWIDGET_INDEXOFCHILD)
{
  QAccessibleWidget *obj = (QAccessibleWidget *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQACCESSIBLEINTERFACE(1)) {
#endif
      RINT(obj->indexOfChild(PQACCESSIBLEINTERFACE(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QAccessibleInterface * focusChild() const
*/
HB_FUNC_STATIC(QACCESSIBLEWIDGET_FOCUSCHILD)
{
  QAccessibleWidget *obj = (QAccessibleWidget *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QAccessibleInterface *ptr = obj->focusChild();
      Qt5xHb::createReturnClass(ptr, "QACCESSIBLEINTERFACE", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QRect rect() const
*/
HB_FUNC_STATIC(QACCESSIBLEWIDGET_RECT)
{
  QAccessibleWidget *obj = (QAccessibleWidget *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QRect *ptr = new QRect(obj->rect());
      Qt5xHb::createReturnClass(ptr, "QRECT", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QAccessibleInterface * parent() const
*/
HB_FUNC_STATIC(QACCESSIBLEWIDGET_PARENT)
{
  QAccessibleWidget *obj = (QAccessibleWidget *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QAccessibleInterface *ptr = obj->parent();
      Qt5xHb::createReturnClass(ptr, "QACCESSIBLEINTERFACE", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QAccessibleInterface * child( int index ) const
*/
HB_FUNC_STATIC(QACCESSIBLEWIDGET_CHILD)
{
  QAccessibleWidget *obj = (QAccessibleWidget *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      QAccessibleInterface *ptr = obj->child(PINT(1));
      Qt5xHb::createReturnClass(ptr, "QACCESSIBLEINTERFACE", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString text( QAccessible::Text t ) const
*/
HB_FUNC_STATIC(QACCESSIBLEWIDGET_TEXT)
{
  QAccessibleWidget *obj = (QAccessibleWidget *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      RQSTRING(obj->text((QAccessible::Text)hb_parni(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QAccessible::Role role() const
*/
HB_FUNC_STATIC(QACCESSIBLEWIDGET_ROLE)
{
  QAccessibleWidget *obj = (QAccessibleWidget *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->role());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QColor foregroundColor() const
*/
HB_FUNC_STATIC(QACCESSIBLEWIDGET_FOREGROUNDCOLOR)
{
  QAccessibleWidget *obj = (QAccessibleWidget *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QColor *ptr = new QColor(obj->foregroundColor());
      Qt5xHb::createReturnClass(ptr, "QCOLOR", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QColor backgroundColor() const
*/
HB_FUNC_STATIC(QACCESSIBLEWIDGET_BACKGROUNDCOLOR)
{
  QAccessibleWidget *obj = (QAccessibleWidget *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QColor *ptr = new QColor(obj->backgroundColor());
      Qt5xHb::createReturnClass(ptr, "QCOLOR", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void * interface_cast( QAccessible::InterfaceType t )
*/
HB_FUNC_STATIC(QACCESSIBLEWIDGET_INTERFACE_CAST)
{
  QAccessibleWidget *obj = (QAccessibleWidget *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      hb_retptr((void *)obj->interface_cast((QAccessible::InterfaceType)hb_parni(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QStringList actionNames() const
*/
HB_FUNC_STATIC(QACCESSIBLEWIDGET_ACTIONNAMES)
{
  QAccessibleWidget *obj = (QAccessibleWidget *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQSTRINGLIST(obj->actionNames());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void doAction( const QString &actionName )
*/
HB_FUNC_STATIC(QACCESSIBLEWIDGET_DOACTION)
{
  QAccessibleWidget *obj = (QAccessibleWidget *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISCHAR(1)) {
#endif
      obj->doAction(PQSTRING(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
QStringList keyBindingsForAction( const QString &actionName ) const
*/
HB_FUNC_STATIC(QACCESSIBLEWIDGET_KEYBINDINGSFORACTION)
{
  QAccessibleWidget *obj = (QAccessibleWidget *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISCHAR(1)) {
#endif
      RQSTRINGLIST(obj->keyBindingsForAction(PQSTRING(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

#pragma ENDDUMP
