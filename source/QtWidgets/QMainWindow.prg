//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT5XHB_NO_REQUESTS
REQUEST QBYTEARRAY
REQUEST QMENU
REQUEST QMENUBAR
REQUEST QSIZE
REQUEST QSTATUSBAR
REQUEST QTOOLBAR
REQUEST QWIDGET
#endif

CLASS QMainWindow INHERIT QWidget

   METHOD new
   METHOD delete
   METHOD addDockWidget
   METHOD addToolBar
   METHOD addToolBarBreak
   METHOD centralWidget
   METHOD corner
   METHOD createPopupMenu
   METHOD dockOptions
   METHOD dockWidgetArea
   METHOD documentMode
   METHOD iconSize
   METHOD insertToolBar
   METHOD insertToolBarBreak
   METHOD isAnimated
   METHOD isDockNestingEnabled
   METHOD menuBar
   METHOD menuWidget
   METHOD removeDockWidget
   METHOD removeToolBar
   METHOD removeToolBarBreak
   METHOD restoreDockWidget
   METHOD restoreState
   METHOD saveState
   METHOD setCentralWidget
   METHOD setCorner
   METHOD setDockOptions
   METHOD setDocumentMode
   METHOD setIconSize
   METHOD setMenuBar
   METHOD setMenuWidget
   METHOD setStatusBar
   METHOD setTabPosition
   METHOD setTabShape
   METHOD setToolButtonStyle
   METHOD splitDockWidget
   METHOD statusBar
   METHOD tabPosition
   METHOD tabShape
   METHOD tabifyDockWidget
   METHOD toolBarArea
   METHOD toolBarBreak
   METHOD toolButtonStyle
   METHOD setAnimated
   METHOD setDockNestingEnabled
   METHOD takeCentralWidget

   METHOD onIconSizeChanged
   METHOD onToolButtonStyleChanged

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QMainWindow
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#include <QtWidgets/QMainWindow>
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"
#include "qt5xhb_events.hpp"
#include "qt5xhb_signals.hpp"

#ifdef __XHARBOUR__
#include <QtWidgets/QMainWindow>
#endif

#include <QtWidgets/QToolBar>
#include <QtWidgets/QMenu>
#include <QtWidgets/QMenuBar>
#include <QtWidgets/QStatusBar>

    /*
    QMainWindow( QWidget * parent = 0, Qt::WindowFlags flags = 0 )
    */
HB_FUNC_STATIC(QMAINWINDOW_NEW)
{
  if (ISBETWEEN(0, 2) && (ISQWIDGET(1) || HB_ISNIL(1)) && ISNUMORNIL(2))
  {
    QMainWindow *obj =
        new QMainWindow(OPQWIDGET(1, 0), HB_ISNIL(2) ? (Qt::WindowFlags)0 : (Qt::WindowFlags)hb_parni(2));
    Qt5xHb::returnNewObject(obj, false);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QMAINWINDOW_DELETE)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
    Qt5xHb::Events_disconnect_all_events(obj, true);
    Qt5xHb::Signals_disconnect_all_signals(obj, true);
    delete obj;
    obj = NULL;
    PHB_ITEM ptr = hb_itemPutPtr(NULL, NULL);
    hb_objSendMsg(hb_stackSelfItem(), "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
  }

  hb_itemReturn(hb_stackSelfItem());
}

HB_FUNC_STATIC(QMAINWINDOW_ADDDOCKWIDGET)
{
  if (ISNUMPAR(2) && HB_ISNUM(1) && ISQDOCKWIDGET(2))
  {
    /*
    void addDockWidget( Qt::DockWidgetArea area, QDockWidget * dockwidget )
    */
    QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL)
    {
      obj->addDockWidget((Qt::DockWidgetArea)hb_parni(1), PQDOCKWIDGET(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  }
  else if (ISNUMPAR(3) && HB_ISNUM(1) && ISQDOCKWIDGET(2) && HB_ISNUM(3))
  {
    /*
    void addDockWidget( Qt::DockWidgetArea area, QDockWidget * dockwidget, Qt::Orientation orientation )
    */
    QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL)
    {
      obj->addDockWidget((Qt::DockWidgetArea)hb_parni(1), PQDOCKWIDGET(2), (Qt::Orientation)hb_parni(3));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QMAINWINDOW_ADDTOOLBAR)
{
  if (ISNUMPAR(2) && HB_ISNUM(1) && ISQTOOLBAR(2))
  {
    /*
    void addToolBar( Qt::ToolBarArea area, QToolBar * toolbar )
    */
    QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL)
    {
      obj->addToolBar((Qt::ToolBarArea)hb_parni(1), PQTOOLBAR(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  }
  else if (ISNUMPAR(1) && ISQTOOLBAR(1))
  {
    /*
    void addToolBar( QToolBar * toolbar )
    */
    QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL)
    {
      obj->addToolBar(PQTOOLBAR(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  }
  else if (ISNUMPAR(1) && HB_ISCHAR(1))
  {
    /*
    QToolBar * addToolBar( const QString &title )
    */
    QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL)
    {
      QToolBar *ptr = obj->addToolBar(PQSTRING(1));
      Qt5xHb::createReturnQWidgetClass(ptr, "QTOOLBAR");
    }
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
void addToolBarBreak( Qt::ToolBarArea area = Qt::TopToolBarArea )
*/
HB_FUNC_STATIC(QMAINWINDOW_ADDTOOLBARBREAK)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && ISNUMORNIL(1))
    {
#endif
      obj->addToolBarBreak(HB_ISNIL(1) ? (Qt::ToolBarArea)Qt::TopToolBarArea : (Qt::ToolBarArea)hb_parni(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
QWidget * centralWidget() const
*/
HB_FUNC_STATIC(QMAINWINDOW_CENTRALWIDGET)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      QWidget *ptr = obj->centralWidget();
      Qt5xHb::createReturnQWidgetClass(ptr, "QWIDGET");
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
Qt::DockWidgetArea corner( Qt::Corner corner ) const
*/
HB_FUNC_STATIC(QMAINWINDOW_CORNER)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1))
    {
#endif
      RENUM(obj->corner((Qt::Corner)hb_parni(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
virtual QMenu * createPopupMenu()
*/
HB_FUNC_STATIC(QMAINWINDOW_CREATEPOPUPMENU)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      QMenu *ptr = obj->createPopupMenu();
      Qt5xHb::createReturnQWidgetClass(ptr, "QMENU");
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QMainWindow::DockOptions dockOptions() const
*/
HB_FUNC_STATIC(QMAINWINDOW_DOCKOPTIONS)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RENUM(obj->dockOptions());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
Qt::DockWidgetArea dockWidgetArea( QDockWidget * dockwidget ) const
*/
HB_FUNC_STATIC(QMAINWINDOW_DOCKWIDGETAREA)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQDOCKWIDGET(1))
    {
#endif
      RENUM(obj->dockWidgetArea(PQDOCKWIDGET(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool documentMode() const
*/
HB_FUNC_STATIC(QMAINWINDOW_DOCUMENTMODE)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RBOOL(obj->documentMode());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QSize iconSize() const
*/
HB_FUNC_STATIC(QMAINWINDOW_ICONSIZE)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      QSize *ptr = new QSize(obj->iconSize());
      Qt5xHb::createReturnClass(ptr, "QSIZE", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void insertToolBar( QToolBar * before, QToolBar * toolbar )
*/
HB_FUNC_STATIC(QMAINWINDOW_INSERTTOOLBAR)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && ISQTOOLBAR(1) && ISQTOOLBAR(2))
    {
#endif
      obj->insertToolBar(PQTOOLBAR(1), PQTOOLBAR(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void insertToolBarBreak( QToolBar * before )
*/
HB_FUNC_STATIC(QMAINWINDOW_INSERTTOOLBARBREAK)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQTOOLBAR(1))
    {
#endif
      obj->insertToolBarBreak(PQTOOLBAR(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
bool isAnimated() const
*/
HB_FUNC_STATIC(QMAINWINDOW_ISANIMATED)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RBOOL(obj->isAnimated());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool isDockNestingEnabled() const
*/
HB_FUNC_STATIC(QMAINWINDOW_ISDOCKNESTINGENABLED)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RBOOL(obj->isDockNestingEnabled());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QMenuBar * menuBar() const
*/
HB_FUNC_STATIC(QMAINWINDOW_MENUBAR)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      QMenuBar *ptr = obj->menuBar();
      Qt5xHb::createReturnQWidgetClass(ptr, "QMENUBAR");
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QWidget * menuWidget() const
*/
HB_FUNC_STATIC(QMAINWINDOW_MENUWIDGET)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      QWidget *ptr = obj->menuWidget();
      Qt5xHb::createReturnQWidgetClass(ptr, "QWIDGET");
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void removeDockWidget( QDockWidget * dockwidget )
*/
HB_FUNC_STATIC(QMAINWINDOW_REMOVEDOCKWIDGET)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQDOCKWIDGET(1))
    {
#endif
      obj->removeDockWidget(PQDOCKWIDGET(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void removeToolBar( QToolBar * toolbar )
*/
HB_FUNC_STATIC(QMAINWINDOW_REMOVETOOLBAR)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQTOOLBAR(1))
    {
#endif
      obj->removeToolBar(PQTOOLBAR(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void removeToolBarBreak( QToolBar * before )
*/
HB_FUNC_STATIC(QMAINWINDOW_REMOVETOOLBARBREAK)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQTOOLBAR(1))
    {
#endif
      obj->removeToolBarBreak(PQTOOLBAR(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
bool restoreDockWidget( QDockWidget * dockwidget )
*/
HB_FUNC_STATIC(QMAINWINDOW_RESTOREDOCKWIDGET)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQDOCKWIDGET(1))
    {
#endif
      RBOOL(obj->restoreDockWidget(PQDOCKWIDGET(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool restoreState( const QByteArray &state, int version = 0 )
*/
HB_FUNC_STATIC(QMAINWINDOW_RESTORESTATE)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && ISQBYTEARRAY(1) && ISNUMORNIL(2))
    {
#endif
      RBOOL(obj->restoreState(*PQBYTEARRAY(1), OPINT(2, 0)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray saveState( int version = 0 ) const
*/
HB_FUNC_STATIC(QMAINWINDOW_SAVESTATE)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && ISNUMORNIL(1))
    {
#endif
      QByteArray *ptr = new QByteArray(obj->saveState(OPINT(1, 0)));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void setCentralWidget( QWidget * widget )
*/
HB_FUNC_STATIC(QMAINWINDOW_SETCENTRALWIDGET)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQWIDGET(1))
    {
#endif
      obj->setCentralWidget(PQWIDGET(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setCorner( Qt::Corner corner, Qt::DockWidgetArea area )
*/
HB_FUNC_STATIC(QMAINWINDOW_SETCORNER)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2))
    {
#endif
      obj->setCorner((Qt::Corner)hb_parni(1), (Qt::DockWidgetArea)hb_parni(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setDockOptions( QMainWindow::DockOptions options )
*/
HB_FUNC_STATIC(QMAINWINDOW_SETDOCKOPTIONS)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1))
    {
#endif
      obj->setDockOptions((QMainWindow::DockOptions)hb_parni(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setDocumentMode( bool enabled )
*/
HB_FUNC_STATIC(QMAINWINDOW_SETDOCUMENTMODE)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISLOG(1))
    {
#endif
      obj->setDocumentMode(PBOOL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setIconSize( const QSize &iconSize )
*/
HB_FUNC_STATIC(QMAINWINDOW_SETICONSIZE)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQSIZE(1))
    {
#endif
      obj->setIconSize(*PQSIZE(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setMenuBar( QMenuBar * menuBar )
*/
HB_FUNC_STATIC(QMAINWINDOW_SETMENUBAR)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQMENUBAR(1))
    {
#endif
      obj->setMenuBar(PQMENUBAR(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setMenuWidget( QWidget * menuBar )
*/
HB_FUNC_STATIC(QMAINWINDOW_SETMENUWIDGET)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQWIDGET(1))
    {
#endif
      obj->setMenuWidget(PQWIDGET(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setStatusBar( QStatusBar * statusbar )
*/
HB_FUNC_STATIC(QMAINWINDOW_SETSTATUSBAR)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQSTATUSBAR(1))
    {
#endif
      obj->setStatusBar(PQSTATUSBAR(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setTabPosition( Qt::DockWidgetAreas areas, QTabWidget::TabPosition tabPosition )
*/
HB_FUNC_STATIC(QMAINWINDOW_SETTABPOSITION)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2))
    {
#endif
      obj->setTabPosition((Qt::DockWidgetAreas)hb_parni(1), (QTabWidget::TabPosition)hb_parni(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setTabShape( QTabWidget::TabShape tabShape )
*/
HB_FUNC_STATIC(QMAINWINDOW_SETTABSHAPE)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1))
    {
#endif
      obj->setTabShape((QTabWidget::TabShape)hb_parni(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setToolButtonStyle( Qt::ToolButtonStyle toolButtonStyle )
*/
HB_FUNC_STATIC(QMAINWINDOW_SETTOOLBUTTONSTYLE)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1))
    {
#endif
      obj->setToolButtonStyle((Qt::ToolButtonStyle)hb_parni(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void splitDockWidget( QDockWidget * first, QDockWidget * second, Qt::Orientation orientation )
*/
HB_FUNC_STATIC(QMAINWINDOW_SPLITDOCKWIDGET)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(3) && ISQDOCKWIDGET(1) && ISQDOCKWIDGET(2) && HB_ISNUM(3))
    {
#endif
      obj->splitDockWidget(PQDOCKWIDGET(1), PQDOCKWIDGET(2), (Qt::Orientation)hb_parni(3));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
QStatusBar * statusBar() const
*/
HB_FUNC_STATIC(QMAINWINDOW_STATUSBAR)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      QStatusBar *ptr = obj->statusBar();
      Qt5xHb::createReturnQWidgetClass(ptr, "QSTATUSBAR");
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QTabWidget::TabPosition tabPosition( Qt::DockWidgetArea area ) const
*/
HB_FUNC_STATIC(QMAINWINDOW_TABPOSITION)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1))
    {
#endif
      RENUM(obj->tabPosition((Qt::DockWidgetArea)hb_parni(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QTabWidget::TabShape tabShape() const
*/
HB_FUNC_STATIC(QMAINWINDOW_TABSHAPE)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RENUM(obj->tabShape());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void tabifyDockWidget( QDockWidget * first, QDockWidget * second )
*/
HB_FUNC_STATIC(QMAINWINDOW_TABIFYDOCKWIDGET)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && ISQDOCKWIDGET(1) && ISQDOCKWIDGET(2))
    {
#endif
      obj->tabifyDockWidget(PQDOCKWIDGET(1), PQDOCKWIDGET(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
Qt::ToolBarArea toolBarArea( QToolBar * toolbar ) const
*/
HB_FUNC_STATIC(QMAINWINDOW_TOOLBARAREA)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQTOOLBAR(1))
    {
#endif
      RENUM(obj->toolBarArea(PQTOOLBAR(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool toolBarBreak( QToolBar * toolbar ) const
*/
HB_FUNC_STATIC(QMAINWINDOW_TOOLBARBREAK)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQTOOLBAR(1))
    {
#endif
      RBOOL(obj->toolBarBreak(PQTOOLBAR(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
Qt::ToolButtonStyle toolButtonStyle() const
*/
HB_FUNC_STATIC(QMAINWINDOW_TOOLBUTTONSTYLE)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RENUM(obj->toolButtonStyle());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void setAnimated( bool enabled )
*/
HB_FUNC_STATIC(QMAINWINDOW_SETANIMATED)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISLOG(1))
    {
#endif
      obj->setAnimated(PBOOL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void setDockNestingEnabled( bool enabled ) const
*/
HB_FUNC_STATIC(QMAINWINDOW_SETDOCKNESTINGENABLED)
{
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISLOG(1))
    {
#endif
      obj->setDockNestingEnabled(PBOOL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
QWidget * takeCentralWidget()
*/
HB_FUNC_STATIC(QMAINWINDOW_TAKECENTRALWIDGET)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 2, 0))
  QMainWindow *obj = (QMainWindow *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      QWidget *ptr = obj->takeCentralWidget();
      Qt5xHb::createReturnQWidgetClass(ptr, "QWIDGET");
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

void QMainWindowSlots_connect_signal(const QString &signal, const QString &slot);

HB_FUNC_STATIC(QMAINWINDOW_ONICONSIZECHANGED)
{
  QMainWindowSlots_connect_signal("iconSizeChanged(QSize)", "iconSizeChanged(QSize)");
}

HB_FUNC_STATIC(QMAINWINDOW_ONTOOLBUTTONSTYLECHANGED)
{
  QMainWindowSlots_connect_signal("toolButtonStyleChanged(Qt::ToolButtonStyle)",
                                  "toolButtonStyleChanged(Qt::ToolButtonStyle)");
}

#pragma ENDDUMP
