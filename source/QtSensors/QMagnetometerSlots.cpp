//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

#include "QMagnetometerSlots.hpp"

QMagnetometerSlots::QMagnetometerSlots(QObject *parent) : QObject(parent)
{
}

QMagnetometerSlots::~QMagnetometerSlots()
{
}

#if (QT_VERSION >= QT_VERSION_CHECK(5, 1, 0))
void QMagnetometerSlots::returnGeoValuesChanged(bool returnGeoValues)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "returnGeoValuesChanged(bool)");

  if (cb != NULL) {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QMAGNETOMETER");
    PHB_ITEM preturnGeoValues = hb_itemPutL(NULL, returnGeoValues);

    hb_vmEvalBlockV(cb, 2, psender, preturnGeoValues);

    hb_itemRelease(psender);
    hb_itemRelease(preturnGeoValues);
  }
}
#endif

void QMagnetometerSlots_connect_signal(const QString &signal, const QString &slot)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 1, 0))
  QMagnetometer *obj = (QMagnetometer *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
    QMagnetometerSlots *s = QCoreApplication::instance()->findChild<QMagnetometerSlots *>();

    if (s == NULL) {
      s = new QMagnetometerSlots();
      s->moveToThread(QCoreApplication::instance()->thread());
      s->setParent(QCoreApplication::instance());
    }

    hb_retl(Qt5xHb::Signals_connection_disconnection(s, signal, slot));
  } else {
    hb_retl(false);
  }
#else
  hb_retl(false);
#endif
}
