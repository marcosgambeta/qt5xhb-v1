//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

#include "QMediaObjectSlots.hpp"

QMediaObjectSlots::QMediaObjectSlots(QObject *parent) : QObject(parent)
{
}

QMediaObjectSlots::~QMediaObjectSlots()
{
}

void QMediaObjectSlots::availabilityChanged(bool available)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "availabilityChanged(bool)");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QMEDIAOBJECT");
    PHB_ITEM pavailable = hb_itemPutL(NULL, available);

    hb_vmEvalBlockV(cb, 2, psender, pavailable);

    hb_itemRelease(psender);
    hb_itemRelease(pavailable);
  }
}

void QMediaObjectSlots::availabilityChanged(QMultimedia::AvailabilityStatus availability)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "availabilityChanged(QMultimedia::AvailabilityStatus)");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QMEDIAOBJECT");
    PHB_ITEM pavailability = hb_itemPutNI(NULL, static_cast<int>(availability));

    hb_vmEvalBlockV(cb, 2, psender, pavailability);

    hb_itemRelease(psender);
    hb_itemRelease(pavailability);
  }
}

void QMediaObjectSlots::metaDataAvailableChanged(bool available)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "metaDataAvailableChanged(bool)");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QMEDIAOBJECT");
    PHB_ITEM pavailable = hb_itemPutL(NULL, available);

    hb_vmEvalBlockV(cb, 2, psender, pavailable);

    hb_itemRelease(psender);
    hb_itemRelease(pavailable);
  }
}

void QMediaObjectSlots::metaDataChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "metaDataChanged()");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QMEDIAOBJECT");

    hb_vmEvalBlockV(cb, 1, psender);

    hb_itemRelease(psender);
  }
}

void QMediaObjectSlots::metaDataChanged(const QString &key, const QVariant &value)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "metaDataChanged(QString,QVariant)");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QMEDIAOBJECT");
    PHB_ITEM pkey = hb_itemPutC(NULL, QSTRINGTOSTRING(key));
    PHB_ITEM pvalue = Qt5xHb::Signals_return_object((void *)&value, "QVARIANT");

    hb_vmEvalBlockV(cb, 3, psender, pkey, pvalue);

    hb_itemRelease(psender);
    hb_itemRelease(pkey);
    hb_itemRelease(pvalue);
  }
}

void QMediaObjectSlots::notifyIntervalChanged(int milliseconds)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "notifyIntervalChanged(int)");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QMEDIAOBJECT");
    PHB_ITEM pmilliseconds = hb_itemPutNI(NULL, milliseconds);

    hb_vmEvalBlockV(cb, 2, psender, pmilliseconds);

    hb_itemRelease(psender);
    hb_itemRelease(pmilliseconds);
  }
}

void QMediaObjectSlots_connect_signal(const QString &signal, const QString &slot)
{
  QMediaObject *obj = (QMediaObject *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
    QMediaObjectSlots *s = QCoreApplication::instance()->findChild<QMediaObjectSlots *>();

    if (s == NULL)
    {
      s = new QMediaObjectSlots();
      s->moveToThread(QCoreApplication::instance()->thread());
      s->setParent(QCoreApplication::instance());
    }

    hb_retl(Qt5xHb::Signals_connection_disconnection(s, signal, slot));
  } else {
    hb_retl(false);
  }
}
