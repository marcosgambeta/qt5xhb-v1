//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

#include "QCameraCaptureBufferFormatControlSlots.hpp"

QCameraCaptureBufferFormatControlSlots::QCameraCaptureBufferFormatControlSlots(QObject *parent) : QObject(parent)
{
}

QCameraCaptureBufferFormatControlSlots::~QCameraCaptureBufferFormatControlSlots()
{
}

void QCameraCaptureBufferFormatControlSlots::bufferFormatChanged(QVideoFrame::PixelFormat format)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "bufferFormatChanged(QVideoFrame::PixelFormat)");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QCAMERACAPTUREBUFFERFORMATCONTROL");
    PHB_ITEM pformat = hb_itemPutNI(NULL, static_cast<int>(format));

    hb_vmEvalBlockV(cb, 2, psender, pformat);

    hb_itemRelease(psender);
    hb_itemRelease(pformat);
  }
}

void QCameraCaptureBufferFormatControlSlots_connect_signal(const QString &signal, const QString &slot)
{
  QCameraCaptureBufferFormatControl *obj = (QCameraCaptureBufferFormatControl *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
    QCameraCaptureBufferFormatControlSlots *s =
        QCoreApplication::instance()->findChild<QCameraCaptureBufferFormatControlSlots *>();

    if (s == NULL)
    {
      s = new QCameraCaptureBufferFormatControlSlots();
      s->moveToThread(QCoreApplication::instance()->thread());
      s->setParent(QCoreApplication::instance());
    }

    hb_retl(Qt5xHb::Signals_connection_disconnection(s, signal, slot));
  } else {
    hb_retl(false);
  }
}
