//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta AT outlook DOT com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include "hbclass.ch"

#ifndef QT5XHB_NO_REQUESTS
#endif

CLASS QMediaAudioProbeControl INHERIT QMediaControl

   METHOD delete

   METHOD onAudioBufferProbed
   METHOD onFlush

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QMediaAudioProbeControl
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#include <QtMultimedia/QMediaAudioProbeControl>
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"
#include "qt5xhb_events.hpp"
#include "qt5xhb_signals.hpp"

#ifdef __XHARBOUR__
#include <QtMultimedia/QMediaAudioProbeControl>
#endif

    /*
    virtual ~QMediaAudioProbeControl()
    */
HB_FUNC_STATIC(QMEDIAAUDIOPROBECONTROL_DELETE)
{
  QMediaAudioProbeControl *obj = (QMediaAudioProbeControl *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
    Qt5xHb::Events_disconnect_all_events(obj, true);
    Qt5xHb::Signals_disconnect_all_signals(obj, true);
    delete obj;
    obj = NULL;
    PHB_ITEM ptr = hb_itemPutPtr(NULL, NULL);
    hb_objSendMsg(hb_stackSelfItem(), "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
  }

  hb_itemReturn(hb_stackSelfItem());
}

void QMediaAudioProbeControlSlots_connect_signal(const QString &signal, const QString &slot);

HB_FUNC_STATIC(QMEDIAAUDIOPROBECONTROL_ONAUDIOBUFFERPROBED)
{
  QMediaAudioProbeControlSlots_connect_signal("audioBufferProbed(QAudioBuffer)", "audioBufferProbed(QAudioBuffer)");
}

HB_FUNC_STATIC(QMEDIAAUDIOPROBECONTROL_ONFLUSH)
{
  QMediaAudioProbeControlSlots_connect_signal("flush()", "flush()");
}

#pragma ENDDUMP
