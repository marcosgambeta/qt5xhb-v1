//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT5XHB_NO_REQUESTS
#endif

CLASS QCanBusDeviceInfo

   DATA pointer
   DATA self_destruction INIT .F.

   METHOD new
   METHOD delete
   METHOD swap
   METHOD name
   METHOD hasFlexibleDataRate
   METHOD isVirtual
   METHOD channel
   METHOD description
   METHOD serialNumber

   METHOD newFrom
   METHOD newFromObject
   METHOD newFromPointer
   METHOD selfDestruction
   METHOD setSelfDestruction

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QCanBusDeviceInfo
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#if (QT_VERSION >= QT_VERSION_CHECK(5, 9, 0))
#include <QtSerialBus/QCanBusDeviceInfo>
#endif
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"

#ifdef __XHARBOUR__
#if (QT_VERSION >= QT_VERSION_CHECK(5, 9, 0))
#include <QtSerialBus/QCanBusDeviceInfo>
#endif
#endif

HB_FUNC_STATIC(QCANBUSDEVICEINFO_NEW)
{
  if (ISNUMPAR(0))
  {
    /*
    QCanBusDeviceInfo()
    */
#if (QT_VERSION >= QT_VERSION_CHECK(5, 9, 0))
    QCanBusDeviceInfo *obj = new QCanBusDeviceInfo();
    Qt5xHb::returnNewObject(obj, true);
#endif
  }
  else if (ISNUMPAR(1) && ISQCANBUSDEVICEINFO(1))
  {
    /*
    QCanBusDeviceInfo( const QCanBusDeviceInfo &other )
    */
#if (QT_VERSION >= QT_VERSION_CHECK(5, 9, 0))
    QCanBusDeviceInfo *obj = new QCanBusDeviceInfo(*PQCANBUSDEVICEINFO(1));
    Qt5xHb::returnNewObject(obj, true);
#endif
  }
  else
  {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
~QCanBusDeviceInfo()
*/
HB_FUNC_STATIC(QCANBUSDEVICEINFO_DELETE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 9, 0))
  QCanBusDeviceInfo *obj = (QCanBusDeviceInfo *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
    delete obj;
    obj = NULL;
    PHB_ITEM ptr = hb_itemPutPtr(NULL, NULL);
    hb_objSendMsg(hb_stackSelfItem(), "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
void swap( QCanBusDeviceInfo &other ) Q_DECL_NOTHROW
*/
HB_FUNC_STATIC(QCANBUSDEVICEINFO_SWAP)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 9, 0))
  QCanBusDeviceInfo *obj = (QCanBusDeviceInfo *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQCANBUSDEVICEINFO(1))
    {
#endif
      obj->swap(*PQCANBUSDEVICEINFO(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QString name() const
*/
HB_FUNC_STATIC(QCANBUSDEVICEINFO_NAME)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 9, 0))
  QCanBusDeviceInfo *obj = (QCanBusDeviceInfo *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RQSTRING(obj->name());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
bool hasFlexibleDataRate() const
*/
HB_FUNC_STATIC(QCANBUSDEVICEINFO_HASFLEXIBLEDATARATE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 9, 0))
  QCanBusDeviceInfo *obj = (QCanBusDeviceInfo *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RBOOL(obj->hasFlexibleDataRate());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
bool isVirtual() const
*/
HB_FUNC_STATIC(QCANBUSDEVICEINFO_ISVIRTUAL)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 9, 0))
  QCanBusDeviceInfo *obj = (QCanBusDeviceInfo *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RBOOL(obj->isVirtual());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
int channel() const
*/
HB_FUNC_STATIC(QCANBUSDEVICEINFO_CHANNEL)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 11, 0))
  QCanBusDeviceInfo *obj = (QCanBusDeviceInfo *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RINT(obj->channel());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
QString description() const
*/
HB_FUNC_STATIC(QCANBUSDEVICEINFO_DESCRIPTION)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 11, 0))
  QCanBusDeviceInfo *obj = (QCanBusDeviceInfo *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RQSTRING(obj->description());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
QString serialNumber() const
*/
HB_FUNC_STATIC(QCANBUSDEVICEINFO_SERIALNUMBER)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 11, 0))
  QCanBusDeviceInfo *obj = (QCanBusDeviceInfo *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0))
    {
#endif
      RQSTRING(obj->serialNumber());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

#pragma ENDDUMP
