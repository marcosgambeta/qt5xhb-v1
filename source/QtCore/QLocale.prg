//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT5XHB_NO_REQUESTS
REQUEST QCHAR
REQUEST QDATE
REQUEST QDATETIME
REQUEST QTIME
#endif

CLASS QLocale

   DATA pointer
   DATA self_destruction INIT .F.

   METHOD new
   METHOD delete
   METHOD amText
   METHOD bcp47Name
   METHOD country
   METHOD createSeparatedList
   METHOD currencySymbol
   METHOD dateFormat
   METHOD dateTimeFormat
   METHOD dayName
   METHOD decimalPoint
   METHOD exponential
   METHOD firstDayOfWeek
   METHOD groupSeparator
   METHOD language
   METHOD measurementSystem
   METHOD monthName
   METHOD name
   METHOD nativeCountryName
   METHOD nativeLanguageName
   METHOD negativeSign
   METHOD numberOptions
   METHOD percent
   METHOD pmText
   METHOD positiveSign
   METHOD quoteString1
   METHOD quoteString2
   METHOD quoteString
   METHOD script
   METHOD setNumberOptions
   METHOD standaloneDayName
   METHOD standaloneMonthName
   METHOD textDirection
   METHOD timeFormat
   METHOD toCurrencyString1
   METHOD toCurrencyString2
   METHOD toCurrencyString3
   METHOD toCurrencyString4
   METHOD toCurrencyString5
   METHOD toCurrencyString6
   METHOD toCurrencyString7
   METHOD toCurrencyString8
   METHOD toCurrencyString
   METHOD toDate
   METHOD toDateTime
   METHOD toDouble
   METHOD toFloat
   METHOD toLower
   METHOD toString1
   METHOD toString2
   METHOD toString3
   METHOD toString4
   METHOD toString5
   METHOD toString6
   METHOD toString7
   METHOD toString8
   METHOD toString9
   METHOD toString10
   METHOD toString11
   METHOD toString12
   METHOD toString13
   METHOD toString14
   METHOD toString
   METHOD toTime
   METHOD toUpper
   METHOD uiLanguages
   METHOD weekdays
   METHOD zeroDigit
   METHOD c
   METHOD countryToString
   METHOD languageToString
   METHOD matchingLocales
   METHOD scriptToString
   METHOD setDefault
   METHOD system

   METHOD newFrom
   METHOD newFromObject
   METHOD newFromPointer
   METHOD selfDestruction
   METHOD setSelfDestruction

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QLocale
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#include <QtCore/QLocale>
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"

#ifdef __XHARBOUR__
#include <QtCore/QLocale>
#endif

#include <QtCore/QDate>
#include <QtCore/QStringList>

HB_FUNC_STATIC(QLOCALE_NEW)
{
  if (ISNUMPAR(0)) {
    /*
    QLocale()
    */
    QLocale *obj = new QLocale();
    Qt5xHb::returnNewObject(obj, true);
  } else if (ISNUMPAR(1) && HB_ISCHAR(1)) {
    /*
    QLocale( const QString &name )
    */
    QLocale *obj = new QLocale(PQSTRING(1));
    Qt5xHb::returnNewObject(obj, true);
  } else if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
    /*
    QLocale( QLocale::Language language, QLocale::Country country = QLocale::AnyCountry )
    */
    QLocale *obj = new QLocale((QLocale::Language)hb_parni(1),
                               HB_ISNIL(2) ? (QLocale::Country)QLocale::AnyCountry : (QLocale::Country)hb_parni(2));
    Qt5xHb::returnNewObject(obj, true);
  } else if (ISNUMPAR(3) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3)) {
    /*
    QLocale( QLocale::Language language, QLocale::Script script, QLocale::Country country )
    */
    QLocale *obj =
        new QLocale((QLocale::Language)hb_parni(1), (QLocale::Script)hb_parni(2), (QLocale::Country)hb_parni(3));
    Qt5xHb::returnNewObject(obj, true);
  } else if (ISNUMPAR(1) && ISQLOCALE(1)) {
    /*
    QLocale( const QLocale &other )
    */
    QLocale *obj = new QLocale(*PQLOCALE(1));
    Qt5xHb::returnNewObject(obj, true);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QLOCALE_DELETE)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
    delete obj;
    obj = NULL;
    PHB_ITEM ptr = hb_itemPutPtr(NULL, NULL);
    hb_objSendMsg(hb_stackSelfItem(), "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
QString amText() const
*/
HB_FUNC_STATIC(QLOCALE_AMTEXT)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQSTRING(obj->amText());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString bcp47Name() const
*/
HB_FUNC_STATIC(QLOCALE_BCP47NAME)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQSTRING(obj->bcp47Name());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QLocale::Country country() const
*/
HB_FUNC_STATIC(QLOCALE_COUNTRY)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->country());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString createSeparatedList( const QStringList &list ) const
*/
HB_FUNC_STATIC(QLOCALE_CREATESEPARATEDLIST)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISARRAY(1)) {
#endif
      RQSTRING(obj->createSeparatedList(PQSTRINGLIST(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString currencySymbol( QLocale::CurrencySymbolFormat format = QLocale::CurrencySymbol ) const
*/
HB_FUNC_STATIC(QLOCALE_CURRENCYSYMBOL)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && ISNUMORNIL(1)) {
#endif
      RQSTRING(obj->currencySymbol(HB_ISNIL(1) ? (QLocale::CurrencySymbolFormat)QLocale::CurrencySymbol
                                               : (QLocale::CurrencySymbolFormat)hb_parni(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString dateFormat( QLocale::FormatType format = QLocale::LongFormat ) const
*/
HB_FUNC_STATIC(QLOCALE_DATEFORMAT)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && ISNUMORNIL(1)) {
#endif
      RQSTRING(
          obj->dateFormat(HB_ISNIL(1) ? (QLocale::FormatType)QLocale::LongFormat : (QLocale::FormatType)hb_parni(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString dateTimeFormat( QLocale::FormatType format = QLocale::LongFormat ) const
*/
HB_FUNC_STATIC(QLOCALE_DATETIMEFORMAT)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && ISNUMORNIL(1)) {
#endif
      RQSTRING(obj->dateTimeFormat(HB_ISNIL(1) ? (QLocale::FormatType)QLocale::LongFormat
                                               : (QLocale::FormatType)hb_parni(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString dayName( int day, QLocale::FormatType type = QLocale::LongFormat ) const
*/
HB_FUNC_STATIC(QLOCALE_DAYNAME)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
      RQSTRING(obj->dayName(PINT(1),
                            HB_ISNIL(2) ? (QLocale::FormatType)QLocale::LongFormat : (QLocale::FormatType)hb_parni(2)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QChar decimalPoint() const
*/
HB_FUNC_STATIC(QLOCALE_DECIMALPOINT)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QChar *ptr = new QChar(obj->decimalPoint());
      Qt5xHb::createReturnClass(ptr, "QCHAR", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QChar exponential() const
*/
HB_FUNC_STATIC(QLOCALE_EXPONENTIAL)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QChar *ptr = new QChar(obj->exponential());
      Qt5xHb::createReturnClass(ptr, "QCHAR", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
Qt::DayOfWeek firstDayOfWeek() const
*/
HB_FUNC_STATIC(QLOCALE_FIRSTDAYOFWEEK)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->firstDayOfWeek());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QChar groupSeparator() const
*/
HB_FUNC_STATIC(QLOCALE_GROUPSEPARATOR)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QChar *ptr = new QChar(obj->groupSeparator());
      Qt5xHb::createReturnClass(ptr, "QCHAR", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QLocale::Language language() const
*/
HB_FUNC_STATIC(QLOCALE_LANGUAGE)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->language());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QLocale::MeasurementSystem measurementSystem() const
*/
HB_FUNC_STATIC(QLOCALE_MEASUREMENTSYSTEM)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->measurementSystem());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString monthName( int month, QLocale::FormatType type = QLocale::LongFormat ) const
*/
HB_FUNC_STATIC(QLOCALE_MONTHNAME)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
      RQSTRING(obj->monthName(PINT(1), HB_ISNIL(2) ? (QLocale::FormatType)QLocale::LongFormat
                                                   : (QLocale::FormatType)hb_parni(2)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString name() const
*/
HB_FUNC_STATIC(QLOCALE_NAME)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQSTRING(obj->name());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString nativeCountryName() const
*/
HB_FUNC_STATIC(QLOCALE_NATIVECOUNTRYNAME)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQSTRING(obj->nativeCountryName());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString nativeLanguageName() const
*/
HB_FUNC_STATIC(QLOCALE_NATIVELANGUAGENAME)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQSTRING(obj->nativeLanguageName());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QChar negativeSign() const
*/
HB_FUNC_STATIC(QLOCALE_NEGATIVESIGN)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QChar *ptr = new QChar(obj->negativeSign());
      Qt5xHb::createReturnClass(ptr, "QCHAR", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QLocale::NumberOptions numberOptions() const
*/
HB_FUNC_STATIC(QLOCALE_NUMBEROPTIONS)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->numberOptions());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QChar percent() const
*/
HB_FUNC_STATIC(QLOCALE_PERCENT)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QChar *ptr = new QChar(obj->percent());
      Qt5xHb::createReturnClass(ptr, "QCHAR", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString pmText() const
*/
HB_FUNC_STATIC(QLOCALE_PMTEXT)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQSTRING(obj->pmText());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QChar positiveSign() const
*/
HB_FUNC_STATIC(QLOCALE_POSITIVESIGN)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QChar *ptr = new QChar(obj->positiveSign());
      Qt5xHb::createReturnClass(ptr, "QCHAR", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString quoteString( const QString &str, QLocale::QuotationStyle style = QLocale::StandardQuotation ) const
*/
HB_FUNC_STATIC(QLOCALE_QUOTESTRING1)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISCHAR(1) && ISNUMORNIL(2)) {
#endif
      RQSTRING(obj->quoteString(PQSTRING(1), HB_ISNIL(2) ? (QLocale::QuotationStyle)QLocale::StandardQuotation
                                                         : (QLocale::QuotationStyle)hb_parni(2)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString quoteString( const QStringRef &str, QLocale::QuotationStyle style = QLocale::StandardQuotation ) const
*/
HB_FUNC_STATIC(QLOCALE_QUOTESTRING2)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && ISQSTRINGREF(1) && ISNUMORNIL(2)) {
#endif
      RQSTRING(obj->quoteString(*PQSTRINGREF(1), HB_ISNIL(2) ? (QLocale::QuotationStyle)QLocale::StandardQuotation
                                                             : (QLocale::QuotationStyle)hb_parni(2)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QLOCALE_QUOTESTRING)
{
  HB_FUNC_EXEC(QLOCALE_QUOTESTRING1);
}

/*
QLocale::Script script() const
*/
HB_FUNC_STATIC(QLOCALE_SCRIPT)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->script());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void setNumberOptions( QLocale::NumberOptions options )
*/
HB_FUNC_STATIC(QLOCALE_SETNUMBEROPTIONS)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->setNumberOptions((QLocale::NumberOptions)hb_parni(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
QString standaloneDayName( int day, QLocale::FormatType type = QLocale::LongFormat ) const
*/
HB_FUNC_STATIC(QLOCALE_STANDALONEDAYNAME)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
      RQSTRING(obj->standaloneDayName(PINT(1), HB_ISNIL(2) ? (QLocale::FormatType)QLocale::LongFormat
                                                           : (QLocale::FormatType)hb_parni(2)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString standaloneMonthName( int month, QLocale::FormatType type = QLocale::LongFormat ) const
*/
HB_FUNC_STATIC(QLOCALE_STANDALONEMONTHNAME)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
      RQSTRING(obj->standaloneMonthName(PINT(1), HB_ISNIL(2) ? (QLocale::FormatType)QLocale::LongFormat
                                                             : (QLocale::FormatType)hb_parni(2)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
Qt::LayoutDirection textDirection() const
*/
HB_FUNC_STATIC(QLOCALE_TEXTDIRECTION)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->textDirection());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString timeFormat( QLocale::FormatType format = QLocale::LongFormat ) const
*/
HB_FUNC_STATIC(QLOCALE_TIMEFORMAT)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && ISNUMORNIL(1)) {
#endif
      RQSTRING(
          obj->timeFormat(HB_ISNIL(1) ? (QLocale::FormatType)QLocale::LongFormat : (QLocale::FormatType)hb_parni(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toCurrencyString( qlonglong value, const QString &symbol = QString() ) const
*/
HB_FUNC_STATIC(QLOCALE_TOCURRENCYSTRING1)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISCHARORNIL(2)) {
#endif
      RQSTRING(obj->toCurrencyString(PQLONGLONG(1), OPQSTRING(2, QString())));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toCurrencyString( short value, const QString &symbol = QString() ) const
*/
HB_FUNC_STATIC(QLOCALE_TOCURRENCYSTRING2)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISCHARORNIL(2)) {
#endif
      RQSTRING(obj->toCurrencyString(PSHORT(1), OPQSTRING(2, QString())));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toCurrencyString( ushort value, const QString &symbol = QString() ) const
*/
HB_FUNC_STATIC(QLOCALE_TOCURRENCYSTRING3)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISCHARORNIL(2)) {
#endif
      RQSTRING(obj->toCurrencyString(PUSHORT(1), OPQSTRING(2, QString())));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toCurrencyString( int value, const QString &symbol = QString() ) const
*/
HB_FUNC_STATIC(QLOCALE_TOCURRENCYSTRING4)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISCHARORNIL(2)) {
#endif
      RQSTRING(obj->toCurrencyString(PINT(1), OPQSTRING(2, QString())));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toCurrencyString( uint value, const QString &symbol = QString() ) const
*/
HB_FUNC_STATIC(QLOCALE_TOCURRENCYSTRING5)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISCHARORNIL(2)) {
#endif
      RQSTRING(obj->toCurrencyString(PUINT(1), OPQSTRING(2, QString())));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toCurrencyString( float value, const QString &symbol = QString() ) const
*/
HB_FUNC_STATIC(QLOCALE_TOCURRENCYSTRING6)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISCHARORNIL(2)) {
#endif
      RQSTRING(obj->toCurrencyString(PFLOAT(1), OPQSTRING(2, QString())));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toCurrencyString( qulonglong value, const QString &symbol = QString() ) const
*/
HB_FUNC_STATIC(QLOCALE_TOCURRENCYSTRING7)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISCHARORNIL(2)) {
#endif
      RQSTRING(obj->toCurrencyString(PQULONGLONG(1), OPQSTRING(2, QString())));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toCurrencyString( double value, const QString &symbol = QString() ) const
*/
HB_FUNC_STATIC(QLOCALE_TOCURRENCYSTRING8)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISCHARORNIL(2)) {
#endif
      RQSTRING(obj->toCurrencyString(PDOUBLE(1), OPQSTRING(2, QString())));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QLOCALE_TOCURRENCYSTRING)
{
}

HB_FUNC_STATIC(QLOCALE_TODATE)
{
  if (ISBETWEEN(1, 2) && HB_ISCHAR(1) && ISNUMORNIL(2)) {
    /*
    QDate toDate( const QString &string, QLocale::FormatType format = QLocale::LongFormat ) const
    */
    QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QDate *ptr = new QDate(obj->toDate(PQSTRING(1), HB_ISNIL(2) ? (QLocale::FormatType)QLocale::LongFormat
                                                                  : (QLocale::FormatType)hb_parni(2)));
      Qt5xHb::createReturnClass(ptr, "QDATE", true);
    }
  } else if (ISNUMPAR(2) && HB_ISCHAR(1) && HB_ISCHAR(2)) {
    /*
    QDate toDate( const QString &string, const QString &format ) const
    */
    QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QDate *ptr = new QDate(obj->toDate(PQSTRING(1), PQSTRING(2)));
      Qt5xHb::createReturnClass(ptr, "QDATE", true);
    }
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QLOCALE_TODATETIME)
{
  if (ISBETWEEN(1, 2) && HB_ISCHAR(1) && ISNUMORNIL(2)) {
    /*
    QDateTime toDateTime( const QString &string, QLocale::FormatType format = QLocale::LongFormat ) const
    */
    QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QDateTime *ptr = new QDateTime(obj->toDateTime(PQSTRING(1), HB_ISNIL(2) ? (QLocale::FormatType)QLocale::LongFormat
                                                                              : (QLocale::FormatType)hb_parni(2)));
      Qt5xHb::createReturnClass(ptr, "QDATETIME", true);
    }
  } else if (ISNUMPAR(2) && HB_ISCHAR(1) && HB_ISCHAR(2)) {
    /*
    QDateTime toDateTime( const QString &string, const QString &format ) const
    */
    QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QDateTime *ptr = new QDateTime(obj->toDateTime(PQSTRING(1), PQSTRING(2)));
      Qt5xHb::createReturnClass(ptr, "QDATETIME", true);
    }
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
double toDouble( const QString &s, bool * ok = 0 ) const
*/
HB_FUNC_STATIC(QLOCALE_TODOUBLE)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISCHAR(1) && ISLOGORNIL(2)) {
#endif
      bool par2;
      RDOUBLE(obj->toDouble(PQSTRING(1), &par2));
      hb_storl(par2, 2);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
float toFloat( const QString &s, bool * ok = 0 ) const
*/
HB_FUNC_STATIC(QLOCALE_TOFLOAT)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISCHAR(1) && ISLOGORNIL(2)) {
#endif
      bool par2;
      RFLOAT(obj->toFloat(PQSTRING(1), &par2));
      hb_storl(par2, 2);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toLower( const QString &str ) const
*/
HB_FUNC_STATIC(QLOCALE_TOLOWER)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISCHAR(1)) {
#endif
      RQSTRING(obj->toLower(PQSTRING(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toString( qlonglong i ) const
*/
HB_FUNC_STATIC(QLOCALE_TOSTRING1)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      RQSTRING(obj->toString(PQLONGLONG(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toString( const QDate &date, const QString &format ) const
*/
HB_FUNC_STATIC(QLOCALE_TOSTRING2)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && ISQDATE(1) && HB_ISCHAR(2)) {
#endif
      RQSTRING(obj->toString(*PQDATE(1), PQSTRING(2)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toString( const QDate &date, QLocale::FormatType format = QLocale::LongFormat ) const
*/
HB_FUNC_STATIC(QLOCALE_TOSTRING3)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && ISQDATE(1) && ISNUMORNIL(2)) {
#endif
      RQSTRING(obj->toString(*PQDATE(1), HB_ISNIL(2) ? (QLocale::FormatType)QLocale::LongFormat
                                                     : (QLocale::FormatType)hb_parni(2)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toString( const QTime &time, const QString &format ) const
*/
HB_FUNC_STATIC(QLOCALE_TOSTRING4)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && ISQTIME(1) && HB_ISCHAR(2)) {
#endif
      RQSTRING(obj->toString(*PQTIME(1), PQSTRING(2)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toString( const QTime &time, QLocale::FormatType format = QLocale::LongFormat ) const
*/
HB_FUNC_STATIC(QLOCALE_TOSTRING5)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && ISQTIME(1) && ISNUMORNIL(2)) {
#endif
      RQSTRING(obj->toString(*PQTIME(1), HB_ISNIL(2) ? (QLocale::FormatType)QLocale::LongFormat
                                                     : (QLocale::FormatType)hb_parni(2)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toString( const QDateTime &dateTime, QLocale::FormatType format = QLocale::LongFormat ) const
*/
HB_FUNC_STATIC(QLOCALE_TOSTRING6)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && ISQDATETIME(1) && ISNUMORNIL(2)) {
#endif
      RQSTRING(obj->toString(*PQDATETIME(1), HB_ISNIL(2) ? (QLocale::FormatType)QLocale::LongFormat
                                                         : (QLocale::FormatType)hb_parni(2)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toString( const QDateTime &dateTime, const QString &format ) const
*/
HB_FUNC_STATIC(QLOCALE_TOSTRING7)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && ISQDATETIME(1) && HB_ISCHAR(2)) {
#endif
      RQSTRING(obj->toString(*PQDATETIME(1), PQSTRING(2)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toString( short i ) const
*/
HB_FUNC_STATIC(QLOCALE_TOSTRING8)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      RQSTRING(obj->toString(PSHORT(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toString( ushort i ) const
*/
HB_FUNC_STATIC(QLOCALE_TOSTRING9)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      RQSTRING(obj->toString(PUSHORT(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toString( int i ) const
*/
HB_FUNC_STATIC(QLOCALE_TOSTRING10)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      RQSTRING(obj->toString(PINT(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toString( uint i ) const
*/
HB_FUNC_STATIC(QLOCALE_TOSTRING11)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      RQSTRING(obj->toString(PUINT(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toString( float i, char f = 'g', int prec = 6 ) const
*/
HB_FUNC_STATIC(QLOCALE_TOSTRING12)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 3) && HB_ISNUM(1) && ISNUMORNIL(2) && ISNUMORNIL(3)) {
#endif
      RQSTRING(obj->toString(PFLOAT(1), OPCHAR(2, 'g'), OPINT(3, 6)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toString( qulonglong i ) const
*/
HB_FUNC_STATIC(QLOCALE_TOSTRING13)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      RQSTRING(obj->toString(PQULONGLONG(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QString toString( double i, char f = 'g', int prec = 6 ) const
*/
HB_FUNC_STATIC(QLOCALE_TOSTRING14)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 3) && HB_ISNUM(1) && ISNUMORNIL(2) && ISNUMORNIL(3)) {
#endif
      RQSTRING(obj->toString(PDOUBLE(1), OPCHAR(2, 'g'), OPINT(3, 6)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QLOCALE_TOSTRING)
{
  if (ISNUMPAR(1) && HB_ISNUM(1)) {
    HB_FUNC_EXEC(QLOCALE_TOSTRING10);
  } else if (ISNUMPAR(2) && ISQDATE(1) && HB_ISCHAR(2)) {
    HB_FUNC_EXEC(QLOCALE_TOSTRING2);
  } else if (ISBETWEEN(1, 2) && ISQDATE(1) && ISNUMORNIL(2)) {
    HB_FUNC_EXEC(QLOCALE_TOSTRING3);
  } else if (ISNUMPAR(2) && ISQTIME(1) && HB_ISCHAR(2)) {
    HB_FUNC_EXEC(QLOCALE_TOSTRING4);
  } else if (ISBETWEEN(1, 2) && ISQTIME(1) && ISNUMORNIL(2)) {
    HB_FUNC_EXEC(QLOCALE_TOSTRING5);
  } else if (ISBETWEEN(1, 2) && ISQDATETIME(1) && ISNUMORNIL(2)) {
    HB_FUNC_EXEC(QLOCALE_TOSTRING6);
  } else if (ISNUMPAR(2) && ISQDATETIME(1) && HB_ISCHAR(2)) {
    HB_FUNC_EXEC(QLOCALE_TOSTRING7);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QLOCALE_TOTIME)
{
  if (ISBETWEEN(1, 2) && HB_ISCHAR(1) && ISNUMORNIL(2)) {
    /*
    QTime toTime( const QString &string, QLocale::FormatType format = QLocale::LongFormat ) const
    */
    QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QTime *ptr = new QTime(obj->toTime(PQSTRING(1), HB_ISNIL(2) ? (QLocale::FormatType)QLocale::LongFormat
                                                                  : (QLocale::FormatType)hb_parni(2)));
      Qt5xHb::createReturnClass(ptr, "QTIME", true);
    }
  } else if (ISNUMPAR(2) && HB_ISCHAR(1) && HB_ISCHAR(2)) {
    /*
    QTime toTime( const QString &string, const QString &format ) const
    */
    QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QTime *ptr = new QTime(obj->toTime(PQSTRING(1), PQSTRING(2)));
      Qt5xHb::createReturnClass(ptr, "QTIME", true);
    }
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
QString toUpper( const QString &str ) const
*/
HB_FUNC_STATIC(QLOCALE_TOUPPER)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISCHAR(1)) {
#endif
      RQSTRING(obj->toUpper(PQSTRING(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QStringList uiLanguages() const
*/
HB_FUNC_STATIC(QLOCALE_UILANGUAGES)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQSTRINGLIST(obj->uiLanguages());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QList<Qt::DayOfWeek> weekdays() const
*/
HB_FUNC_STATIC(QLOCALE_WEEKDAYS)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QList<Qt::DayOfWeek> list = obj->weekdays();
      PHB_ITEM pArray = hb_itemArrayNew(0);
      for (int i = 0; i < list.count(); i++) {
        PHB_ITEM pItem = hb_itemPutNI(NULL, static_cast<int>(list[i]));
        hb_arrayAddForward(pArray, pItem);
        hb_itemRelease(pItem);
      }
      hb_itemReturnRelease(pArray);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QChar zeroDigit() const
*/
HB_FUNC_STATIC(QLOCALE_ZERODIGIT)
{
  QLocale *obj = (QLocale *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QChar *ptr = new QChar(obj->zeroDigit());
      Qt5xHb::createReturnClass(ptr, "QCHAR", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
static QLocale c()
*/
HB_FUNC_STATIC(QLOCALE_C)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISNUMPAR(0)) {
#endif
    QLocale *ptr = new QLocale(QLocale::c());
    Qt5xHb::createReturnClass(ptr, "QLOCALE", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

/*
static QString countryToString( QLocale::Country country )
*/
HB_FUNC_STATIC(QLOCALE_COUNTRYTOSTRING)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
    RQSTRING(QLocale::countryToString((QLocale::Country)hb_parni(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

/*
static QString languageToString( QLocale::Language language )
*/
HB_FUNC_STATIC(QLOCALE_LANGUAGETOSTRING)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
    RQSTRING(QLocale::languageToString((QLocale::Language)hb_parni(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

/*
static QList<QLocale> matchingLocales( QLocale::Language language, QLocale::Script script, QLocale::Country country )
*/
HB_FUNC_STATIC(QLOCALE_MATCHINGLOCALES)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISNUMPAR(3) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISNUM(3)) {
#endif
    QList<QLocale> list = QLocale::matchingLocales((QLocale::Language)hb_parni(1), (QLocale::Script)hb_parni(2),
                                                   (QLocale::Country)hb_parni(3));
    PHB_DYNS pDynSym = hb_dynsymFindName("QLOCALE");
    PHB_ITEM pArray = hb_itemArrayNew(0);
    if (pDynSym != NULL) {
      for (int i = 0; i < list.count(); i++) {
        hb_vmPushDynSym(pDynSym);
        hb_vmPushNil();
        hb_vmDo(0);
        PHB_ITEM pObject = hb_itemNew(NULL);
        hb_itemCopy(pObject, hb_stackReturnItem());
        PHB_ITEM pItem = hb_itemPutPtr(NULL, new QLocale(list[i]));
        hb_objSendMsg(pObject, "_POINTER", 1, pItem);
        hb_itemRelease(pItem);
        PHB_ITEM pDestroy = hb_itemPutL(NULL, true);
        hb_objSendMsg(pObject, "_SELF_DESTRUCTION", 1, pDestroy);
        hb_itemRelease(pDestroy);
        hb_arrayAddForward(pArray, pObject);
        hb_itemRelease(pObject);
      }
    } else {
      hb_errRT_BASE(EG_NOFUNC, 1001, NULL, "QLOCALE", HB_ERR_ARGS_BASEPARAMS);
    }
    hb_itemReturnRelease(pArray);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

/*
static QString scriptToString( QLocale::Script script )
*/
HB_FUNC_STATIC(QLOCALE_SCRIPTTOSTRING)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
    RQSTRING(QLocale::scriptToString((QLocale::Script)hb_parni(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

/*
static void setDefault( const QLocale &locale )
*/
HB_FUNC_STATIC(QLOCALE_SETDEFAULT)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISNUMPAR(1) && ISQLOCALE(1)) {
#endif
    QLocale::setDefault(*PQLOCALE(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif

  hb_itemReturn(hb_stackSelfItem());
}

/*
static QLocale system()
*/
HB_FUNC_STATIC(QLOCALE_SYSTEM)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISNUMPAR(0)) {
#endif
    QLocale *ptr = new QLocale(QLocale::system());
    Qt5xHb::createReturnClass(ptr, "QLOCALE", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

HB_FUNC_STATIC(QLOCALE_NEWFROM)
{
  PHB_ITEM self = hb_stackSelfItem();

  if (hb_pcount() == 1 && HB_ISOBJECT(1)) {
    PHB_ITEM ptr = hb_itemPutPtr(NULL, hb_itemGetPtr(hb_objSendMsg(hb_param(1, HB_IT_OBJECT), "POINTER", 0)));
    hb_objSendMsg(self, "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
    PHB_ITEM des = hb_itemPutL(NULL, false);
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else if (hb_pcount() == 1 && HB_ISPOINTER(1)) {
    PHB_ITEM ptr = hb_itemPutPtr(NULL, hb_itemGetPtr(hb_param(1, HB_IT_POINTER)));
    hb_objSendMsg(self, "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
    PHB_ITEM des = hb_itemPutL(NULL, false);
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }

  hb_itemReturn(self);
}

HB_FUNC_STATIC(QLOCALE_NEWFROMOBJECT)
{
  HB_FUNC_EXEC(QLOCALE_NEWFROM);
}

HB_FUNC_STATIC(QLOCALE_NEWFROMPOINTER)
{
  HB_FUNC_EXEC(QLOCALE_NEWFROM);
}

HB_FUNC_STATIC(QLOCALE_SELFDESTRUCTION)
{
  hb_retl(hb_itemGetL(hb_objSendMsg(hb_stackSelfItem(), "SELF_DESTRUCTION", 0)));
}

HB_FUNC_STATIC(QLOCALE_SETSELFDESTRUCTION)
{
  PHB_ITEM self = hb_stackSelfItem();

  if (hb_pcount() == 1 && HB_ISLOG(1)) {
    PHB_ITEM des = hb_itemPutL(NULL, hb_parl(1));
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }

  hb_itemReturn(self);
}

#pragma ENDDUMP
