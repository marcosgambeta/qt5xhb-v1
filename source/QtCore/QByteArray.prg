//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT5XHB_NO_REQUESTS
#endif

CLASS QByteArray

   DATA pointer
   DATA self_destruction INIT .F.

   METHOD new
   METHOD delete
   METHOD append1
   METHOD append2
   METHOD append3
   METHOD append4
   METHOD append5
   METHOD append6
   METHOD append
   METHOD at
   METHOD capacity
   METHOD chop
   METHOD clear
   METHOD constData
   METHOD contains
   METHOD count
   METHOD data2
   METHOD data
   METHOD endsWith
   METHOD fill
   METHOD indexOf1
   METHOD indexOf2
   METHOD indexOf3
   METHOD indexOf4
   METHOD indexOf
   METHOD insert1
   METHOD insert2
   METHOD insert3
   METHOD insert4
   METHOD insert5
   METHOD insert
   METHOD isEmpty
   METHOD isNull
   METHOD lastIndexOf1
   METHOD lastIndexOf2
   METHOD lastIndexOf3
   METHOD lastIndexOf4
   METHOD lastIndexOf
   METHOD left
   METHOD leftJustified
   METHOD length
   METHOD mid
   METHOD prepend
   METHOD push_back
   METHOD push_front
   METHOD remove
   METHOD repeated
   METHOD replace1
   METHOD replace2
   METHOD replace3
   METHOD replace4
   METHOD replace5
   METHOD replace6
   METHOD replace7
   METHOD replace8
   METHOD replace9
   METHOD replace10
   METHOD replace11
   METHOD replace12
   METHOD replace13
   METHOD replace14
   METHOD replace
   METHOD reserve
   METHOD resize
   METHOD right
   METHOD rightJustified
   METHOD setNum1
   METHOD setNum2
   METHOD setNum3
   METHOD setNum4
   METHOD setNum5
   METHOD setNum6
   METHOD setNum7
   METHOD setNum8
   METHOD setNum
   METHOD setRawData
   METHOD simplified
   METHOD size
   METHOD split
   METHOD squeeze
   METHOD startsWith
   METHOD toBase64
   METHOD toDouble
   METHOD toFloat
   METHOD toHex
   METHOD toInt
   METHOD toLong
   METHOD toLongLong
   METHOD toLower
   METHOD toPercentEncoding
   METHOD toShort
   METHOD toUInt
   METHOD toULong
   METHOD toULongLong
   METHOD toUShort
   METHOD toUpper
   METHOD trimmed
   METHOD truncate
   METHOD fromBase64
   METHOD fromHex
   METHOD fromPercentEncoding
   METHOD fromRawData
   METHOD number1
   METHOD number2
   METHOD number3
   METHOD number4
   METHOD number5
   METHOD number
   METHOD chopped
   METHOD isLower
   METHOD isUpper

   METHOD newFrom
   METHOD newFromObject
   METHOD newFromPointer
   METHOD selfDestruction
   METHOD setSelfDestruction

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QByteArray
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#include <QtCore/QByteArray>
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"

#ifdef __XHARBOUR__
#include <QtCore/QByteArray>
#endif

#include <QtCore/QString>
#include <QtCore/QList>

HB_FUNC_STATIC(QBYTEARRAY_NEW)
{
  if (ISNUMPAR(0)) {
    /*
    QByteArray()
    */
    QByteArray *obj = new QByteArray();
    Qt5xHb::returnNewObject(obj, true);
  } else if (ISNUMPAR(1) && HB_ISCHAR(1)) {
    /*
    QByteArray( const char * str )
    */
    QByteArray *obj = new QByteArray(PCONSTCHAR(1));
    Qt5xHb::returnNewObject(obj, true);
  } else if (ISNUMPAR(2) && HB_ISCHAR(1) && HB_ISNUM(2)) {
    /*
    QByteArray( const char * data, int size )
    */
    QByteArray *obj = new QByteArray(PCONSTCHAR(1), PINT(2));
    Qt5xHb::returnNewObject(obj, true);
  } else if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2)) {
    /*
    QByteArray( int size, char ch )
    */
    QByteArray *obj = new QByteArray(PINT(1), PCHAR(2));
    Qt5xHb::returnNewObject(obj, true);
  } else if (ISNUMPAR(1) && ISQBYTEARRAY(1)) {
    /*
    QByteArray( const QByteArray &other )
    */
    QByteArray *obj = new QByteArray(*PQBYTEARRAY(1));
    Qt5xHb::returnNewObject(obj, true);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QBYTEARRAY_DELETE)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
    delete obj;
    obj = NULL;
    PHB_ITEM ptr = hb_itemPutPtr(NULL, NULL);
    hb_objSendMsg(hb_stackSelfItem(), "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
QByteArray &append( const QByteArray &ba )
*/
HB_FUNC_STATIC(QBYTEARRAY_APPEND1)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQBYTEARRAY(1)) {
#endif
      QByteArray *ptr = &obj->append(*PQBYTEARRAY(1));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &append( const QString &str )
*/
HB_FUNC_STATIC(QBYTEARRAY_APPEND2)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISCHAR(1)) {
#endif
      QByteArray *ptr = &obj->append(PQSTRING(1));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &append( const char * str )
*/
HB_FUNC_STATIC(QBYTEARRAY_APPEND3)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISCHAR(1)) {
#endif
      QByteArray *ptr = &obj->append(PCONSTCHAR(1));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &append( const char * str, int len )
*/
HB_FUNC_STATIC(QBYTEARRAY_APPEND4)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISCHAR(1) && HB_ISNUM(2)) {
#endif
      QByteArray *ptr = &obj->append(PCONSTCHAR(1), PINT(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &append( char ch )
*/
HB_FUNC_STATIC(QBYTEARRAY_APPEND5)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      QByteArray *ptr = &obj->append(PCHAR(1));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &append( int count, char ch )
*/
HB_FUNC_STATIC(QBYTEARRAY_APPEND6)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2)) {
#endif
      QByteArray *ptr = &obj->append(PINT(1), PCHAR(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

HB_FUNC_STATIC(QBYTEARRAY_APPEND)
{
  if (ISNUMPAR(1) && ISQBYTEARRAY(1)) {
    HB_FUNC_EXEC(QBYTEARRAY_APPEND1);
  } else if (ISNUMPAR(1) && HB_ISCHAR(1)) {
    HB_FUNC_EXEC(QBYTEARRAY_APPEND2);
  } else if (ISNUMPAR(2) && HB_ISCHAR(1) && HB_ISNUM(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_APPEND4);
  } else if (ISNUMPAR(1) && HB_ISNUM(1)) {
    HB_FUNC_EXEC(QBYTEARRAY_APPEND5);
  } else if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_APPEND6);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
char at( int i ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_AT)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      hb_retni(obj->at(PINT(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int capacity() const
*/
HB_FUNC_STATIC(QBYTEARRAY_CAPACITY)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RINT(obj->capacity());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void chop( int n )
*/
HB_FUNC_STATIC(QBYTEARRAY_CHOP)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->chop(PINT(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void clear()
*/
HB_FUNC_STATIC(QBYTEARRAY_CLEAR)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      obj->clear();
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
const char * constData() const
*/
HB_FUNC_STATIC(QBYTEARRAY_CONSTDATA)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      hb_retc(obj->constData());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QBYTEARRAY_CONTAINS)
{
  if (ISNUMPAR(1) && ISQBYTEARRAY(1)) {
    /*
    bool contains( const QByteArray &ba ) const
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      RBOOL(obj->contains(*PQBYTEARRAY(1)));
    }
  } else if (ISNUMPAR(1) && HB_ISCHAR(1)) {
    /*
    bool contains( const char * str ) const
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      RBOOL(obj->contains(PCONSTCHAR(1)));
    }
  } else if (ISNUMPAR(1) && HB_ISNUM(1)) {
    /*
    bool contains( char ch ) const
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      RBOOL(obj->contains(PCHAR(1)));
    }
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QBYTEARRAY_COUNT)
{
  if (ISNUMPAR(1) && ISQBYTEARRAY(1)) {
    /*
    int count( const QByteArray &ba ) const
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      RINT(obj->count(*PQBYTEARRAY(1)));
    }
  } else if (ISNUMPAR(1) && HB_ISCHAR(1)) {
    /*
    int count( const char * str ) const
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      RINT(obj->count(PCONSTCHAR(1)));
    }
  } else if (ISNUMPAR(1) && HB_ISNUM(1)) {
    /*
    int count( char ch ) const
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      RINT(obj->count(PCHAR(1)));
    }
  } else if (ISNUMPAR(0)) {
    /*
    int count() const
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      RINT(obj->count());
    }
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
const char * data() const
*/
HB_FUNC_STATIC(QBYTEARRAY_DATA2)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      hb_retc(obj->data());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QBYTEARRAY_DATA)
{
  HB_FUNC_EXEC(QBYTEARRAY_DATA2);
}

HB_FUNC_STATIC(QBYTEARRAY_ENDSWITH)
{
  if (ISNUMPAR(1) && ISQBYTEARRAY(1)) {
    /*
    bool endsWith( const QByteArray &ba ) const
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      RBOOL(obj->endsWith(*PQBYTEARRAY(1)));
    }
  } else if (ISNUMPAR(1) && HB_ISCHAR(1)) {
    /*
    bool endsWith( const char * str ) const
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      RBOOL(obj->endsWith(PCONSTCHAR(1)));
    }
  } else if (ISNUMPAR(1) && HB_ISNUM(1)) {
    /*
    bool endsWith( char ch ) const
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      RBOOL(obj->endsWith(PCHAR(1)));
    }
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
QByteArray &fill( char ch, int size = -1 )
*/
HB_FUNC_STATIC(QBYTEARRAY_FILL)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
      QByteArray *ptr = &obj->fill(PCHAR(1), OPINT(2, -1));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int indexOf( const QByteArray &ba, int from = 0 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_INDEXOF1)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && ISQBYTEARRAY(1) && ISNUMORNIL(2)) {
#endif
      RINT(obj->indexOf(*PQBYTEARRAY(1), OPINT(2, 0)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int indexOf( const QString &str, int from = 0 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_INDEXOF2)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISCHAR(1) && ISNUMORNIL(2)) {
#endif
      RINT(obj->indexOf(PQSTRING(1), OPINT(2, 0)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int indexOf( const char * str, int from = 0 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_INDEXOF3)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISCHAR(1) && ISNUMORNIL(2)) {
#endif
      RINT(obj->indexOf(PCONSTCHAR(1), OPINT(2, 0)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int indexOf( char ch, int from = 0 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_INDEXOF4)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
      RINT(obj->indexOf(PCHAR(1), OPINT(2, 0)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QBYTEARRAY_INDEXOF)
{
  if (ISBETWEEN(1, 2) && ISQBYTEARRAY(1) && ISNUMORNIL(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_INDEXOF1);
  } else if (ISBETWEEN(1, 2) && HB_ISCHAR(1) && ISNUMORNIL(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_INDEXOF2);
  } else if (ISBETWEEN(1, 2) && HB_ISCHAR(1) && ISNUMORNIL(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_INDEXOF3);
  } else if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_INDEXOF4);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
QByteArray &insert( int i, const QByteArray &ba )
*/
HB_FUNC_STATIC(QBYTEARRAY_INSERT1)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && ISQBYTEARRAY(2)) {
#endif
      QByteArray *ptr = &obj->insert(PINT(1), *PQBYTEARRAY(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &insert( int i, const QString &str )
*/
HB_FUNC_STATIC(QBYTEARRAY_INSERT2)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISCHAR(2)) {
#endif
      QByteArray *ptr = &obj->insert(PINT(1), PQSTRING(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &insert( int i, const char * str )
*/
HB_FUNC_STATIC(QBYTEARRAY_INSERT3)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISCHAR(2)) {
#endif
      QByteArray *ptr = &obj->insert(PINT(1), PCONSTCHAR(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &insert( int i, const char * str, int len )
*/
HB_FUNC_STATIC(QBYTEARRAY_INSERT4)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(3) && HB_ISNUM(1) && HB_ISCHAR(2) && HB_ISNUM(3)) {
#endif
      QByteArray *ptr = &obj->insert(PINT(1), PCONSTCHAR(2), PINT(3));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &insert( int i, char ch )
*/
HB_FUNC_STATIC(QBYTEARRAY_INSERT5)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2)) {
#endif
      QByteArray *ptr = &obj->insert(PINT(1), PCHAR(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QBYTEARRAY_INSERT)
{
  if (ISNUMPAR(2) && HB_ISNUM(1) && ISQBYTEARRAY(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_INSERT1);
  } else if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISCHAR(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_INSERT2);
  } else if (ISNUMPAR(3) && HB_ISNUM(1) && HB_ISCHAR(2) && HB_ISNUM(3)) {
    HB_FUNC_EXEC(QBYTEARRAY_INSERT4);
  } else if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_INSERT5);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
bool isEmpty() const
*/
HB_FUNC_STATIC(QBYTEARRAY_ISEMPTY)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->isEmpty());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
bool isNull() const
*/
HB_FUNC_STATIC(QBYTEARRAY_ISNULL)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->isNull());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int lastIndexOf( const QByteArray &ba, int from = -1 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_LASTINDEXOF1)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && ISQBYTEARRAY(1) && ISNUMORNIL(2)) {
#endif
      RINT(obj->lastIndexOf(*PQBYTEARRAY(1), OPINT(2, -1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int lastIndexOf( const QString &str, int from = -1 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_LASTINDEXOF2)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISCHAR(1) && ISNUMORNIL(2)) {
#endif
      RINT(obj->lastIndexOf(PQSTRING(1), OPINT(2, -1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int lastIndexOf( const char * str, int from = -1 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_LASTINDEXOF3)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISCHAR(1) && ISNUMORNIL(2)) {
#endif
      RINT(obj->lastIndexOf(PCONSTCHAR(1), OPINT(2, -1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int lastIndexOf( char ch, int from = -1 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_LASTINDEXOF4)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
      RINT(obj->lastIndexOf(PCHAR(1), OPINT(2, -1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QBYTEARRAY_LASTINDEXOF)
{
  if (ISBETWEEN(1, 2) && ISQBYTEARRAY(1) && ISNUMORNIL(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_LASTINDEXOF1);
  } else if (ISBETWEEN(1, 2) && HB_ISCHAR(1) && ISNUMORNIL(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_LASTINDEXOF2);
  } else if (ISBETWEEN(1, 2) && HB_ISCHAR(1) && ISNUMORNIL(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_LASTINDEXOF3);
  } else if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_LASTINDEXOF4);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
QByteArray left( int len ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_LEFT)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      QByteArray *ptr = new QByteArray(obj->left(PINT(1)));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray leftJustified( int width, char fill = ' ', bool truncate = false ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_LEFTJUSTIFIED)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 3) && HB_ISNUM(1) && ISNUMORNIL(2) && (HB_ISLOG(3) || HB_ISNIL(3))) {
#endif
      QByteArray *ptr = new QByteArray(obj->leftJustified(PINT(1), OPCHAR(2, ' '), OPBOOL(3, false)));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int length() const
*/
HB_FUNC_STATIC(QBYTEARRAY_LENGTH)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RINT(obj->length());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray mid( int pos, int len = -1 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_MID)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
      QByteArray *ptr = new QByteArray(obj->mid(PINT(1), OPINT(2, -1)));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QBYTEARRAY_PREPEND)
{
  if (ISNUMPAR(1) && ISQBYTEARRAY(1)) {
    /*
    QByteArray &prepend( const QByteArray &ba )
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QByteArray *ptr = &obj->prepend(*PQBYTEARRAY(1));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
    }
  } else if (ISNUMPAR(1) && HB_ISCHAR(1)) {
    /*
    QByteArray &prepend( const char * str )
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QByteArray *ptr = &obj->prepend(PCONSTCHAR(1));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
    }
  } else if (ISNUMPAR(2) && HB_ISCHAR(1) && HB_ISNUM(2)) {
    /*
    QByteArray &prepend( const char * str, int len )
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QByteArray *ptr = &obj->prepend(PCONSTCHAR(1), PINT(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
    }
  } else if (ISNUMPAR(1) && HB_ISNUM(1)) {
    /*
    QByteArray &prepend( char ch )
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QByteArray *ptr = &obj->prepend(PCHAR(1));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
    }
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QBYTEARRAY_PUSH_BACK)
{
  if (ISNUMPAR(1) && ISQBYTEARRAY(1)) {
    /*
    void push_back( const QByteArray &other )
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->push_back(*PQBYTEARRAY(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(1) && HB_ISCHAR(1)) {
    /*
    void push_back( const char * str )
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->push_back(PCONSTCHAR(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(1) && HB_ISNUM(1)) {
    /*
    void push_back( char ch )
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->push_back(PCHAR(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QBYTEARRAY_PUSH_FRONT)
{
  if (ISNUMPAR(1) && ISQBYTEARRAY(1)) {
    /*
    void push_front( const QByteArray &other )
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->push_front(*PQBYTEARRAY(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(1) && HB_ISCHAR(1)) {
    /*
    void push_front( const char * str )
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->push_front(PCONSTCHAR(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(1) && HB_ISNUM(1)) {
    /*
    void push_front( char ch )
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->push_front(PCHAR(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
QByteArray &remove( int pos, int len )
*/
HB_FUNC_STATIC(QBYTEARRAY_REMOVE)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2)) {
#endif
      QByteArray *ptr = &obj->remove(PINT(1), PINT(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray repeated( int times ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_REPEATED)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      QByteArray *ptr = new QByteArray(obj->repeated(PINT(1)));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &replace( int pos, int len, const QByteArray &after )
*/
HB_FUNC_STATIC(QBYTEARRAY_REPLACE1)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(3) && HB_ISNUM(1) && HB_ISNUM(2) && ISQBYTEARRAY(3)) {
#endif
      QByteArray *ptr = &obj->replace(PINT(1), PINT(2), *PQBYTEARRAY(3));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &replace( int pos, int len, const char * after )
*/
HB_FUNC_STATIC(QBYTEARRAY_REPLACE2)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(3) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISCHAR(3)) {
#endif
      QByteArray *ptr = &obj->replace(PINT(1), PINT(2), PCONSTCHAR(3));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &replace( int pos, int len, const char * after, int alen )
*/
HB_FUNC_STATIC(QBYTEARRAY_REPLACE3)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(4) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISCHAR(3) && HB_ISNUM(4)) {
#endif
      QByteArray *ptr = &obj->replace(PINT(1), PINT(2), PCONSTCHAR(3), PINT(4));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &replace( const QByteArray &before, const QByteArray &after )
*/
HB_FUNC_STATIC(QBYTEARRAY_REPLACE4)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && ISQBYTEARRAY(1) && ISQBYTEARRAY(2)) {
#endif
      QByteArray *ptr = &obj->replace(*PQBYTEARRAY(1), *PQBYTEARRAY(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &replace( const char * before, const QByteArray &after )
*/
HB_FUNC_STATIC(QBYTEARRAY_REPLACE5)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISCHAR(1) && ISQBYTEARRAY(2)) {
#endif
      QByteArray *ptr = &obj->replace(PCONSTCHAR(1), *PQBYTEARRAY(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &replace( const char * before, int bsize, const char * after, int asize )
*/
HB_FUNC_STATIC(QBYTEARRAY_REPLACE6)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(4) && HB_ISCHAR(1) && HB_ISNUM(2) && HB_ISCHAR(3) && HB_ISNUM(4)) {
#endif
      QByteArray *ptr = &obj->replace(PCONSTCHAR(1), PINT(2), PCONSTCHAR(3), PINT(4));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &replace( const QByteArray &before, const char * after )
*/
HB_FUNC_STATIC(QBYTEARRAY_REPLACE7)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && ISQBYTEARRAY(1) && HB_ISCHAR(2)) {
#endif
      QByteArray *ptr = &obj->replace(*PQBYTEARRAY(1), PCONSTCHAR(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &replace( const QString &before, const QByteArray &after )
*/
HB_FUNC_STATIC(QBYTEARRAY_REPLACE8)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISCHAR(1) && ISQBYTEARRAY(2)) {
#endif
      QByteArray *ptr = &obj->replace(PQSTRING(1), *PQBYTEARRAY(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &replace( const QString &before, const char * after )
*/
HB_FUNC_STATIC(QBYTEARRAY_REPLACE9)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISCHAR(1) && HB_ISCHAR(2)) {
#endif
      QByteArray *ptr = &obj->replace(PQSTRING(1), PCONSTCHAR(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &replace( const char * before, const char * after )
*/
HB_FUNC_STATIC(QBYTEARRAY_REPLACE10)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISCHAR(1) && HB_ISCHAR(2)) {
#endif
      QByteArray *ptr = &obj->replace(PCONSTCHAR(1), PCONSTCHAR(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &replace( char before, const QByteArray &after )
*/
HB_FUNC_STATIC(QBYTEARRAY_REPLACE11)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && ISQBYTEARRAY(2)) {
#endif
      QByteArray *ptr = &obj->replace(PCHAR(1), *PQBYTEARRAY(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &replace( char before, const QString &after )
*/
HB_FUNC_STATIC(QBYTEARRAY_REPLACE12)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISCHAR(2)) {
#endif
      QByteArray *ptr = &obj->replace(PCHAR(1), PQSTRING(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &replace( char before, const char * after )
*/
HB_FUNC_STATIC(QBYTEARRAY_REPLACE13)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISCHAR(2)) {
#endif
      QByteArray *ptr = &obj->replace(PCHAR(1), PCONSTCHAR(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &replace( char before, char after )
*/
HB_FUNC_STATIC(QBYTEARRAY_REPLACE14)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2)) {
#endif
      QByteArray *ptr = &obj->replace(PCHAR(1), PCHAR(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QBYTEARRAY_REPLACE)
{
  if (ISNUMPAR(3) && HB_ISNUM(1) && HB_ISNUM(2) && ISQBYTEARRAY(3)) {
    HB_FUNC_EXEC(QBYTEARRAY_REPLACE1);
  } else if (ISNUMPAR(3) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISCHAR(3)) {
    HB_FUNC_EXEC(QBYTEARRAY_REPLACE2);
  } else if (ISNUMPAR(4) && HB_ISNUM(1) && HB_ISNUM(2) && HB_ISCHAR(3) && HB_ISNUM(4)) {
    HB_FUNC_EXEC(QBYTEARRAY_REPLACE3);
  } else if (ISNUMPAR(2) && ISQBYTEARRAY(1) && ISQBYTEARRAY(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_REPLACE4);
  } else if (ISNUMPAR(2) && HB_ISCHAR(1) && ISQBYTEARRAY(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_REPLACE5);
  } else if (ISNUMPAR(4) && HB_ISCHAR(1) && HB_ISNUM(2) && HB_ISCHAR(3) && HB_ISNUM(4)) {
    HB_FUNC_EXEC(QBYTEARRAY_REPLACE6);
  } else if (ISNUMPAR(2) && ISQBYTEARRAY(1) && HB_ISCHAR(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_REPLACE7);
  } else if (ISNUMPAR(2) && HB_ISCHAR(1) && ISQBYTEARRAY(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_REPLACE8);
  } else if (ISNUMPAR(2) && HB_ISCHAR(1) && HB_ISCHAR(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_REPLACE9);
  } else if (ISNUMPAR(2) && HB_ISCHAR(1) && HB_ISCHAR(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_REPLACE10);
  } else if (ISNUMPAR(2) && HB_ISNUM(1) && ISQBYTEARRAY(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_REPLACE11);
  } else if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISCHAR(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_REPLACE12);
  } else if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISCHAR(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_REPLACE13);
  } else if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_REPLACE14);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
void reserve( int size )
*/
HB_FUNC_STATIC(QBYTEARRAY_RESERVE)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->reserve(PINT(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void resize( int size )
*/
HB_FUNC_STATIC(QBYTEARRAY_RESIZE)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->resize(PINT(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
QByteArray right( int len ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_RIGHT)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      QByteArray *ptr = new QByteArray(obj->right(PINT(1)));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray rightJustified( int width, char fill = ' ', bool truncate = false ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_RIGHTJUSTIFIED)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 3) && HB_ISNUM(1) && ISNUMORNIL(2) && (HB_ISLOG(3) || HB_ISNIL(3))) {
#endif
      QByteArray *ptr = new QByteArray(obj->rightJustified(PINT(1), OPCHAR(2, ' '), OPBOOL(3, false)));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &setNum( int n, int base = 10 )
*/
HB_FUNC_STATIC(QBYTEARRAY_SETNUM1)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
      QByteArray *ptr = &obj->setNum(PINT(1), OPINT(2, 10));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &setNum( uint n, int base = 10 )
*/
HB_FUNC_STATIC(QBYTEARRAY_SETNUM2)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
      QByteArray *ptr = &obj->setNum(PUINT(1), OPINT(2, 10));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &setNum( short n, int base = 10 )
*/
HB_FUNC_STATIC(QBYTEARRAY_SETNUM3)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
      QByteArray *ptr = &obj->setNum(PSHORT(1), OPINT(2, 10));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &setNum( ushort n, int base = 10 )
*/
HB_FUNC_STATIC(QBYTEARRAY_SETNUM4)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
      QByteArray *ptr = &obj->setNum(PUSHORT(1), OPINT(2, 10));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &setNum( qlonglong n, int base = 10 )
*/
HB_FUNC_STATIC(QBYTEARRAY_SETNUM5)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
      QByteArray *ptr = &obj->setNum(PQLONGLONG(1), OPINT(2, 10));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &setNum( qulonglong n, int base = 10 )
*/
HB_FUNC_STATIC(QBYTEARRAY_SETNUM6)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
      QByteArray *ptr = &obj->setNum(PQULONGLONG(1), OPINT(2, 10));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &setNum( double n, char f = 'g', int prec = 6 )
*/
HB_FUNC_STATIC(QBYTEARRAY_SETNUM7)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 3) && HB_ISNUM(1) && ISNUMORNIL(2) && ISNUMORNIL(3)) {
#endif
      QByteArray *ptr = &obj->setNum(PDOUBLE(1), OPCHAR(2, 'g'), OPINT(3, 6));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray &setNum( float n, char f = 'g', int prec = 6 )
*/
HB_FUNC_STATIC(QBYTEARRAY_SETNUM8)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(1, 3) && HB_ISNUM(1) && ISNUMORNIL(2) && ISNUMORNIL(3)) {
#endif
      QByteArray *ptr = &obj->setNum(PFLOAT(1), OPCHAR(2, 'g'), OPINT(3, 6));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QBYTEARRAY_SETNUM)
{
  if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_SETNUM1);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
QByteArray &setRawData( const char * data, uint size )
*/
HB_FUNC_STATIC(QBYTEARRAY_SETRAWDATA)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISCHAR(1) && HB_ISNUM(2)) {
#endif
      QByteArray *ptr = &obj->setRawData(PCONSTCHAR(1), PUINT(2));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray simplified() const
*/
HB_FUNC_STATIC(QBYTEARRAY_SIMPLIFIED)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QByteArray *ptr = new QByteArray(obj->simplified());
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int size() const
*/
HB_FUNC_STATIC(QBYTEARRAY_SIZE)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RINT(obj->size());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QList<QByteArray> split( char sep ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_SPLIT)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      QList<QByteArray> list = obj->split(PCHAR(1));
      PHB_DYNS pDynSym = hb_dynsymFindName("QBYTEARRAY");
      PHB_ITEM pArray = hb_itemArrayNew(0);
      if (pDynSym != NULL) {
        for (int i = 0; i < list.count(); i++) {
          hb_vmPushDynSym(pDynSym);
          hb_vmPushNil();
          hb_vmDo(0);
          PHB_ITEM pObject = hb_itemNew(NULL);
          hb_itemCopy(pObject, hb_stackReturnItem());
          PHB_ITEM pItem = hb_itemPutPtr(NULL, new QByteArray(list[i]));
          hb_objSendMsg(pObject, "_POINTER", 1, pItem);
          hb_itemRelease(pItem);
          PHB_ITEM pDestroy = hb_itemPutL(NULL, true);
          hb_objSendMsg(pObject, "_SELF_DESTRUCTION", 1, pDestroy);
          hb_itemRelease(pDestroy);
          hb_arrayAddForward(pArray, pObject);
          hb_itemRelease(pObject);
        }
      } else {
        hb_errRT_BASE(EG_NOFUNC, 1001, NULL, "QBYTEARRAY", HB_ERR_ARGS_BASEPARAMS);
      }
      hb_itemReturnRelease(pArray);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void squeeze()
*/
HB_FUNC_STATIC(QBYTEARRAY_SQUEEZE)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      obj->squeeze();
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

HB_FUNC_STATIC(QBYTEARRAY_STARTSWITH)
{
  if (ISNUMPAR(1) && ISQBYTEARRAY(1)) {
    /*
    bool startsWith( const QByteArray &ba ) const
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      RBOOL(obj->startsWith(*PQBYTEARRAY(1)));
    }
  } else if (ISNUMPAR(1) && HB_ISCHAR(1)) {
    /*
    bool startsWith( const char * str ) const
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      RBOOL(obj->startsWith(PCONSTCHAR(1)));
    }
  } else if (ISNUMPAR(1) && HB_ISNUM(1)) {
    /*
    bool startsWith( char ch ) const
    */
    QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      RBOOL(obj->startsWith(PCHAR(1)));
    }
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
QByteArray toBase64() const
*/
HB_FUNC_STATIC(QBYTEARRAY_TOBASE64)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QByteArray *ptr = new QByteArray(obj->toBase64());
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
double toDouble( bool * ok = 0 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_TODOUBLE)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && (HB_ISLOG(1) || HB_ISNIL(1))) {
#endif
      bool par1;
      RDOUBLE(obj->toDouble(&par1));
      hb_storl(par1, 1);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
float toFloat( bool * ok = 0 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_TOFLOAT)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && (HB_ISLOG(1) || HB_ISNIL(1))) {
#endif
      bool par1;
      RFLOAT(obj->toFloat(&par1));
      hb_storl(par1, 1);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray toHex() const
*/
HB_FUNC_STATIC(QBYTEARRAY_TOHEX)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QByteArray *ptr = new QByteArray(obj->toHex());
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int toInt( bool * ok = 0, int base = 10 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_TOINT)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 2) && (HB_ISLOG(1) || HB_ISNIL(1)) && ISNUMORNIL(2)) {
#endif
      bool par1;
      RINT(obj->toInt(&par1, OPINT(2, 10)));
      hb_storl(par1, 1);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
long toLong( bool * ok = 0, int base = 10 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_TOLONG)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 2) && (HB_ISLOG(1) || HB_ISNIL(1)) && ISNUMORNIL(2)) {
#endif
      bool par1;
      RLONG(obj->toLong(&par1, OPINT(2, 10)));
      hb_storl(par1, 1);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
qlonglong toLongLong( bool * ok = 0, int base = 10 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_TOLONGLONG)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 2) && (HB_ISLOG(1) || HB_ISNIL(1)) && ISNUMORNIL(2)) {
#endif
      bool par1;
      RQLONGLONG(obj->toLongLong(&par1, OPINT(2, 10)));
      hb_storl(par1, 1);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray toLower() const
*/
HB_FUNC_STATIC(QBYTEARRAY_TOLOWER)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QByteArray *ptr = new QByteArray(obj->toLower());
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray toPercentEncoding( const QByteArray &exclude = QByteArray(), const QByteArray &include = QByteArray(), char
percent = '%' ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_TOPERCENTENCODING)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 3) && ISQBYTEARRAYORNIL(1) && ISQBYTEARRAYORNIL(2) &&
        ISNUMORNIL(3)) {
#endif
      QByteArray *ptr = new QByteArray(
          obj->toPercentEncoding(HB_ISNIL(1) ? QByteArray() : *(QByteArray *)Qt5xHb::itemGetPtr(1),
                                 HB_ISNIL(2) ? QByteArray() : *(QByteArray *)Qt5xHb::itemGetPtr(2), OPCHAR(3, '%')));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
short toShort( bool * ok = 0, int base = 10 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_TOSHORT)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 2) && (HB_ISLOG(1) || HB_ISNIL(1)) && ISNUMORNIL(2)) {
#endif
      bool par1;
      RSHORT(obj->toShort(&par1, OPINT(2, 10)));
      hb_storl(par1, 1);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
uint toUInt( bool * ok = 0, int base = 10 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_TOUINT)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 2) && (HB_ISLOG(1) || HB_ISNIL(1)) && ISNUMORNIL(2)) {
#endif
      bool par1;
      RUINT(obj->toUInt(&par1, OPINT(2, 10)));
      hb_storl(par1, 1);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
ulong toULong( bool * ok = 0, int base = 10 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_TOULONG)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 2) && (HB_ISLOG(1) || HB_ISNIL(1)) && ISNUMORNIL(2)) {
#endif
      bool par1;
      RULONG(obj->toULong(&par1, OPINT(2, 10)));
      hb_storl(par1, 1);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
qulonglong toULongLong( bool * ok = 0, int base = 10 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_TOULONGLONG)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 2) && (HB_ISLOG(1) || HB_ISNIL(1)) && ISNUMORNIL(2)) {
#endif
      bool par1;
      RQULONGLONG(obj->toULongLong(&par1, OPINT(2, 10)));
      hb_storl(par1, 1);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
ushort toUShort( bool * ok = 0, int base = 10 ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_TOUSHORT)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 2) && (HB_ISLOG(1) || HB_ISNIL(1)) && ISNUMORNIL(2)) {
#endif
      bool par1;
      RUSHORT(obj->toUShort(&par1, OPINT(2, 10)));
      hb_storl(par1, 1);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray toUpper() const
*/
HB_FUNC_STATIC(QBYTEARRAY_TOUPPER)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QByteArray *ptr = new QByteArray(obj->toUpper());
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QByteArray trimmed() const
*/
HB_FUNC_STATIC(QBYTEARRAY_TRIMMED)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QByteArray *ptr = new QByteArray(obj->trimmed());
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void truncate( int pos )
*/
HB_FUNC_STATIC(QBYTEARRAY_TRUNCATE)
{
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->truncate(PINT(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
static QByteArray fromBase64( const QByteArray &base64 )
*/
HB_FUNC_STATIC(QBYTEARRAY_FROMBASE64)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISNUMPAR(1) && ISQBYTEARRAY(1)) {
#endif
    QByteArray *ptr = new QByteArray(QByteArray::fromBase64(*PQBYTEARRAY(1)));
    Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

/*
static QByteArray fromHex( const QByteArray &hexEncoded )
*/
HB_FUNC_STATIC(QBYTEARRAY_FROMHEX)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISNUMPAR(1) && ISQBYTEARRAY(1)) {
#endif
    QByteArray *ptr = new QByteArray(QByteArray::fromHex(*PQBYTEARRAY(1)));
    Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

/*
static QByteArray fromPercentEncoding( const QByteArray &input, char percent = '%' )
*/
HB_FUNC_STATIC(QBYTEARRAY_FROMPERCENTENCODING)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISBETWEEN(1, 2) && ISQBYTEARRAY(1) && ISNUMORNIL(2)) {
#endif
    QByteArray *ptr = new QByteArray(QByteArray::fromPercentEncoding(*PQBYTEARRAY(1), OPCHAR(2, '%')));
    Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

/*
static QByteArray fromRawData( const char * data, int size )
*/
HB_FUNC_STATIC(QBYTEARRAY_FROMRAWDATA)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISNUMPAR(2) && HB_ISCHAR(1) && HB_ISNUM(2)) {
#endif
    QByteArray *ptr = new QByteArray(QByteArray::fromRawData(PCONSTCHAR(1), PINT(2)));
    Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

/*
static QByteArray number( int n, int base = 10 )
*/
HB_FUNC_STATIC(QBYTEARRAY_NUMBER1)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
    QByteArray *ptr = new QByteArray(QByteArray::number(PINT(1), OPINT(2, 10)));
    Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

/*
static QByteArray number( uint n, int base = 10 )
*/
HB_FUNC_STATIC(QBYTEARRAY_NUMBER2)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
    QByteArray *ptr = new QByteArray(QByteArray::number(PUINT(1), OPINT(2, 10)));
    Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

/*
static QByteArray number( qlonglong n, int base = 10 )
*/
HB_FUNC_STATIC(QBYTEARRAY_NUMBER3)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
    QByteArray *ptr = new QByteArray(QByteArray::number(PQLONGLONG(1), OPINT(2, 10)));
    Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

/*
static QByteArray number( qulonglong n, int base = 10 )
*/
HB_FUNC_STATIC(QBYTEARRAY_NUMBER4)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
#endif
    QByteArray *ptr = new QByteArray(QByteArray::number(PQULONGLONG(1), OPINT(2, 10)));
    Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

/*
static QByteArray number( double n, char f = 'g', int prec = 6 )
*/
HB_FUNC_STATIC(QBYTEARRAY_NUMBER5)
{
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISBETWEEN(1, 3) && HB_ISNUM(1) && ISNUMORNIL(2) && ISNUMORNIL(3)) {
#endif
    QByteArray *ptr = new QByteArray(QByteArray::number(PDOUBLE(1), OPCHAR(2, 'g'), OPINT(3, 6)));
    Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

HB_FUNC_STATIC(QBYTEARRAY_NUMBER)
{
  if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_NUMBER1);
  } else if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_NUMBER2);
  } else if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_NUMBER3);
  } else if (ISBETWEEN(1, 2) && HB_ISNUM(1) && ISNUMORNIL(2)) {
    HB_FUNC_EXEC(QBYTEARRAY_NUMBER4);
  } else if (ISBETWEEN(1, 3) && HB_ISNUM(1) && (HB_ISNUM(2) || HB_ISCHAR(2) || HB_ISNIL(2)) &&
           ISNUMORNIL(3)) {
    HB_FUNC_EXEC(QBYTEARRAY_NUMBER5);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
QByteArray chopped( int len ) const
*/
HB_FUNC_STATIC(QBYTEARRAY_CHOPPED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 10, 0))
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      QByteArray *ptr = new QByteArray(obj->chopped(PINT(1)));
      Qt5xHb::createReturnClass(ptr, "QBYTEARRAY", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
bool isLower() const
*/
HB_FUNC_STATIC(QBYTEARRAY_ISLOWER)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 12, 0))
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->isLower());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
bool isUpper() const
*/
HB_FUNC_STATIC(QBYTEARRAY_ISUPPER)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 12, 0))
  QByteArray *obj = (QByteArray *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->isUpper());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

HB_FUNC_STATIC(QBYTEARRAY_NEWFROM)
{
  PHB_ITEM self = hb_stackSelfItem();

  if (hb_pcount() == 1 && HB_ISOBJECT(1)) {
    PHB_ITEM ptr = hb_itemPutPtr(NULL, hb_itemGetPtr(hb_objSendMsg(hb_param(1, HB_IT_OBJECT), "POINTER", 0)));
    hb_objSendMsg(self, "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
    PHB_ITEM des = hb_itemPutL(NULL, false);
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else if (hb_pcount() == 1 && HB_ISPOINTER(1)) {
    PHB_ITEM ptr = hb_itemPutPtr(NULL, hb_itemGetPtr(hb_param(1, HB_IT_POINTER)));
    hb_objSendMsg(self, "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
    PHB_ITEM des = hb_itemPutL(NULL, false);
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }

  hb_itemReturn(self);
}

HB_FUNC_STATIC(QBYTEARRAY_NEWFROMOBJECT)
{
  HB_FUNC_EXEC(QBYTEARRAY_NEWFROM);
}

HB_FUNC_STATIC(QBYTEARRAY_NEWFROMPOINTER)
{
  HB_FUNC_EXEC(QBYTEARRAY_NEWFROM);
}

HB_FUNC_STATIC(QBYTEARRAY_SELFDESTRUCTION)
{
  hb_retl(hb_itemGetL(hb_objSendMsg(hb_stackSelfItem(), "SELF_DESTRUCTION", 0)));
}

HB_FUNC_STATIC(QBYTEARRAY_SETSELFDESTRUCTION)
{
  PHB_ITEM self = hb_stackSelfItem();

  if (hb_pcount() == 1 && HB_ISLOG(1)) {
    PHB_ITEM des = hb_itemPutL(NULL, hb_parl(1));
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }

  hb_itemReturn(self);
}

#pragma ENDDUMP
