//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT5XHB_NO_REQUESTS
#endif

CLASS QWinEventNotifier INHERIT QObject

   METHOD new
   METHOD delete
   METHOD isEnabled
   METHOD setEnabled

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QWinEventNotifier
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#include <QtCore/QWinEventNotifier>
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"
#include "qt5xhb_events.hpp"
#include "qt5xhb_signals.hpp"

#ifdef __XHARBOUR__
#include <QtCore/QWinEventNotifier>
#endif

    /*
    explicit QWinEventNotifier(HANDLE hEvent, QObject *parent = 0)
    */

HB_FUNC_STATIC(QWINEVENTNOTIFIER_NEW)
{
#ifdef Q_OS_WIN
  if (ISBETWEEN(0, 1) && ISQOBJECTORNIL(1)) {
    /*
    explicit QWinEventNotifier(QObject *parent = 0)
    */
#ifdef Q_OS_WIN
    QWinEventNotifier *obj = new QWinEventNotifier(OPQOBJECT(1, 0));
    Qt5xHb::returnNewObject(obj, false);
#endif
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
}

HB_FUNC_STATIC(QWINEVENTNOTIFIER_DELETE)
{
#ifdef Q_OS_WIN
  QWinEventNotifier *obj = (QWinEventNotifier *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
    Qt5xHb::Events_disconnect_all_events(obj, true);
    Qt5xHb::Signals_disconnect_all_signals(obj, true);
    delete obj;
    obj = NULL;
    PHB_ITEM ptr = hb_itemPutPtr(NULL, NULL);
    hb_objSendMsg(hb_stackSelfItem(), "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
bool isEnabled() const
*/
HB_FUNC_STATIC(QWINEVENTNOTIFIER_ISENABLED)
{
#ifdef Q_OS_WIN
  QWinEventNotifier *obj = (QWinEventNotifier *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->isEnabled());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setEnabled(bool enable)
*/
HB_FUNC_STATIC(QWINEVENTNOTIFIER_SETENABLED)
{
#ifdef Q_OS_WIN
  QWinEventNotifier *obj = (QWinEventNotifier *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISLOG(1)) {
#endif
      obj->setEnabled(PBOOL(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

#pragma ENDDUMP
