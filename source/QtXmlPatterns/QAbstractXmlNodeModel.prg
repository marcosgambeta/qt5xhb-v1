//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include "hbclass.ch"

#ifndef QT5XHB_NO_REQUESTS
REQUEST QSOURCELOCATION
REQUEST QURL
REQUEST QVARIANT
REQUEST QXMLNAME
REQUEST QXMLNODEMODELINDEX
#endif

CLASS QAbstractXmlNodeModel INHERIT QSharedData

   METHOD delete
   METHOD baseUri
   METHOD compareOrder
   METHOD documentUri
   METHOD elementById
   METHOD kind
   METHOD name
   METHOD namespaceBindings
   METHOD nodesByIdref
   METHOD root
   METHOD sourceLocation
   METHOD stringValue
   METHOD typedValue

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QAbstractXmlNodeModel
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#include <QtXmlPatterns/QAbstractXmlNodeModel>
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"

#ifdef __XHARBOUR__
#include <QtXmlPatterns/QAbstractXmlNodeModel>
#endif

#include <QtCore/QVariant>
#include <QtCore/QUrl>
#include <QtCore/QVector>
#include <QtXmlPatterns/QSourceLocation>

HB_FUNC_STATIC(QABSTRACTXMLNODEMODEL_DELETE)
{
  QAbstractXmlNodeModel *obj = (QAbstractXmlNodeModel *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
    delete obj;
    obj = NULL;
    PHB_ITEM ptr = hb_itemPutPtr(NULL, NULL);
    hb_objSendMsg(hb_stackSelfItem(), "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
virtual QUrl baseUri( const QXmlNodeModelIndex &n ) const = 0
*/
HB_FUNC_STATIC(QABSTRACTXMLNODEMODEL_BASEURI)
{
  QAbstractXmlNodeModel *obj = (QAbstractXmlNodeModel *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQXMLNODEMODELINDEX(1))
    {
#endif
      QUrl *ptr = new QUrl(obj->baseUri(*PQXMLNODEMODELINDEX(1)));
      Qt5xHb::createReturnClass(ptr, "QURL", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
virtual QXmlNodeModelIndex::DocumentOrder compareOrder( const QXmlNodeModelIndex &ni1, const QXmlNodeModelIndex &ni2 )
const = 0
*/
HB_FUNC_STATIC(QABSTRACTXMLNODEMODEL_COMPAREORDER)
{
  QAbstractXmlNodeModel *obj = (QAbstractXmlNodeModel *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && ISQXMLNODEMODELINDEX(1) && ISQXMLNODEMODELINDEX(2))
    {
#endif
      RENUM(obj->compareOrder(*PQXMLNODEMODELINDEX(1), *PQXMLNODEMODELINDEX(2)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
virtual QUrl documentUri( const QXmlNodeModelIndex &n ) const = 0
*/
HB_FUNC_STATIC(QABSTRACTXMLNODEMODEL_DOCUMENTURI)
{
  QAbstractXmlNodeModel *obj = (QAbstractXmlNodeModel *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQXMLNODEMODELINDEX(1))
    {
#endif
      QUrl *ptr = new QUrl(obj->documentUri(*PQXMLNODEMODELINDEX(1)));
      Qt5xHb::createReturnClass(ptr, "QURL", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
virtual QXmlNodeModelIndex elementById( const QXmlName &id ) const = 0
*/
HB_FUNC_STATIC(QABSTRACTXMLNODEMODEL_ELEMENTBYID)
{
  QAbstractXmlNodeModel *obj = (QAbstractXmlNodeModel *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQXMLNAME(1))
    {
#endif
      QXmlNodeModelIndex *ptr = new QXmlNodeModelIndex(obj->elementById(*PQXMLNAME(1)));
      Qt5xHb::createReturnClass(ptr, "QXMLNODEMODELINDEX", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
virtual QXmlNodeModelIndex::NodeKind kind( const QXmlNodeModelIndex &ni ) const = 0
*/
HB_FUNC_STATIC(QABSTRACTXMLNODEMODEL_KIND)
{
  QAbstractXmlNodeModel *obj = (QAbstractXmlNodeModel *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQXMLNODEMODELINDEX(1))
    {
#endif
      RENUM(obj->kind(*PQXMLNODEMODELINDEX(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
virtual QXmlName name( const QXmlNodeModelIndex &ni ) const = 0
*/
HB_FUNC_STATIC(QABSTRACTXMLNODEMODEL_NAME)
{
  QAbstractXmlNodeModel *obj = (QAbstractXmlNodeModel *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQXMLNODEMODELINDEX(1))
    {
#endif
      QXmlName *ptr = new QXmlName(obj->name(*PQXMLNODEMODELINDEX(1)));
      Qt5xHb::createReturnClass(ptr, "QXMLNAME", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
virtual QVector<QXmlName> namespaceBindings( const QXmlNodeModelIndex &n ) const = 0
*/
HB_FUNC_STATIC(QABSTRACTXMLNODEMODEL_NAMESPACEBINDINGS)
{
  QAbstractXmlNodeModel *obj = (QAbstractXmlNodeModel *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQXMLNODEMODELINDEX(1))
    {
#endif
      QVector<QXmlName> list = obj->namespaceBindings(*PQXMLNODEMODELINDEX(1));
      PHB_DYNS pDynSym = hb_dynsymFindName("QXMLNAME");
      PHB_ITEM pArray = hb_itemArrayNew(0);
      if (pDynSym != NULL)
      {
        for (int i = 0; i < list.count(); i++)
        {
          hb_vmPushDynSym(pDynSym);
          hb_vmPushNil();
          hb_vmDo(0);
          PHB_ITEM pObject = hb_itemNew(NULL);
          hb_itemCopy(pObject, hb_stackReturnItem());
          PHB_ITEM pItem = hb_itemPutPtr(NULL, new QXmlName(list[i]));
          hb_objSendMsg(pObject, "_POINTER", 1, pItem);
          hb_itemRelease(pItem);
          PHB_ITEM pDestroy = hb_itemPutL(NULL, true);
          hb_objSendMsg(pObject, "_SELF_DESTRUCTION", 1, pDestroy);
          hb_itemRelease(pDestroy);
          hb_arrayAddForward(pArray, pObject);
          hb_itemRelease(pObject);
        }
      }
      else
      {
        hb_errRT_BASE(EG_NOFUNC, 1001, NULL, "QXMLNAME", HB_ERR_ARGS_BASEPARAMS);
      }
      hb_itemReturnRelease(pArray);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
virtual QVector<QXmlNodeModelIndex> nodesByIdref( const QXmlName &idref ) const = 0
*/
HB_FUNC_STATIC(QABSTRACTXMLNODEMODEL_NODESBYIDREF)
{
  QAbstractXmlNodeModel *obj = (QAbstractXmlNodeModel *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQXMLNAME(1))
    {
#endif
      QVector<QXmlNodeModelIndex> list = obj->nodesByIdref(*PQXMLNAME(1));
      PHB_DYNS pDynSym = hb_dynsymFindName("QXMLNODEMODELINDEX");
      PHB_ITEM pArray = hb_itemArrayNew(0);
      if (pDynSym != NULL)
      {
        for (int i = 0; i < list.count(); i++)
        {
          hb_vmPushDynSym(pDynSym);
          hb_vmPushNil();
          hb_vmDo(0);
          PHB_ITEM pObject = hb_itemNew(NULL);
          hb_itemCopy(pObject, hb_stackReturnItem());
          PHB_ITEM pItem = hb_itemPutPtr(NULL, new QXmlNodeModelIndex(list[i]));
          hb_objSendMsg(pObject, "_POINTER", 1, pItem);
          hb_itemRelease(pItem);
          PHB_ITEM pDestroy = hb_itemPutL(NULL, true);
          hb_objSendMsg(pObject, "_SELF_DESTRUCTION", 1, pDestroy);
          hb_itemRelease(pDestroy);
          hb_arrayAddForward(pArray, pObject);
          hb_itemRelease(pObject);
        }
      }
      else
      {
        hb_errRT_BASE(EG_NOFUNC, 1001, NULL, "QXMLNODEMODELINDEX", HB_ERR_ARGS_BASEPARAMS);
      }
      hb_itemReturnRelease(pArray);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
virtual QXmlNodeModelIndex root( const QXmlNodeModelIndex &n ) const = 0
*/
HB_FUNC_STATIC(QABSTRACTXMLNODEMODEL_ROOT)
{
  QAbstractXmlNodeModel *obj = (QAbstractXmlNodeModel *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQXMLNODEMODELINDEX(1))
    {
#endif
      QXmlNodeModelIndex *ptr = new QXmlNodeModelIndex(obj->root(*PQXMLNODEMODELINDEX(1)));
      Qt5xHb::createReturnClass(ptr, "QXMLNODEMODELINDEX", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
QSourceLocation sourceLocation( const QXmlNodeModelIndex &index ) const
*/
HB_FUNC_STATIC(QABSTRACTXMLNODEMODEL_SOURCELOCATION)
{
  QAbstractXmlNodeModel *obj = (QAbstractXmlNodeModel *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQXMLNODEMODELINDEX(1))
    {
#endif
      QSourceLocation *ptr = new QSourceLocation(obj->sourceLocation(*PQXMLNODEMODELINDEX(1)));
      Qt5xHb::createReturnClass(ptr, "QSOURCELOCATION", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
virtual QString stringValue( const QXmlNodeModelIndex &n ) const = 0
*/
HB_FUNC_STATIC(QABSTRACTXMLNODEMODEL_STRINGVALUE)
{
  QAbstractXmlNodeModel *obj = (QAbstractXmlNodeModel *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQXMLNODEMODELINDEX(1))
    {
#endif
      RQSTRING(obj->stringValue(*PQXMLNODEMODELINDEX(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
virtual QVariant typedValue( const QXmlNodeModelIndex &node ) const = 0
*/
HB_FUNC_STATIC(QABSTRACTXMLNODEMODEL_TYPEDVALUE)
{
  QAbstractXmlNodeModel *obj = (QAbstractXmlNodeModel *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQXMLNODEMODELINDEX(1))
    {
#endif
      QVariant *ptr = new QVariant(obj->typedValue(*PQXMLNODEMODELINDEX(1)));
      Qt5xHb::createReturnClass(ptr, "QVARIANT", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

#pragma ENDDUMP
