//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT5XHB_NO_REQUESTS
REQUEST QBRUSH
REQUEST QCOLOR
REQUEST QFONT
REQUEST QPEN
#endif

CLASS QAbstractAxis INHERIT QObject

   METHOD delete
   METHOD isVisible
   METHOD setVisible
   METHOD isLineVisible
   METHOD setLineVisible
   METHOD linePen
   METHOD setLinePen
   METHOD linePenColor
   METHOD setLinePenColor
   METHOD isGridLineVisible
   METHOD setGridLineVisible
   METHOD gridLinePen
   METHOD setGridLinePen
   METHOD isMinorGridLineVisible
   METHOD setMinorGridLineVisible
   METHOD minorGridLinePen
   METHOD setMinorGridLinePen
   METHOD gridLineColor
   METHOD setGridLineColor
   METHOD minorGridLineColor
   METHOD setMinorGridLineColor
   METHOD labelsVisible
   METHOD setLabelsVisible
   METHOD labelsBrush
   METHOD setLabelsBrush
   METHOD labelsFont
   METHOD setLabelsFont
   METHOD labelsAngle
   METHOD setLabelsAngle
   METHOD labelsColor
   METHOD setLabelsColor
   METHOD isTitleVisible
   METHOD setTitleVisible
   METHOD titleBrush
   METHOD setTitleBrush
   METHOD titleFont
   METHOD setTitleFont
   METHOD titleText
   METHOD setTitleText
   METHOD shadesVisible
   METHOD setShadesVisible
   METHOD shadesPen
   METHOD setShadesPen
   METHOD shadesBrush
   METHOD setShadesBrush
   METHOD shadesColor
   METHOD setShadesColor
   METHOD shadesBorderColor
   METHOD setShadesBorderColor
   METHOD orientation
   METHOD alignment
   METHOD isReverse
   METHOD setReverse
   METHOD type
   METHOD show
   METHOD hide
   METHOD setMin
   METHOD setMax
   METHOD setRange

   METHOD onColorChanged
   METHOD onGridLineColorChanged
   METHOD onGridLinePenChanged
   METHOD onGridVisibleChanged
   METHOD onLabelsAngleChanged
   METHOD onLabelsBrushChanged
   METHOD onLabelsColorChanged
   METHOD onLabelsFontChanged
   METHOD onLabelsVisibleChanged
   METHOD onLinePenChanged
   METHOD onLineVisibleChanged
   METHOD onMinorGridLineColorChanged
   METHOD onMinorGridLinePenChanged
   METHOD onMinorGridVisibleChanged
   METHOD onReverseChanged
   METHOD onShadesBorderColorChanged
   METHOD onShadesBrushChanged
   METHOD onShadesColorChanged
   METHOD onShadesPenChanged
   METHOD onShadesVisibleChanged
   METHOD onTitleBrushChanged
   METHOD onTitleFontChanged
   METHOD onTitleTextChanged
   METHOD onTitleVisibleChanged
   METHOD onVisibleChanged

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QAbstractAxis
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
#include <QtCharts/QAbstractAxis>
#endif
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"
#include "qt5xhb_events.hpp"
#include "qt5xhb_signals.hpp"

#ifdef __XHARBOUR__
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
#include <QtCharts/QAbstractAxis>
#endif
#endif

    using namespace QtCharts;

/*
~QAbstractAxis()
*/
HB_FUNC_STATIC(QABSTRACTAXIS_DELETE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
    Qt5xHb::Events_disconnect_all_events(obj, true);
    Qt5xHb::Signals_disconnect_all_signals(obj, true);
    delete obj;
    obj = NULL;
    PHB_ITEM ptr = hb_itemPutPtr(NULL, NULL);
    hb_objSendMsg(hb_stackSelfItem(), "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
bool isVisible() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_ISVISIBLE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->isVisible());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setVisible( bool visible = true )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETVISIBLE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && ISLOGORNIL(1)) {
#endif
      obj->setVisible(OPBOOL(1, true));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
bool isLineVisible() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_ISLINEVISIBLE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->isLineVisible());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setLineVisible( bool visible = true )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETLINEVISIBLE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && ISLOGORNIL(1)) {
#endif
      obj->setLineVisible(OPBOOL(1, true));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QPen linePen() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_LINEPEN)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QPen *ptr = new QPen(obj->linePen());
      Qt5xHb::createReturnClass(ptr, "QPEN", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setLinePen( const QPen &pen )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETLINEPEN)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQPEN(1)) {
#endif
      obj->setLinePen(*PQPEN(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QColor linePenColor() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_LINEPENCOLOR)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QColor *ptr = new QColor(obj->linePenColor());
      Qt5xHb::createReturnClass(ptr, "QCOLOR", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setLinePenColor( QColor color )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETLINEPENCOLOR)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQCOLOR(1)) {
#endif
      obj->setLinePenColor(*PQCOLOR(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
bool isGridLineVisible() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_ISGRIDLINEVISIBLE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->isGridLineVisible());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setGridLineVisible( bool visible = true )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETGRIDLINEVISIBLE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && ISLOGORNIL(1)) {
#endif
      obj->setGridLineVisible(OPBOOL(1, true));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QPen gridLinePen() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_GRIDLINEPEN)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QPen *ptr = new QPen(obj->gridLinePen());
      Qt5xHb::createReturnClass(ptr, "QPEN", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setGridLinePen( const QPen &pen )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETGRIDLINEPEN)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQPEN(1)) {
#endif
      obj->setGridLinePen(*PQPEN(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
bool isMinorGridLineVisible() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_ISMINORGRIDLINEVISIBLE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->isMinorGridLineVisible());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setMinorGridLineVisible( bool visible = true )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETMINORGRIDLINEVISIBLE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && ISLOGORNIL(1)) {
#endif
      obj->setMinorGridLineVisible(OPBOOL(1, true));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QPen minorGridLinePen() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_MINORGRIDLINEPEN)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QPen *ptr = new QPen(obj->minorGridLinePen());
      Qt5xHb::createReturnClass(ptr, "QPEN", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setMinorGridLinePen( const QPen &pen )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETMINORGRIDLINEPEN)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQPEN(1)) {
#endif
      obj->setMinorGridLinePen(*PQPEN(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QColor gridLineColor()
*/
HB_FUNC_STATIC(QABSTRACTAXIS_GRIDLINECOLOR)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QColor *ptr = new QColor(obj->gridLineColor());
      Qt5xHb::createReturnClass(ptr, "QCOLOR", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setGridLineColor( const QColor &color )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETGRIDLINECOLOR)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && (ISQCOLOR(1) || HB_ISCHAR(1))) {
#endif
      obj->setGridLineColor(HB_ISOBJECT(1) ? *(QColor *)Qt5xHb::itemGetPtr(1) : QColor(hb_parc(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QColor minorGridLineColor()
*/
HB_FUNC_STATIC(QABSTRACTAXIS_MINORGRIDLINECOLOR)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QColor *ptr = new QColor(obj->minorGridLineColor());
      Qt5xHb::createReturnClass(ptr, "QCOLOR", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setMinorGridLineColor( const QColor &color )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETMINORGRIDLINECOLOR)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && (ISQCOLOR(1) || HB_ISCHAR(1))) {
#endif
      obj->setMinorGridLineColor(HB_ISOBJECT(1) ? *(QColor *)Qt5xHb::itemGetPtr(1) : QColor(hb_parc(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
bool labelsVisible() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_LABELSVISIBLE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->labelsVisible());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setLabelsVisible( bool visible = true )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETLABELSVISIBLE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && ISLOGORNIL(1)) {
#endif
      obj->setLabelsVisible(OPBOOL(1, true));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QBrush labelsBrush() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_LABELSBRUSH)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QBrush *ptr = new QBrush(obj->labelsBrush());
      Qt5xHb::createReturnClass(ptr, "QBRUSH", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setLabelsBrush( const QBrush &brush )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETLABELSBRUSH)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQBRUSH(1)) {
#endif
      obj->setLabelsBrush(*PQBRUSH(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QFont labelsFont() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_LABELSFONT)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QFont *ptr = new QFont(obj->labelsFont());
      Qt5xHb::createReturnClass(ptr, "QFONT", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setLabelsFont( const QFont &font )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETLABELSFONT)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQFONT(1)) {
#endif
      obj->setLabelsFont(*PQFONT(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
int labelsAngle() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_LABELSANGLE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RINT(obj->labelsAngle());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setLabelsAngle( int angle )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETLABELSANGLE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->setLabelsAngle(PINT(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QColor labelsColor() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_LABELSCOLOR)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QColor *ptr = new QColor(obj->labelsColor());
      Qt5xHb::createReturnClass(ptr, "QCOLOR", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setLabelsColor( QColor color )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETLABELSCOLOR)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQCOLOR(1)) {
#endif
      obj->setLabelsColor(*PQCOLOR(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
bool isTitleVisible() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_ISTITLEVISIBLE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->isTitleVisible());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setTitleVisible( bool visible = true )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETTITLEVISIBLE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && ISLOGORNIL(1)) {
#endif
      obj->setTitleVisible(OPBOOL(1, true));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QBrush titleBrush() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_TITLEBRUSH)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QBrush *ptr = new QBrush(obj->titleBrush());
      Qt5xHb::createReturnClass(ptr, "QBRUSH", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setTitleBrush( const QBrush &brush )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETTITLEBRUSH)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQBRUSH(1)) {
#endif
      obj->setTitleBrush(*PQBRUSH(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QFont titleFont() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_TITLEFONT)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QFont *ptr = new QFont(obj->titleFont());
      Qt5xHb::createReturnClass(ptr, "QFONT", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setTitleFont( const QFont &font )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETTITLEFONT)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQFONT(1)) {
#endif
      obj->setTitleFont(*PQFONT(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QString titleText() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_TITLETEXT)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQSTRING(obj->titleText());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setTitleText( const QString &title )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETTITLETEXT)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISCHAR(1)) {
#endif
      obj->setTitleText(PQSTRING(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
bool shadesVisible() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SHADESVISIBLE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->shadesVisible());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setShadesVisible( bool visible = true )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETSHADESVISIBLE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && ISLOGORNIL(1)) {
#endif
      obj->setShadesVisible(OPBOOL(1, true));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QPen shadesPen() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SHADESPEN)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QPen *ptr = new QPen(obj->shadesPen());
      Qt5xHb::createReturnClass(ptr, "QPEN", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setShadesPen( const QPen &pen )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETSHADESPEN)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQPEN(1)) {
#endif
      obj->setShadesPen(*PQPEN(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QBrush shadesBrush() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SHADESBRUSH)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QBrush *ptr = new QBrush(obj->shadesBrush());
      Qt5xHb::createReturnClass(ptr, "QBRUSH", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setShadesBrush( const QBrush &brush )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETSHADESBRUSH)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQBRUSH(1)) {
#endif
      obj->setShadesBrush(*PQBRUSH(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QColor shadesColor() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SHADESCOLOR)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QColor *ptr = new QColor(obj->shadesColor());
      Qt5xHb::createReturnClass(ptr, "QCOLOR", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setShadesColor( QColor color )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETSHADESCOLOR)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQCOLOR(1)) {
#endif
      obj->setShadesColor(*PQCOLOR(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QColor shadesBorderColor() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SHADESBORDERCOLOR)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      QColor *ptr = new QColor(obj->shadesBorderColor());
      Qt5xHb::createReturnClass(ptr, "QCOLOR", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setShadesBorderColor( QColor color )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETSHADESBORDERCOLOR)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQCOLOR(1)) {
#endif
      obj->setShadesBorderColor(*PQCOLOR(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
Qt::Orientation orientation() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_ORIENTATION)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->orientation());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
Qt::Alignment alignment() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_ALIGNMENT)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->alignment());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
bool isReverse() const
*/
HB_FUNC_STATIC(QABSTRACTAXIS_ISREVERSE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->isReverse());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setReverse( bool reverse = true )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETREVERSE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISBETWEEN(0, 1) && ISLOGORNIL(1)) {
#endif
      obj->setReverse(OPBOOL(1, true));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
virtual QAbstractAxis::AxisType type() const = 0
*/
HB_FUNC_STATIC(QABSTRACTAXIS_TYPE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RENUM(obj->type());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void show()
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SHOW)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      obj->show();
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
void hide()
*/
HB_FUNC_STATIC(QABSTRACTAXIS_HIDE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      obj->hide();
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
void setMin( const QVariant &min )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETMIN)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQVARIANT(1)) {
#endif
      obj->setMin(*PQVARIANT(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
void setMax( const QVariant &max )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETMAX)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQVARIANT(1)) {
#endif
      obj->setMax(*PQVARIANT(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
void setRange( const QVariant &min, const QVariant &max )
*/
HB_FUNC_STATIC(QABSTRACTAXIS_SETRANGE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxis *obj = (QAbstractAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && ISQVARIANT(1) && ISQVARIANT(2)) {
#endif
      obj->setRange(*PQVARIANT(1), *PQVARIANT(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

void QAbstractAxisSlots_connect_signal(const QString &signal, const QString &slot);

HB_FUNC_STATIC(QABSTRACTAXIS_ONCOLORCHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("colorChanged(QColor)", "colorChanged(QColor)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONGRIDLINECOLORCHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("gridLineColorChanged(QColor)", "gridLineColorChanged(QColor)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONGRIDLINEPENCHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("gridLinePenChanged(QPen)", "gridLinePenChanged(QPen)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONGRIDVISIBLECHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("gridVisibleChanged(bool)", "gridVisibleChanged(bool)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONLABELSANGLECHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("labelsAngleChanged(int)", "labelsAngleChanged(int)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONLABELSBRUSHCHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("labelsBrushChanged(QBrush)", "labelsBrushChanged(QBrush)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONLABELSCOLORCHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("labelsColorChanged(QColor)", "labelsColorChanged(QColor)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONLABELSFONTCHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("labelsFontChanged(QFont)", "labelsFontChanged(QFont)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONLABELSVISIBLECHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("labelsVisibleChanged(bool)", "labelsVisibleChanged(bool)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONLINEPENCHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("linePenChanged(QPen)", "linePenChanged(QPen)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONLINEVISIBLECHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("lineVisibleChanged(bool)", "lineVisibleChanged(bool)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONMINORGRIDLINECOLORCHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("minorGridLineColorChanged(QColor)", "minorGridLineColorChanged(QColor)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONMINORGRIDLINEPENCHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("minorGridLinePenChanged(QPen)", "minorGridLinePenChanged(QPen)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONMINORGRIDVISIBLECHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("minorGridVisibleChanged(bool)", "minorGridVisibleChanged(bool)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONREVERSECHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("reverseChanged(bool)", "reverseChanged(bool)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONSHADESBORDERCOLORCHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("shadesBorderColorChanged(QColor)", "shadesBorderColorChanged(QColor)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONSHADESBRUSHCHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("shadesBrushChanged(QBrush)", "shadesBrushChanged(QBrush)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONSHADESCOLORCHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("shadesColorChanged(QColor)", "shadesColorChanged(QColor)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONSHADESPENCHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("shadesPenChanged(QPen)", "shadesPenChanged(QPen)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONSHADESVISIBLECHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("shadesVisibleChanged(bool)", "shadesVisibleChanged(bool)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONTITLEBRUSHCHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("titleBrushChanged(QBrush)", "titleBrushChanged(QBrush)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONTITLEFONTCHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("titleFontChanged(QFont)", "titleFontChanged(QFont)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONTITLETEXTCHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("titleTextChanged(QString)", "titleTextChanged(QString)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONTITLEVISIBLECHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("titleVisibleChanged(bool)", "titleVisibleChanged(bool)");
#else
  hb_retl(false);
#endif
}

HB_FUNC_STATIC(QABSTRACTAXIS_ONVISIBLECHANGED)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QAbstractAxisSlots_connect_signal("visibleChanged(bool)", "visibleChanged(bool)");
#else
  hb_retl(false);
#endif
}

#pragma ENDDUMP
