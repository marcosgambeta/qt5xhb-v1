//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta AT outlook DOT com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

#include "QBarCategoryAxisSlots.hpp"

QBarCategoryAxisSlots::QBarCategoryAxisSlots(QObject *parent) : QObject(parent)
{
}

QBarCategoryAxisSlots::~QBarCategoryAxisSlots()
{
}

#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
void QBarCategoryAxisSlots::categoriesChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "categoriesChanged()");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QBARCATEGORYAXIS");

    hb_vmEvalBlockV(cb, 1, psender);

    hb_itemRelease(psender);
  }
}
#endif

#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
void QBarCategoryAxisSlots::countChanged()
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "countChanged()");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QBARCATEGORYAXIS");

    hb_vmEvalBlockV(cb, 1, psender);

    hb_itemRelease(psender);
  }
}
#endif

#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
void QBarCategoryAxisSlots::maxChanged(const QString &max)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "maxChanged(QString)");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QBARCATEGORYAXIS");
    PHB_ITEM pmax = hb_itemPutC(NULL, QSTRINGTOSTRING(max));

    hb_vmEvalBlockV(cb, 2, psender, pmax);

    hb_itemRelease(psender);
    hb_itemRelease(pmax);
  }
}
#endif

#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
void QBarCategoryAxisSlots::minChanged(const QString &min)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "minChanged(QString)");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QBARCATEGORYAXIS");
    PHB_ITEM pmin = hb_itemPutC(NULL, QSTRINGTOSTRING(min));

    hb_vmEvalBlockV(cb, 2, psender, pmin);

    hb_itemRelease(psender);
    hb_itemRelease(pmin);
  }
}
#endif

#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
void QBarCategoryAxisSlots::rangeChanged(const QString &min, const QString &max)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "rangeChanged(QString,QString)");

  if (cb != NULL)
  {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QBARCATEGORYAXIS");
    PHB_ITEM pmin = hb_itemPutC(NULL, QSTRINGTOSTRING(min));
    PHB_ITEM pmax = hb_itemPutC(NULL, QSTRINGTOSTRING(max));

    hb_vmEvalBlockV(cb, 3, psender, pmin, pmax);

    hb_itemRelease(psender);
    hb_itemRelease(pmin);
    hb_itemRelease(pmax);
  }
}
#endif

void QBarCategoryAxisSlots_connect_signal(const QString &signal, const QString &slot)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 7, 0))
  QBarCategoryAxis *obj = (QBarCategoryAxis *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL)
  {
    QBarCategoryAxisSlots *s = QCoreApplication::instance()->findChild<QBarCategoryAxisSlots *>();

    if (s == NULL)
    {
      s = new QBarCategoryAxisSlots();
      s->moveToThread(QCoreApplication::instance()->thread());
      s->setParent(QCoreApplication::instance());
    }

    hb_retl(Qt5xHb::Signals_connection_disconnection(s, signal, slot));
  }
  else
  {
    hb_retl(false);
  }
#else
  hb_retl(false);
#endif
}
