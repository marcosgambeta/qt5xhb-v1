//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

#include "QNetworkConfigurationManagerSlots.hpp"

QNetworkConfigurationManagerSlots::QNetworkConfigurationManagerSlots(QObject *parent) : QObject(parent)
{
}

QNetworkConfigurationManagerSlots::~QNetworkConfigurationManagerSlots()
{
}

void QNetworkConfigurationManagerSlots::configurationAdded(const QNetworkConfiguration &config)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "configurationAdded(QNetworkConfiguration)");

  if (cb != NULL) {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QNETWORKCONFIGURATIONMANAGER");
    PHB_ITEM pconfig = Qt5xHb::Signals_return_object((void *)&config, "QNETWORKCONFIGURATION");

    hb_vmEvalBlockV(cb, 2, psender, pconfig);

    hb_itemRelease(psender);
    hb_itemRelease(pconfig);
  }
}

void QNetworkConfigurationManagerSlots::configurationChanged(const QNetworkConfiguration &config)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "configurationChanged(QNetworkConfiguration)");

  if (cb != NULL) {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QNETWORKCONFIGURATIONMANAGER");
    PHB_ITEM pconfig = Qt5xHb::Signals_return_object((void *)&config, "QNETWORKCONFIGURATION");

    hb_vmEvalBlockV(cb, 2, psender, pconfig);

    hb_itemRelease(psender);
    hb_itemRelease(pconfig);
  }
}

void QNetworkConfigurationManagerSlots::configurationRemoved(const QNetworkConfiguration &config)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "configurationRemoved(QNetworkConfiguration)");

  if (cb != NULL) {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QNETWORKCONFIGURATIONMANAGER");
    PHB_ITEM pconfig = Qt5xHb::Signals_return_object((void *)&config, "QNETWORKCONFIGURATION");

    hb_vmEvalBlockV(cb, 2, psender, pconfig);

    hb_itemRelease(psender);
    hb_itemRelease(pconfig);
  }
}

void QNetworkConfigurationManagerSlots::onlineStateChanged(bool isOnline)
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "onlineStateChanged(bool)");

  if (cb != NULL) {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QNETWORKCONFIGURATIONMANAGER");
    PHB_ITEM pisOnline = hb_itemPutL(NULL, isOnline);

    hb_vmEvalBlockV(cb, 2, psender, pisOnline);

    hb_itemRelease(psender);
    hb_itemRelease(pisOnline);
  }
}

void QNetworkConfigurationManagerSlots::updateCompleted()
{
  QObject *object = qobject_cast<QObject *>(sender());

  PHB_ITEM cb = Qt5xHb::Signals_return_codeblock(object, "updateCompleted()");

  if (cb != NULL) {
    PHB_ITEM psender = Qt5xHb::Signals_return_qobject(object, "QNETWORKCONFIGURATIONMANAGER");

    hb_vmEvalBlockV(cb, 1, psender);

    hb_itemRelease(psender);
  }
}

void QNetworkConfigurationManagerSlots_connect_signal(const QString &signal, const QString &slot)
{
  QNetworkConfigurationManager *obj = (QNetworkConfigurationManager *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
    QNetworkConfigurationManagerSlots *s =
        QCoreApplication::instance()->findChild<QNetworkConfigurationManagerSlots *>();

    if (s == NULL) {
      s = new QNetworkConfigurationManagerSlots();
      s->moveToThread(QCoreApplication::instance()->thread());
      s->setParent(QCoreApplication::instance());
    }

    hb_retl(Qt5xHb::Signals_connection_disconnection(s, signal, slot));
  } else {
    hb_retl(false);
  }
}
