//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT5XHB_NO_REQUESTS
#endif

CLASS QWebEngineSettings

   DATA pointer
   DATA self_destruction INIT .F.

   METHOD globalSettings
   METHOD fontFamily
   METHOD setFontFamily
   METHOD resetFontFamily
   METHOD fontSize
   METHOD setFontSize
   METHOD resetFontSize
   METHOD setAttribute
   METHOD testAttribute
   METHOD resetAttribute
   METHOD defaultTextEncoding
   METHOD setDefaultTextEncoding

   METHOD newFrom
   METHOD newFromObject
   METHOD newFromPointer
   METHOD selfDestruction
   METHOD setSelfDestruction

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QWebEngineSettings
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
#include <QtWebEngineWidgets/QWebEngineSettings>
#endif
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"

#ifdef __XHARBOUR__
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
#include <QtWebEngineWidgets/QWebEngineSettings>
#endif
#endif

    /*
    static QWebEngineSettings * globalSettings()
    */
HB_FUNC_STATIC(QWEBENGINESETTINGS_GLOBALSETTINGS)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  if (ISNUMPAR(0)) {
#endif
    QWebEngineSettings *ptr = QWebEngineSettings::globalSettings();
    Qt5xHb::createReturnClass(ptr, "QWEBENGINESETTINGS", false);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
#endif
#endif
}

/*
QString fontFamily( QWebEngineSettings::FontFamily which ) const
*/
HB_FUNC_STATIC(QWEBENGINESETTINGS_FONTFAMILY)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  QWebEngineSettings *obj = (QWebEngineSettings *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      RQSTRING(obj->fontFamily((QWebEngineSettings::FontFamily)hb_parni(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setFontFamily( QWebEngineSettings::FontFamily which, const QString &family )
*/
HB_FUNC_STATIC(QWEBENGINESETTINGS_SETFONTFAMILY)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  QWebEngineSettings *obj = (QWebEngineSettings *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISCHAR(2)) {
#endif
      obj->setFontFamily((QWebEngineSettings::FontFamily)hb_parni(1), PQSTRING(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
void resetFontFamily( QWebEngineSettings::FontFamily which )
*/
HB_FUNC_STATIC(QWEBENGINESETTINGS_RESETFONTFAMILY)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  QWebEngineSettings *obj = (QWebEngineSettings *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->resetFontFamily((QWebEngineSettings::FontFamily)hb_parni(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
int fontSize( QWebEngineSettings::FontSize type ) const
*/
HB_FUNC_STATIC(QWEBENGINESETTINGS_FONTSIZE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  QWebEngineSettings *obj = (QWebEngineSettings *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      RINT(obj->fontSize((QWebEngineSettings::FontSize)hb_parni(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setFontSize( QWebEngineSettings::FontSize type, int size )
*/
HB_FUNC_STATIC(QWEBENGINESETTINGS_SETFONTSIZE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  QWebEngineSettings *obj = (QWebEngineSettings *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISNUM(2)) {
#endif
      obj->setFontSize((QWebEngineSettings::FontSize)hb_parni(1), PINT(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
void resetFontSize( QWebEngineSettings::FontSize type )
*/
HB_FUNC_STATIC(QWEBENGINESETTINGS_RESETFONTSIZE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  QWebEngineSettings *obj = (QWebEngineSettings *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->resetFontSize((QWebEngineSettings::FontSize)hb_parni(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
void setAttribute( QWebEngineSettings::WebAttribute attr, bool on )
*/
HB_FUNC_STATIC(QWEBENGINESETTINGS_SETATTRIBUTE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  QWebEngineSettings *obj = (QWebEngineSettings *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISLOG(2)) {
#endif
      obj->setAttribute((QWebEngineSettings::WebAttribute)hb_parni(1), PBOOL(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
bool testAttribute( QWebEngineSettings::WebAttribute attr ) const
*/
HB_FUNC_STATIC(QWEBENGINESETTINGS_TESTATTRIBUTE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  QWebEngineSettings *obj = (QWebEngineSettings *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      RBOOL(obj->testAttribute((QWebEngineSettings::WebAttribute)hb_parni(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void resetAttribute( QWebEngineSettings::WebAttribute attr )
*/
HB_FUNC_STATIC(QWEBENGINESETTINGS_RESETATTRIBUTE)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  QWebEngineSettings *obj = (QWebEngineSettings *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->resetAttribute((QWebEngineSettings::WebAttribute)hb_parni(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

/*
QString defaultTextEncoding() const
*/
HB_FUNC_STATIC(QWEBENGINESETTINGS_DEFAULTTEXTENCODING)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  QWebEngineSettings *obj = (QWebEngineSettings *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RQSTRING(obj->defaultTextEncoding());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
#endif
}

/*
void setDefaultTextEncoding( const QString &encoding )
*/
HB_FUNC_STATIC(QWEBENGINESETTINGS_SETDEFAULTTEXTENCODING)
{
#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
  QWebEngineSettings *obj = (QWebEngineSettings *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISCHAR(1)) {
#endif
      obj->setDefaultTextEncoding(PQSTRING(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
#endif
}

HB_FUNC_STATIC(QWEBENGINESETTINGS_NEWFROM)
{
  PHB_ITEM self = hb_stackSelfItem();

  if (hb_pcount() == 1 && HB_ISOBJECT(1)) {
    PHB_ITEM ptr = hb_itemPutPtr(NULL, hb_itemGetPtr(hb_objSendMsg(hb_param(1, HB_IT_OBJECT), "POINTER", 0)));
    hb_objSendMsg(self, "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
    PHB_ITEM des = hb_itemPutL(NULL, false);
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else if (hb_pcount() == 1 && HB_ISPOINTER(1)) {
    PHB_ITEM ptr = hb_itemPutPtr(NULL, hb_itemGetPtr(hb_param(1, HB_IT_POINTER)));
    hb_objSendMsg(self, "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
    PHB_ITEM des = hb_itemPutL(NULL, false);
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }

  hb_itemReturn(self);
}

HB_FUNC_STATIC(QWEBENGINESETTINGS_NEWFROMOBJECT)
{
  HB_FUNC_EXEC(QWEBENGINESETTINGS_NEWFROM);
}

HB_FUNC_STATIC(QWEBENGINESETTINGS_NEWFROMPOINTER)
{
  HB_FUNC_EXEC(QWEBENGINESETTINGS_NEWFROM);
}

HB_FUNC_STATIC(QWEBENGINESETTINGS_SELFDESTRUCTION)
{
  hb_retl(hb_itemGetL(hb_objSendMsg(hb_stackSelfItem(), "SELF_DESTRUCTION", 0)));
}

HB_FUNC_STATIC(QWEBENGINESETTINGS_SETSELFDESTRUCTION)
{
  PHB_ITEM self = hb_stackSelfItem();

  if (hb_pcount() == 1 && HB_ISLOG(1)) {
    PHB_ITEM des = hb_itemPutL(NULL, hb_parl(1));
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }

  hb_itemReturn(self);
}

#pragma ENDDUMP
