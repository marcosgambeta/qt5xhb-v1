//
// Qt5xHb - Bindings libraries for Harbour/xHarbour and Qt Framework 5
//
// Copyright (c) 2025 Marcos Antonio Gambeta <marcosgambeta@outlook.com>
//

// DO NOT EDIT THIS FILE - the content was created using a source code generator

// clang-format off

#include <hbclass.ch>

#ifndef QT5XHB_NO_REQUESTS
REQUEST QSQLFIELD
REQUEST QVARIANT
#endif

CLASS QSqlRecord

   DATA pointer
   DATA self_destruction INIT .F.

   METHOD new
   METHOD delete
   METHOD append
   METHOD clear
   METHOD clearValues
   METHOD contains
   METHOD count
   METHOD field
   METHOD fieldName
   METHOD indexOf
   METHOD insert
   METHOD isEmpty
   METHOD isGenerated
   METHOD isNull
   METHOD remove
   METHOD replace
   METHOD setGenerated
   METHOD setNull
   METHOD setValue
   METHOD value
   METHOD keyValues

   METHOD newFrom
   METHOD newFromObject
   METHOD newFromPointer
   METHOD selfDestruction
   METHOD setSelfDestruction

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QSqlRecord
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

// clang-format on

#pragma BEGINDUMP

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#include <QtSql/QSqlRecord>
#endif

#include "qt5xhb_common.hpp"
#include "qt5xhb_macros.hpp"
#include "qt5xhb_utils.hpp"

#ifdef __XHARBOUR__
#include <QtSql/QSqlRecord>
#endif

#include <QtSql/QSqlField>
#include <QtCore/QVariant>

HB_FUNC_STATIC(QSQLRECORD_NEW)
{
  if (ISNUMPAR(0)) {
    /*
    QSqlRecord()
    */
    QSqlRecord *obj = new QSqlRecord();
    Qt5xHb::returnNewObject(obj, true);
  } else if (ISNUMPAR(1) && ISQSQLRECORD(1)) {
    /*
    QSqlRecord( const QSqlRecord &other )
    */
    QSqlRecord *obj = new QSqlRecord(*PQSQLRECORD(1));
    Qt5xHb::returnNewObject(obj, true);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QSQLRECORD_DELETE)
{
  QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
    delete obj;
    obj = NULL;
    PHB_ITEM ptr = hb_itemPutPtr(NULL, NULL);
    hb_objSendMsg(hb_stackSelfItem(), "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void append( const QSqlField &field )
*/
HB_FUNC_STATIC(QSQLRECORD_APPEND)
{
  QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQSQLFIELD(1)) {
#endif
      obj->append(*PQSQLFIELD(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void clear()
*/
HB_FUNC_STATIC(QSQLRECORD_CLEAR)
{
  QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      obj->clear();
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void clearValues()
*/
HB_FUNC_STATIC(QSQLRECORD_CLEARVALUES)
{
  QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      obj->clearValues();
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
bool contains( const QString &name ) const
*/
HB_FUNC_STATIC(QSQLRECORD_CONTAINS)
{
  QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISCHAR(1)) {
#endif
      RBOOL(obj->contains(PQSTRING(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int count() const
*/
HB_FUNC_STATIC(QSQLRECORD_COUNT)
{
  QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RINT(obj->count());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QSQLRECORD_FIELD)
{
  if (ISNUMPAR(1) && HB_ISNUM(1)) {
    /*
    QSqlField field( int index ) const
    */
    QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QSqlField *ptr = new QSqlField(obj->field(PINT(1)));
      Qt5xHb::createReturnClass(ptr, "QSQLFIELD", true);
    }
  } else if (ISNUMPAR(1) && HB_ISCHAR(1)) {
    /*
    QSqlField field( const QString &name ) const
    */
    QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QSqlField *ptr = new QSqlField(obj->field(PQSTRING(1)));
      Qt5xHb::createReturnClass(ptr, "QSQLFIELD", true);
    }
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
QString fieldName( int index ) const
*/
HB_FUNC_STATIC(QSQLRECORD_FIELDNAME)
{
  QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      RQSTRING(obj->fieldName(PINT(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
int indexOf( const QString &name ) const
*/
HB_FUNC_STATIC(QSQLRECORD_INDEXOF)
{
  QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISCHAR(1)) {
#endif
      RINT(obj->indexOf(PQSTRING(1)));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

/*
void insert( int pos, const QSqlField &field )
*/
HB_FUNC_STATIC(QSQLRECORD_INSERT)
{
  QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && ISQSQLFIELD(2)) {
#endif
      obj->insert(PINT(1), *PQSQLFIELD(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
bool isEmpty() const
*/
HB_FUNC_STATIC(QSQLRECORD_ISEMPTY)
{
  QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(0)) {
#endif
      RBOOL(obj->isEmpty());
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QSQLRECORD_ISGENERATED)
{
  if (ISNUMPAR(1) && HB_ISCHAR(1)) {
    /*
    bool isGenerated( const QString &name ) const
    */
    QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      RBOOL(obj->isGenerated(PQSTRING(1)));
    }
  } else if (ISNUMPAR(1) && HB_ISNUM(1)) {
    /*
    bool isGenerated( int index ) const
    */
    QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      RBOOL(obj->isGenerated(PINT(1)));
    }
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QSQLRECORD_ISNULL)
{
  if (ISNUMPAR(1) && HB_ISCHAR(1)) {
    /*
    bool isNull( const QString &name ) const
    */
    QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      RBOOL(obj->isNull(PQSTRING(1)));
    }
  } else if (ISNUMPAR(1) && HB_ISNUM(1)) {
    /*
    bool isNull( int index ) const
    */
    QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      RBOOL(obj->isNull(PINT(1)));
    }
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
void remove( int pos )
*/
HB_FUNC_STATIC(QSQLRECORD_REMOVE)
{
  QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && HB_ISNUM(1)) {
#endif
      obj->remove(PINT(1));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

/*
void replace( int pos, const QSqlField &field )
*/
HB_FUNC_STATIC(QSQLRECORD_REPLACE)
{
  QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(2) && HB_ISNUM(1) && ISQSQLFIELD(2)) {
#endif
      obj->replace(PINT(1), *PQSQLFIELD(2));
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }

  hb_itemReturn(hb_stackSelfItem());
}

HB_FUNC_STATIC(QSQLRECORD_SETGENERATED)
{
  if (ISNUMPAR(2) && HB_ISCHAR(1) && HB_ISLOG(2)) {
    /*
    void setGenerated( const QString &name, bool generated )
    */
    QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setGenerated(PQSTRING(1), PBOOL(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && HB_ISNUM(1) && HB_ISLOG(2)) {
    /*
    void setGenerated( int index, bool generated )
    */
    QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setGenerated(PINT(1), PBOOL(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QSQLRECORD_SETNULL)
{
  if (ISNUMPAR(1) && HB_ISNUM(1)) {
    /*
    void setNull( int index )
    */
    QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setNull(PINT(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(1) && HB_ISCHAR(1)) {
    /*
    void setNull( const QString &name )
    */
    QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setNull(PQSTRING(1));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QSQLRECORD_SETVALUE)
{
  if (ISNUMPAR(2) && HB_ISNUM(1) && ISQVARIANT(2)) {
    /*
    void setValue( int index, const QVariant &val )
    */
    QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setValue(PINT(1), *PQVARIANT(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else if (ISNUMPAR(2) && HB_ISCHAR(1) && ISQVARIANT(2)) {
    /*
    void setValue( const QString &name, const QVariant &val )
    */
    QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      obj->setValue(PQSTRING(1), *PQVARIANT(2));
    }

    hb_itemReturn(hb_stackSelfItem());
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

HB_FUNC_STATIC(QSQLRECORD_VALUE)
{
  if (ISNUMPAR(1) && HB_ISNUM(1)) {
    /*
    QVariant value( int index ) const
    */
    QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QVariant *ptr = new QVariant(obj->value(PINT(1)));
      Qt5xHb::createReturnClass(ptr, "QVARIANT", true);
    }
  } else if (ISNUMPAR(1) && HB_ISCHAR(1)) {
    /*
    QVariant value( const QString &name ) const
    */
    QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

    if (obj != NULL) {
      QVariant *ptr = new QVariant(obj->value(PQSTRING(1)));
      Qt5xHb::createReturnClass(ptr, "QVARIANT", true);
    }
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }
}

/*
QSqlRecord keyValues( const QSqlRecord &keyFields ) const
*/
HB_FUNC_STATIC(QSQLRECORD_KEYVALUES)
{
  QSqlRecord *obj = (QSqlRecord *)Qt5xHb::itemGetPtrStackSelfItem();

  if (obj != NULL) {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if (ISNUMPAR(1) && ISQSQLRECORD(1)) {
#endif
      QSqlRecord *ptr = new QSqlRecord(obj->keyValues(*PQSQLRECORD(1)));
      Qt5xHb::createReturnClass(ptr, "QSQLRECORD", true);
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    } else {
      hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
    }
#endif
  }
}

HB_FUNC_STATIC(QSQLRECORD_NEWFROM)
{
  PHB_ITEM self = hb_stackSelfItem();

  if (hb_pcount() == 1 && HB_ISOBJECT(1)) {
    PHB_ITEM ptr = hb_itemPutPtr(NULL, hb_itemGetPtr(hb_objSendMsg(hb_param(1, HB_IT_OBJECT), "POINTER", 0)));
    hb_objSendMsg(self, "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
    PHB_ITEM des = hb_itemPutL(NULL, false);
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else if (hb_pcount() == 1 && HB_ISPOINTER(1)) {
    PHB_ITEM ptr = hb_itemPutPtr(NULL, hb_itemGetPtr(hb_param(1, HB_IT_POINTER)));
    hb_objSendMsg(self, "_POINTER", 1, ptr);
    hb_itemRelease(ptr);
    PHB_ITEM des = hb_itemPutL(NULL, false);
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }

  hb_itemReturn(self);
}

HB_FUNC_STATIC(QSQLRECORD_NEWFROMOBJECT)
{
  HB_FUNC_EXEC(QSQLRECORD_NEWFROM);
}

HB_FUNC_STATIC(QSQLRECORD_NEWFROMPOINTER)
{
  HB_FUNC_EXEC(QSQLRECORD_NEWFROM);
}

HB_FUNC_STATIC(QSQLRECORD_SELFDESTRUCTION)
{
  hb_retl(hb_itemGetL(hb_objSendMsg(hb_stackSelfItem(), "SELF_DESTRUCTION", 0)));
}

HB_FUNC_STATIC(QSQLRECORD_SETSELFDESTRUCTION)
{
  PHB_ITEM self = hb_stackSelfItem();

  if (hb_pcount() == 1 && HB_ISLOG(1)) {
    PHB_ITEM des = hb_itemPutL(NULL, hb_parl(1));
    hb_objSendMsg(self, "_SELF_DESTRUCTION", 1, des);
    hb_itemRelease(des);
  } else {
    hb_errRT_BASE(EG_ARG, 3012, NULL, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS);
  }

  hb_itemReturn(self);
}

#pragma ENDDUMP
